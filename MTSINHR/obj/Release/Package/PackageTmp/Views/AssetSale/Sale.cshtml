@model MTSINHR.Models.AssetSale
<script src="~/Scripts/ValidationFunction.js"></script>
<script src="~/Scripts/bootbox.min.js"></script>
@System.Web.Optimization.Scripts.Render("~/bundles/datepicker")
@System.Web.Optimization.Styles.Render("~/bundles/datepickercss")

<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/select2.min.js"></script>
@*@{
    List<SelectListItem> TypeOfSale = new List<SelectListItem>();

    TypeOfSale.Add(new SelectListItem
    {
        Text = "Outside Sale",
        Value = "0",

    });
    TypeOfSale.Add(new SelectListItem
    {
        Text = "Retails Sale",
        Value = "1"
    });

}*@
<style>
    .requir {
        border-left: 2px solid red !important;
    }
</style>
<script>
    var assetSale = [];
    var assetDetail=[];

    $(document).ready(function () {

    //    getPurchasedDate();
        $('.select2cls').select2({ "width": "100%" });
        $("#AssetName").prop('disabled', true);
        $("#Item").prop('disabled', true);
        $('#Date').datepicker({
           // startDate: assetDetail[0].Purchased_Date,
            format: 'mm/dd/yyyy',
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            endDate: '+0d',
        }).keydown(function (e) {

            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#Date').val('');
            }
        });
        $('#ApprovedDate').datepicker({

            format: 'mm/dd/yyyy',
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            endDate: '+0d',
        }).keydown(function (e) {

            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#ApprovedDate').val('');
            }
        });
        $("#AssetTypeId").on('change', function () {


            if ($('#AssetTypeId').val() != null && $('#AssetTypeId').val() != '') {
                $("#AssetName").prop('disabled', false);
                var getValue = $(this).val();
                getdata(getValue);
            }
            else {
                $('#AssetName').val('');
                $('#AssetName').prop("disabled", true);
                $('#AssetName').trigger('change');
            }

        });
        $("#AssetName").on('change', function () {

            if ($('#AssetName').val() != null && $('#AssetName').val() != '') {
                $("#Item").prop('disabled', false);
                var getassettype = $("#AssetTypeId").val();
                var getassetname = $("#AssetName").val();
                getitem(getassettype, getassetname);
              
               
            }
            else {
                $("#Item").val('');
                $('#Item ').select2('val', '');
                $("#Item").prop('disabled', true);
            }

        });
    

        $("#Item").on('change', function () {
            if ($('#Item').val() != null && $('#Item').val() != '') {

                getPurchasedDate();
            }

            else {
                $('#Date, #ApprovedDate').datepicker('setStartDate', false);

            }


        });
     //   $('#Date').datepicker('setStartDate', new Date(assetDetail[0].Purchased_Date));

        function getdata(getValue) {

            $.ajax({
                type: "post",
                url: '@Url.Content("~/AssetMaintenanceDetails/AssetName")?id=' + getValue,
                success: function (result) {
                    if (result.success == true) {
                        $("#AssetName").empty();
                        $.each(JSON.parse(result.AssetList), function (i, Val) { $("#AssetName").append('<option value="' + Val.Value + '">' + Val.Text + '') });
                        $("#AssetName").val(@ViewBag.AssetNames);
                        $('#AssetName').trigger('change');
                    }
                }
            })
        }
        function getitem(getassettype, getassetname) {

            $.ajax({
                type: "post",
                url: '@Url.Content("~/AssetMaintenanceDetails/Item")?Assettypeid=' + getassettype + "&Assetnameid=" + getassetname,
                success: function (result) {
                    if (result.success == true) {
                        $("#Item").empty();
                        $.each(JSON.parse(result.AssetList),
                            function (i, Val) { $("#Item").append('<option value="' + Val.Value + '">' + Val.Text + '') });
                        $("#Item").val(@ViewBag.Item);
                       
                     
                    
                    }
                }
            });
        }
    });
   
    function dateValueFormat(date) {
        var d = new Date(date);
        var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                        "Aug", "Sep", "Oct", "Nov", "Dec"];
        var val = d.getDate() + "-" + months[d.getMonth()] + "-" + d.getFullYear();
        return val;
    }
    function getPurchasedDate()      
    {
        
        $.ajax({
            type: 'get',
            url: '@Url.Content("~/AssetDetails/ReadAssetDetail")',
            data: { "ItemCode": $("#Item").val() },

            success: function (data) {
                assetDetail = JSON.parse(data);
                $('#Date, #ApprovedDate').datepicker('setStartDate', new Date(assetDetail[0].Purchased_Date));

            }
        });
    //    $('#Date').datepicker('setStartDate', new Date(assetDetail[0].Purchased_Date));

    }
    function AssetSale() {
        
        $('#add').attr("disabled", true);
        var url = '@Url.Content("~/AssetSale/Add")';
        var Date = $('#Date').val();
        var ApprovedDate = $('#ApprovedDate').val();


        assetSale = {

            AssetTypeId: $('#AssetTypeId').val(),
            AssetName: $('#AssetName').val(),
            Item: $('#Item').val(),
            Date: dateValueFormat($('#Date').val()),
            SalePrice: $('#SalePrice').val().trim(),
            SoldTo: $('#SoldTo').val().trim(),
            ApprovedDate: dateValueFormat($('#ApprovedDate').val()),
            ApprovedRef: $('#ApprovedRef').val().trim(),
            ApprovedBy: $('#ApprovedBy').val().trim(),
            Notes: $('#Notes').val().trim(),



        }



        if ($("#sale").valid()) {
            //$('#Date').val(dateValueFormat(Date));
            //$('#ApprovedDate').val(dateValueFormat(ApprovedDate));
            $.ajax({
                type: "Post",
                //  data: $("#sale").serialize(),
                data: {Sale : assetSale},
                url: url,
                success: function (result) {

                    if (result.success == "1") {

                        toastr.success("Asset Sale Recorded");
                        $('#sale')[0].reset();
                        $('#Item ').select2('val', '');
                        $('#AssetTypeId').trigger('change');
                    }
                    else {

                        $(".errorspan").show();

                    }
                }
            });
        }
           $('#add').attr("disabled", false);
    }

</script>
<form id="sale" method="post" autocomplete="off">
    <div class="panel">
        <div class="card">

            <div class="card-header p-b-0">
                <h4>Asset Sale/Disposal</h4>
            </div>

            <div class="card-block">
                <div class="content-align p15">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AssetTypeId)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.AssetTypeId, new System.Web.Mvc.SelectList(ViewBag.Asset, "Value", "Text"), new { @class = "form-control requir select2cls" })
                                    @Html.ValidationMessageFor(model => model.AssetTypeId)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AssetName)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.AssetName, new System.Web.Mvc.SelectList(ViewBag.Assetname, "Value", "Text"), new { @class = "form-control requir select2cls" })
                                    @Html.ValidationMessageFor(model => model.AssetName)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    Item
                                </div>
                                <div class="editor-field">

                                    @Html.DropDownListFor(model => model.Item, new System.Web.Mvc.SelectList(ViewBag.Itemcode, "Value", "Text"), new { @class = "form-control requir select2cls" })
                                    @Html.ValidationMessageFor(model => model.Item)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Date)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Date, "{0:dd/MMM/yyyy}", new { @class = "form-control requir", onkeydown = "return false", placeholder = "MM/DD/YYYY" })
                                    @Html.ValidationMessageFor(model => model.Date)
                                </div>
                            </div>
                        </div>


                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.SalePrice)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.SalePrice, new { @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.SalePrice)
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    Sold To
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.SoldTo, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SoldTo)
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ApprovedDate)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ApprovedDate, "{0:dd/MMM/yyyy}", new { @class = "form-control requir", onkeydown = "return false", placeholder = "MM/DD/YYYY"  })
                                    @Html.ValidationMessageFor(model => model.ApprovedDate)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    Approved Reference
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ApprovedRef, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ApprovedRef)
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    Approved By
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ApprovedBy, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ApprovedBy)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Notes)
                                </div>
                                <div class="editor-field">
                                    @Html.TextAreaFor(model => model.Notes, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Notes)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pull-right p-b-10 p-r-10">
                   <button type="button" id="cancel" class="btn btn-light m-r-5" onclick="@("window.location.href='" + @Url.Action("AssetDetail", "AssetDetails") + "'");">Close</button>
                    <button type="button" id="add" class="btn btn-primary spanedit " onclick="AssetSale()">Save</button>
                </div>
            </div>
        </div>
    </div>
</form>

