@model MTSINHR.Models.AssetDashboard
@System.Web.Optimization.Scripts.Render("~/bundles/datatable")
@System.Web.Optimization.Styles.Render("~/bundles/datepickercss")
@System.Web.Optimization.Scripts.Render("~/bundles/datepicker")





<style>
    .text-wrap{
   // white-space:normal;
   display:inline-block;
    white-space: nowrap;
    overflow:hidden !important;
    text-overflow: ellipsis;
}
.width-100{
    width:100px;
 
}



</style>
<script>
    var CategoryWiseDetails = [];
    var TypeWiseDetails = [];
    var AssetCategories = [];
    var FilteredData;
    var groupTable = [];
    var AssetTotalCount = 0;
    var tempCategory = '';
    var tempClassification = '';
    var listCategory = true;
    var AssetClassification = [];
    $(document).ready(function () {
        ReadAssetAssignedCount();
      //  AssetTable(null);
        $("#UnassignedDate").datepicker({
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            todayHighlight: true,
            endDate: '+0d',
            format: 'mm/dd/yyyy',
        })

        setTimeout(function () {
            $('#All').click();
           // $('table thead tr th .sorting').click();
        }, 500);
        AssetTable(null);


		
		
        $.ajax({
            type: 'GET',

            async: false,
            url: '@Url.Content("~/AssetDashboard/ReadAssetDashboardDetails")',
            success: function (data) {
                if (data.success) {
                    AssetCategories = JSON.parse(data.result);
                }
                else {
                    bootbox.alert("There is zero category in Asset list");
                }
            }
        });
        $.each(AssetCategories, function (index) {

            AssetTotalCount = AssetTotalCount + AssetCategories[index].COUNT;
            tempCategory += '<li   ondblclick="TableCall()" class="treeview " id="category' + index + '"  style="background-color:white;cursor:pointer;"   onclick=" categoryTable(this,' + AssetCategories[index].ASSET_TYPEID + ',' + index + ')" ><a  href="#"  ><i class="fa fa-angle-right"></i><label >' + AssetCategories[index].CategoryName + " (" + AssetCategories[index].COUNT + ") " + '</label><i class="fa fa-caret-right pull-right"></i></a><ul class="treeview-menu" id="classification' + index + '"></ul></li>';
        });
        $('#AssetCategories').html(tempCategory);

        $("#All label").text("All" + " (" + AssetTotalCount + ") ");



        $('#backToList').on('click', function () {
            $('#DashboardDetailsListLink').trigger('click');

        });


        $('.dashboard_nav_active').on('click', function () {
            $('.dashboard_detail_tab').removeClass('active');
            //     $(this).attr('href')
            $($(this).attr('href')).addClass('active');
        });

    });
    function ReadAssetAssignedCount() {
        $.ajax({
            type: 'GET',
            url: '@Url.Content("~/AssetDashboard/ReadAssetAssignedCount")',
            success: function (data) {
                if (data.success) {
                    var AssetCount = JSON.parse(data.result);
                    AssignedAssetTable(AssetCount);
                }
            }
        })
    }
    function AssignedAssetTable(data) {
        if ($.fn.DataTable.isDataTable('#EmployeeAssignedAssetsTable')) {
            $('#EmployeeAssignedAssetsTable').dataTable().fnDestroy();
        }
        $("#EmployeeAssignedAssetsTable").DataTable({
            "iDisplayLength": 10,
            "bLengthChange": true,
            "bPaginate": true,
            "bFilter": true,
            "bInfo": true,
            "bAutoWidth": true,
            "data": data,
            "columns": [

              { "data": "Employee_Id", "title": "Employee code", "class": "text-left" },//0
              { "data": "NAME", "title": "Employee Name", "class": "text-left" },//1
              { "data": "Department", "title": "Department", "class": "text-left" },//2
              { "data": "Designation", "title": "Designation", "class": "text-left" },//3
              { "data": "COUNT", "title": "Asset count", "class": "text-center" },//4
              { "data": "id", "title": "View", "class": "text-center" }//5

            ],
            columnDefs: [
                {
                    "targets": [5],
                    "render": function (data, type, row) {
                        return '<img src="@Url.Content("~/Content/images/chevron-down.png")" onclick="ReadEmployeeAssignedAsset(' + data + ',this)" style="cursor:pointer;" />'
                    }
                },
            ]
        })
    }

    var PreviousTr;
    var PreviousTd;
    function ReadEmployeeAssignedAsset(Id, CurrentElement) {
        var AssetList = [];
        $.ajax({
            type: 'GET',
            data: { Id: Id },
            async: false,
            url: '@Url.Content("~/AssetDashboard/ReadEmployeeAssignedAsset")',
            success: function (data) {
                AssetList = JSON.parse(data.result)
            }
        })
        var nTr = CurrentElement.parentNode.parentNode;
        if ($("#EmployeeAssignedAssetsTable").dataTable().fnIsOpen(PreviousTr) && PreviousTr != nTr) {
            $("#EmployeeAssignedAssetsTable").dataTable().fnClose(PreviousTr);
            PreviousTd.src = "@Url.Content("~/Content/images/chevron-down.png")";
        }
        if ($("#EmployeeAssignedAssetsTable").dataTable().fnIsOpen(nTr)) {
            $("#EmployeeAssignedAssetsTable").dataTable().fnClose(nTr);
            CurrentElement.src = "@Url.Content("~/Content/images/chevron-down.png")";
        } else {
            CurrentElement.src = "@Url.Content("~/Content/images/chevron-up.png")";
            $("#EmployeeAssignedAssetsTable").dataTable().fnOpen(nTr, mapDetails(AssetList), 'details');
            PreviousTr = nTr;
            PreviousTd = CurrentElement;
        }
    }
    function mapDetails(data) {
        var sOut = '<table class="table table-bordered table-condensed" style="margin-bottom: 1px!important;;width:100%;" border="0">';
        if (data == null || data == undefined || data.length == 0) {
            sOut += '<tr><th class="text-center">No data</th></tr>';
        } else {
            sOut += '<thead>';
            sOut += '<tr role="row">';
            sOut += '<th style="width:10%" class="text-center">Sl.No</th>';
            sOut += '<th style="width:25%" class="text-center">Classification</th>';
            sOut += '<th style="width:25%" class="text-center">Category</th>';
            sOut += '<th style="width:25%" class="text-center">Asset code</th>';
            if (data == null || data[0].Employee_id != null) {
                sOut += '<th style="width:15%" class="text-center">Unassign</th>';
            } else {
                sOut += '<th style="width:15%" class="text-center">Assign</th>';
            }
            sOut += "</tr>";
            sOut += '</thead>';
            sOut += '<tbody>';
            for (var i = 0; i < data.length; i++) {
                sOut += "<tr>";
                sOut += '<td style="width:10%" class="text-center">' + (parseInt(i) + parseInt(1)) + '.' + '</td>';
                sOut += '<td style="width:25%" class="text-center">' + data[i].CLASSIFICATION + '</td>';
                sOut += '<td style="width:25%" class="text-center">' + data[i].CATEGORY + '</td>';
                sOut += '<td style="width:25%" class="text-center">' + data[i].ITEM_CODE + '</td>';
                if (data[i].Employee_id != null) {
                    var AssignDate = "'" + dateFormat(data[i].ACTION_DATE) + "'";
                    sOut += '<td style="width:15%;" class="text-center"><span style="cursor:pointer;" onclick=UnAssignAsset(' + data[i].ASSET_TYPEID + ',' + data[i].ASSET_NAMEID + ',' + data[i].Item_Id + ',' + data[i].Employee_id + ',' + AssignDate + ')  class="fa fa-remove"/></td>';
                } else {
                    sOut += '<td style="width:15%" class="text-center"><span style="cursor:pointer;" onclick=AssignAsset(' + data[i].ASSET_TYPEID + ',' + data[i].ASSET_NAMEID + ',' + data[i].Item_Id + ')  class="fa fa-map-signs"/></td>';
                }
                sOut += "</tr>";
            }
            sOut += '</tbody>';
        }
        sOut += '</table>';
        return sOut;
    }
    function AssignAsset(type, name, item) {
        window.location.href = '@Url.Content("~/AssignAsset/AssetAssign?assettype=")' + type + "&assetname=" + name + "&item=" + item;
    }
    var Type;
    var Name;
    var Item;
    var Emp_id;
    function UnAssignAsset(type, name, item, Empid, AssignedDate) {
        Type = type;
        Name = name;
        Item = item;
        Emp_id = Empid;
        $("#UnAssignAssetForm")[0].reset();
        $("#UnassignedDate-error").html('');
        $("#UnAssignAssetModal").modal('show');
        $("#UnassignedDate").datepicker('setStartDate', AssignedDate);

    }
    function UnAssignAssetDate() {
        if ($("#UnAssignAssetForm").valid()) {
            $.ajax({
                type: 'GET',
                data: {
                    Type: Type,
                    Name: Name,
                    Item: Item,
                    Empid: Emp_id,
                    UnassignedDate: $("#UnassignedDate").val()
                },
                url: '@Url.Content("~/AssetDashboard/UnAssignAsset")',
                success: function (data) {
                    if (parseInt(data) > 0) {
                        toastr.success("Successfully Removed");
                        $("#UnAssignAssetForm")[0].reset();
                        $("#UnAssignAssetModal").modal('hide');
                        ReadAssetAssignedCount();
                    } else {
                        $("#UnAssignAssetForm")[0].reset();
                        $("#UnAssignAssetModal").modal('hide');
                    }
                }
            })
        }
    }
    function dateFormat(date) {

        var d = new Date(date);
        var month = ('0' + (d.getMonth() + 1)).slice(-2);
        var date1 = ('0' + d.getDate()).slice(-2);
        var DateFormat = month + '/' + date1 + '/' + d.getFullYear();
        return DateFormat;
    }
</script>

<script>
    function TableCall() {
        
       // $("#classification" + index).toggle();
        setTimeout(function () { $('#DashboardTableLink').trigger('click'); }, 700)
    }


    function categoryTable(Element, AssetTypeId, index, AssetNameId) {

     
        if (listCategory) {
            var value1;
            var value2;

            if (AssetTypeId == "All") {
                value1 = -1;
            }
            else {
                value1 = AssetTypeId;
            }
            if (AssetNameId == undefined) {
                value2 = 0;
            }
            else {
                value2 = AssetNameId;
            }


            if (index != null || index != undefined) {

                $.ajax({
                    type: 'GET',
                    data: { Id: AssetCategories[index].ASSET_TYPEID },
                    async: false,
                    url: '@Url.Content("~/AssetDashboard/ReadAssetClassification")',
                    success: function (data) {
                        if (data.success) {
                            AssetClassification = JSON.parse(data.result);
                        }
                        else {
                            bootbox.alert("There is zero classification in this Category");
                        }
                    }
                });
                $.each(AssetClassification, function (index) {
                    tempClassification += '<li class=""  ondblclick="TableCall()" onclick="classificationTable(' + AssetClassification[index].ASSET_TYPEID + ',' + AssetClassification[index].ASSET_NAMEID + ',this)"><a id="classific' + index + '"  style="cursor:pointer;"   ><label style="cursor:pointer;">' + AssetClassification[index].Assetname + " (" + AssetClassification[index].COUNT + ") " + '</label></a></li>';
                });
                $("#classification" + index).html(tempClassification);
            }
            $.ajax({
                type: "POST",
                data: { AssetTypeId: value1, AssetNameId: value2 },
                url: '@Url.Content("~/AssetDashboard/ReadDashboardTable")',
                success: function (data) {
                    if (data.success) {
                        FilteredData = JSON.parse(data.result);
                        if ($.fn.DataTable.isDataTable('#getasset')) {
                            $('#getasset').dataTable().fnDestroy();
                        }
                        AssetTable(FilteredData);
                    }
                    else {
                        bootbox.alert("There is no data available");
                    }
                }
            });
            tempClassification = '';
        }
        if (AssetTypeId == 'All') {
            listCategory = true;
        } else {
            listCategory = false;
        }
        //if (!($(Element.children).hasClass('menu-open'))) {
          // setTimeout(function () { $('#DashboardTableLink').trigger('click'); }, 600)
        //}
    
       





    }
    function classificationTable(AssetTypeId, AssetNameId, e) {
        listCategory = false;
        $.ajax({
            type: "POST",
            data: { AssetTypeId: AssetTypeId, AssetNameId: AssetNameId },
            url: '@Url.Content("~/AssetDashboard/ReadDashboardTable")',
            success: function (data) {
                if (data.success) {
                    FilteredData = JSON.parse(data.result);
                    if ($.fn.DataTable.isDataTable('#getasset')) {
                        $('#getasset').dataTable().fnDestroy();
                    }
                    AssetTable(FilteredData);
                  //  setTimeout(function () { $('#DashboardTableLink').trigger('click'); }, 600)
                }
                else {
                    bootbox.alert("There is no data available");
                }
            }


        });

        //$('#EmployeeAssignedAssetsListLink').trigger('click');

    }
    function addAssetassign(type, name, item) {

        window.location.href = '@Url.Content("~/AssignAsset/AssetAssign?assettype=")' + type + "&assetname="+ name + "&item=" + item;
    }
    function addMaintenance(type, name,item) {

        window.location.href = '@Url.Content("~/AssetMaintenanceDetails/MaintenanceAsset?assettype=")' + type + "&assetname=" + name + "&item=" + item;
    }
    function addAmc(type, name,item) {

        window.location.href = '@Url.Content("~/AMC_Insurance/AMC_InsuranceAsset?assettype=")' + type + "&assetname=" + name + "&item=" + item;

    }
   
    function ViewDetails(itemCode)
    {

        window.location.href = '@Url.Content("~/AssetReportView/AssetDetailView?ItemCode=")' + itemCode ;
    }


    function AssetTable(data1) {
        if ($.fn.DataTable.isDataTable('#getasset')) {
            $('#getasset').dataTable().fnDestroy();
        }
   
        groupTable = $("#getasset").DataTable({
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "iDisplayLength": 5,
            "bFilter": true,
            "scrollX": '100%',
            autoWidth: true,
            "bProcessing": true,
            "order": [[3, "desc"]],
            @*"ajax": {
                type: "GET",
                url: '@Url.Content("~/AssetDetails/Read")',
                dataSrc: function (data) {
                    return JSON.parse(data);

                }
            },*@
            "data": data1,
            "aoColumns":
      [{ "mData": "ID", "sTitle": "SI.No", "bVisible": false, "sClass": "text-right", "sWidth": "80px" }//0
      , { "mData": "ASSET_TYPEID", "bVisible": false, "sTitle": "Asset Classification", "sClass": "text-left" }//1
      , { "mData": "AssetnameId", "bVisible": false, "sTitle": "Asset Classification", "sClass": "text-left" }//2
      , { "mData": "AssetType", "sTitle": "Asset Classification", "sClass": "text-left" }//3
      , { "mData": "AssetName", "sTitle": "Category", "sClass": "text-left" }//4
      , { "mData": "IDENTIFICATION_CODE", "sTitle": "Item Code", "sClass": "text-left" }//5
      , { "mData": "ASSET_DESCRIPTION", "sTitle": " Description", "sClass": "text-left" }//6
      , { "mData": "MAKE", "sTitle": "Make", "sClass": "text-center" }//7
      , { "mData": "SERIAL_NUMBER", "sTitle": "Serial Number", "sClass": "text-center" }//8
      , { "mData": "Purchased_year", "sTitle": "Purchased Year", "sClass": "text-center" }//9
      , { "mData": "AssignedTo", "sTitle": "Currently Assign To", "sClass": "text-center", "sWidth": "80px" }//10
      , { "mData": "totalcost", "sTitle": "Maintenance Cost Rs. (So Far)", "sClass": "text-center" }//11
      , { "mData": "Category", "sTitle": "Warranty or AMC / Insurance", "sClass": "text-center" }//12
      , { "mData": "Id", "sTitle": "Assign To", "sClass": "text-center" }//13
      , { "mData": "AssettypeId", "sTitle": "Add Maintenance", "sClass": "text-center" }//14
      , { "mData": "AssettypeId", "sTitle": "Add AMC/Insurance", "sClass": "text-center" }//15
      , { "mData": "Id", "sTitle": "View", "sClass": "text-center" }//16
      ],
            "aoColumnDefs":
          [
               {
                   "aTargets": [5]
              , "mRender": function (data, type, row) {
                  return data || 'N/A'
              }
               },
              {
                  "aTargets": [6]
              , "mRender": function (data, type, row) {
                  if (data == '' || data == null) {
                      return 'N/A'
                  }
                  else {
                      return "<div class='text-wrap width-100'>" + data + "</div>"
                  }
              }
              },
              {
                  "aTargets": [8]
              , "mRender": function (data, type, row) {
                  return data || 'N/A'
              }
              },
              {
                  "aTargets": [9]
              , "mRender": function (data, type, row) {
                  return data || 'N/A'
              }
              },
              {
                  "aTargets": [10]
              , "mRender": function (data, type, row) {
                  if (data == null) {
                      return 'Not Assigned'
                  }
                  else {
                      return data;
                  }
              }
              },
              {
                  "aTargets": [11]
              , "mRender": function (data, type, row) {
                  if (data == null) {
                      return 'N/A'
                  }
                  else {
                      return data;
                  }
              }
              },
                {
                    "aTargets": [12]
              , "mRender": function (data, type, row) {
                  var item = row.ID;
                  if (data == '1') {
                      return 'AMC'
                  }
                  else if (data == '2') {
                      return 'Insurance';
                  }
                  else if (data == "1,2") {
                      return 'AMC/Insurance'
                  }
                  else if (data == null) {
                      return '-'
                  }
              }
                },
              {
                  "aTargets": [13]
              , "mRender": function (data, type, row) {
                  var type = row.ASSET_TYPEID;
                  var name = row.AssetnameId;
                  var item = row.ID;
                  return '<button="" onclick="addAssetassign(' + type + ',' + name + ',' + item + ')"><i class="fa fa-plus"/></button>'
              }
              },
             {
                 "aTargets": [14]
              , "mRender": function (data, type, row) {
                  var type = row.ASSET_TYPEID;
                  var name = row.AssetnameId;
                  var item = row.ID;
                  return '<button="" onclick="addMaintenance(' + type + ',' + name + ',' + item + ')"><i class="fa fa-plus"/></button>'
              }
             },
          {
              "aTargets": [15]
              , "mRender": function (data, type, row) {
                  var type = row.ASSET_TYPEID;
                  var name = row.AssetnameId;
                  var item = row.ID;
                  return '<button="" onclick="addAmc(' + type + ',' + name + ',' + item + ')"><i class="fa fa-plus"/></button>'

              }
          },
          {
              "aTargets": [16]
              , "mRender": function (data, type, row) {
                  var itemCode = row.ID;
                  //  var rowDetail = JSON.stringify(row);

                  return '<button="" style="cursor:pointer;" onclick=ViewDetails(' + itemCode + ')><i class="fa fa-list"/></button>'
              }
          }
          ],
            
        });

        //setTimeout(function () {
        //    $("#getasset").DataTable().columns.adjust().draw();

        //}, 50);

       // $("#getasset").DataTable().columns.adjust().draw();
     //   return false;
    }
</script>
<div class="card">
    <div class="card-header text-center">
        Dashboard
    </div>
    <div class="card-body">
        <ul class="nav nav-tabs" id="">
            <li class="nav-item">
                <a class="nav-link active dashboard_nav_active" id="DashboardDetailsListLink" data-toggle="tab" href="#DashboardDetailsList">Asset Summary</a>
            </li>
            <li class="nav-item">
                <a class="nav-link dashboard_nav_active" id="DashboardTableLink" data-toggle="tab" href="#DashboardTable">Asset Details</a>
            </li>
            <li class="nav-item">
                <a class="nav-link dashboard_nav_active" id="EmployeeAssignedAssetsListLink" data-toggle="tab" href="#EmployeeAssignedAssetsList">Assigned Assets</a>
            </li>
        </ul>
        <!-- Tab panes -->
        <div class="tab-content">
            <div class="tab-pane active dashboard_detail_tab" id="DashboardDetailsList">
                <div>
                    <div class="col-lg-12 ">
                        <section class="sidebar">
                            <ul class="sidebar-menu">
                                <li class="treeview" ondblclick="TableCall()"  onclick="categoryTable(this,'All')">
                                    <a href="#" id="All"><i class="fa fa-laptop"></i><label>All</label><i class="fa fa-caret-right pull-right"></i></a>
                                    <ul class="treeview-menu" id="AssetCategories" style="width:95%;"></ul>
                                </li>
                            </ul>
                        </section>
                    </div>
                </div>
            </div>
            <div class="tab-pane dashboard_detail_tab" id="DashboardTable">
                @*<div class="text-center">
                    <br /><h5><b>Asset Details</b></h5>
                </div>*@
                <div class="col-sm-12 text-sm-left m-t-15">
                    <button type="button" id="backToList" class="btn btn-primary"><i class="fa fa-arrow-circle-left"></i>&nbsp;&nbsp;Back</button>
                </div><br />
                <div class="MTS_Table">
                    <table id="getasset"  class="table table-bordered table-hover tabel-sm table-responsive " cellspacing="0" width="100%"></table>
                </div>
            </div>
            <div class="tab-pane dashboard_detail_tab" id="EmployeeAssignedAssetsList">
                @*<div class="text-center">
                    <br /><h5><b>Assigned Assets</b></h5>
                </div>*@
                <div class="MTS_Table" style="padding-top:3ex;">
                    <table id="EmployeeAssignedAssetsTable" class="table table-bordered table-hover tabel-sm table-responsive" cellspacing="0" width="100%"></table>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
    </div>
</div>
<div class="modal fade" role="dialog" id="UnAssignAssetModal" data-backdrop="static">
    <div class="modal-dialog modal-lg no-padding">
        <div class="modal-content">
            <div class="modal-body">
                <form id="UnAssignAssetForm" style="padding-top:2ex;">
                    <div class="row">
                        <div class="col-lg-1"></div>
                        <div class="col-lg-3 pad-top5">
                            <label>Unassign Date :</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(m => m.UnassignedDate, new { @class = "form-control ", @style = "width:100%", @onkeypress = "return false" })
                            @Html.ValidationMessageFor(m => m.UnassignedDate)
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="UnAssignAssetDate()">Ok</button>
            </div>
        </div>
    </div>
</div>