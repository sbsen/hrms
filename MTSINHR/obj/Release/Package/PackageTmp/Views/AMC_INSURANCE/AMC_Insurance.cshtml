
@model MTSINHR.Models.AMC_Insurance
<script src="~/Scripts/ValidationFunction.js"></script>
<script src="~/Scripts/bootbox.min.js"></script>
<style>
    .requir {
        border-left: 2px solid red !important;
    }
</style>
@System.Web.Optimization.Scripts.Render("~/bundles/datepicker")
@System.Web.Optimization.Styles.Render("~/bundles/datepickercss")
<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/select2.min.js"></script>

@{
    List<SelectListItem> PaymentType = new List<SelectListItem>();

    PaymentType.Add(new SelectListItem
    {
        Text = "Cheque",
        Value = "1",

    });
    PaymentType.Add(new SelectListItem
    {
        Text = "RTGS",
        Value = "2"
    });

}
@{
    List<SelectListItem> Category = new List<SelectListItem>();

    Category.Add(new SelectListItem
    {
        Text = "AMC",
        Value = "1",

    });
    Category.Add(new SelectListItem
    {
        Text = "Insurance",
        Value = "2"
    });

}
@{
    List<SelectListItem> AmcType = new List<SelectListItem>();

    AmcType.Add(new SelectListItem
    {
        Text = "Labour",
        Value = "1",

    });
    AmcType.Add(new SelectListItem
    {
        Text = "Labour and spare",
        Value = "2"
    });
    AmcType.Add(new SelectListItem
    {
        Text = "Comprehensive",
        Value = "3"
    });

}
@{
    List<SelectListItem> InsuranceType = new List<SelectListItem>();

    InsuranceType.Add(new SelectListItem
    {
        Text = "Insurance type 1",
        Value = "1",

    });
    InsuranceType.Add(new SelectListItem
    {
        Text = "Insurance type 2",
        Value = "2"
    });

}
<script>
    var assetAMC_Insurance = [];
    var getassettype;
    var getassetname;
    var getcategoryid;
    var todayDate = new Date();
    var end = new Date().getDate();
    var yearrestrict = '@System.Configuration.ConfigurationManager.AppSettings["Year_restrict_count"]';
    $(document).ready(function () {
        
        $('.select2cls').select2({ "width": "100%" });
        $("#AssetName").prop('disabled', true);
        $("#Item").prop('disabled', true);

        $("#InsuranceType").prop('disabled', true);
        $("#PremiumCharges").prop('disabled', true);
        $("#AmcType").prop('disabled', true);
        $("#AmcCharges").prop('disabled', true);

      
        $('#FromDate').datepicker({
            startDate: "-" + yearrestrict + "y",
            endDate: '+0d',
            autoclose: true
        }).on('changeDate', function () {

            $("#ToDate").val(this.value);
            $('#ToDate').datepicker('setStartDate', new Date($(this).val()));
        }).keydown(function (e) {

            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#FromDate').val('');
            }
        });
        $('#ToDate').datepicker({
            startDate: "-" + yearrestrict + "y",
            autoclose: true
        }).on('changeDate', function () {
            $('#FromDate').datepicker('setEndDate', new Date($(this).val()));
        }).keydown(function (e) {

            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#ToDate').val('');
            }
        });

        $('#PaymentRefDate').datepicker({

            // format:'dd-M-yy',
            //  format: 'mm/dd/yyyy',
            // extraFormats: ['dd-M-yy'],
            altFormat: 'dd-M-yy',
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            endDate: '+0d',
        }).keydown(function (e) {

            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#PaymentRefDate').val('');
            }
        });


        if ('@ViewBag.AssetType' != '' && '@ViewBag.AssetType' != null) {
          

            $("#AssetTypeId").val('@ViewBag.AssetType');
            $('#AssetTypeId').select2('val', '@ViewBag.AssetType');
            // if ($("#AssetTypeId").val() != null && $("#AssetTypeId").val() != '') {
            getdata('@ViewBag.AssetType');
            $("#AssetName").prop('disabled', false);
            // }

            getitem('@ViewBag.AssetType', '@ViewBag.Assetnames');   //, 'ViewBag.Categoryid'); ////////////////////////
            $("#Item").prop('disabled', false);

        }
        $("#AssetTypeId").on('change', function () {
            
            if ($("#AssetTypeId").val() != null && $("#AssetTypeId").val() != '') {
             //   $('#AssetTypeId').select2('val', '@ViewBag.Assettype');
                $("#AssetName").prop('disabled', false);
                var getValue = $(this).val();
                getdata(getValue);
            }
            else {
                $("#AssetName").val("");
           //     $('#AssetName').select2('val', '');
                $("#AssetName").attr("disabled", true);
                $("#Item").prop("disabled", true);
             //   $("#Item")[0].reset();
                $("#Item").select2('val', '');
                $("#InsuranceType").prop('disabled', true);
                $("#PremiumCharges").prop('disabled', true);
                $("#AmcType").prop('disabled', true);
                $("#AmcCharges").prop('disabled', true);
            }

        });
        $("#AssetName").on('change', function () {
            $("#Item").select2('val', '');
            getassettype = $("#AssetTypeId").val();
            getassetname = $("#AssetName").val();
            if ($("#AssetTypeId").val() != null && $("#AssetTypeId").val() != '' && $("#AssetName").val() != null && $("#AssetName").val() != '') {
                // $("#Item").prop('disabled', false);
                //$("#Item").val('').prop("disabled", true);

                //if ($("#AssetName").val() != null && $("#AssetName").val() != '') {
                //getitem(getassettype, getassetname);//, getcategoryid);
                $("#Category").trigger('change');
            }
            else {
                //$("#Item").prop("disabled", true);
              
                $("#Item").prop("disabled", true);
                //    $("#Item")[0].reset();
                $("#Item").select2('val', '');
                $("#InsuranceType").prop('disabled', true);
                $("#PremiumCharges").prop('disabled', true);
                $("#AmcType").prop('disabled', true);
                $("#AmcCharges").prop('disabled', true);
            }
            //    }
        });
        $("#Category").on('change', function () {
            $("#Item").select2('val', '');
            $("#AmcCharges").val('');
            $("#PremiumCharges").val('');
            if ($("#AssetTypeId").val() != null && $("#AssetTypeId").val() != '' && $("#AssetName").val() != null && $("#AssetName").val() != '') {
                $("#Item").prop('disabled', false);

                getassettype = $("#AssetTypeId").val();
                getassetname = $("#AssetName").val();
                getcategoryid = $("#Category").val();

                if ((getcategoryid == 1)) {

                    $("#InsuranceType").val('');
                    $("#InsuranceType").select2('val','');
                    $("#PremiumCharges").val('');
                    $("#InsuranceType").prop('disabled', true);
                    $("#PremiumCharges").prop('disabled', true);
                    $("#AmcType").prop('disabled', false);
                    $("#AmcCharges").prop('disabled', false);
                }
                else if (getcategoryid == 2) {
                    $("#AmcType").val('');
                    $("#AmcType").select2('val', '');
                    $("#AmcCharges").val('');
                    $("#AmcType").prop('disabled', true);
                    $("#AmcCharges").prop('disabled', true);
                    $("#InsuranceType").prop('disabled', false);
                    $("#PremiumCharges").prop('disabled', false);
                }
                else {
                    $("#InsuranceType").select2('val', '');
                    $("#AmcType").select2('val', '');
                    $("#InsuranceType").prop('disabled', true);
                    $("#PremiumCharges").prop('disabled', true);
                    $("#AmcType").prop('disabled', true);
                    $("#AmcCharges").prop('disabled', true);
                }
                if ($("#Category").val() != null && $("#Category").val() != '') {
                    $("#Item").prop("disabled", false);
                    getitem_Amc_Insurance(getassettype, getassetname, getcategoryid);
                }
                else {
                    $("#InsuranceType").prop('disabled', true);
                    $("#PremiumCharges").prop('disabled', true);
                    $("#AmcType").prop('disabled', true);
                    $("#AmcCharges").prop('disabled', true);

                    $("#Item").prop("disabled", true);
                    //$("#Item")[0].reset();
                    $("#Item").select2('val', '');
                    //$("#Item").val("");
                    //$("#Item").empty();
                    //$("#Item").attr("disabled", true);
                    //$("#Item").empty().prop("disabled", true);
                    //$("#Item").attr("value", "");
                    //$("#Item").attr("disabled", true);
                    //$("#Item").val().reset();
                }
            }
            else {
                $("#InsuranceType").prop('disabled', true);
                $("#PremiumCharges").prop('disabled', true);
                $("#AmcType").prop('disabled', true);
                $("#AmcCharges").prop('disabled', true);
            }

        });
        function getdata(val) {
            $.ajax({
                type: "post",
                url: '@Url.Content("~/AMC_Insurance/AssetName")?id=' + val,
                success: function (result) {
                    if (result.success == true) {
                        $("#AssetName").empty();
                        $.each(JSON.parse(result.AssetList), function (i, Val) { $("#AssetName").append('<option value="' + Val.Value + '">' + Val.Text + '') });
                        $('#AssetName').select2('val', '@ViewBag.Assetnames');

                        $("#AssetName").val('@ViewBag.Assetnames');
                    }
                }
            })
        }
        function getitem_Amc_Insurance(getassettype, getassetname, getcategoryid) {

            $.ajax({
                type: "post",
                url: '@Url.Content("~/AMC_Insurance/Item_Amc_Insurance")?Assettypeid=' + getassettype + "&Assetnameid=" + getassetname + "&categoryid=" + getcategoryid, /////////////////////////
                success: function (result) {

                    if (result.success == true) {
                        $("#Item").empty();
                        $.each(JSON.parse(result.AssetList),
                            function (i, Val) { $("#Item").append('<option value="' + Val.Value + '">' + Val.Text + '') });
                        $('#Item').select2('val', '@ViewBag.item');
                    }
                }
            })
        }

        function getitem(getassettype, getassetname)//,getcategoryid)  /////////////////////////
        {

            $.ajax({
                type: "post",
                url: '@Url.Content("~/AMC_Insurance/Item")?Assettypeid=' + getassettype + "&Assetnameid=" + getassetname, /////////////////////////
                success: function (result) {
                    if (result.success == true) {
                        $("#Item").empty();
                        $.each(JSON.parse(result.AssetList),
                            function (i, Val) { $("#Item").append('<option value="' + Val.Value + '">' + Val.Text + '') });
                        $('#Item').select2('val', '@ViewBag.item');
                    }
                }
            })
        }

    });
    function dateFormat(date) {
        var d = new Date(date);
        var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                        "Aug", "Sep", "Oct", "Nov", "Dec"];
        var val = d.getDate() + "-" + months[d.getMonth()] + "-" + d.getFullYear();
        return val;
    }
    function Amc_Insurance() {
        var paymentref = $('#PaymentRefDate').val();
        var validFrom = $('#FromDate').val();
        var validTo = $('#ToDate').val();
        $('#add').attr("disabled", true);

        var url = '@Url.Content("~/AMC_Insurance/Add")';


        assetAMC_Insurance = {

            Category: $('#Category').val(),
            VendorName: $('#VendorName').val(),
            AssetTypeId: $('#AssetTypeId').val(),
            Item: $('#Item').val(),
            AssetName: $('#AssetName').val(),
            AmcType: $('#AmcType').val(),
            InsuranceType: $('#InsuranceType').val(),
            AmcCharges: $('#AmcCharges').val().trim(),
            PremiumCharges: $('#PremiumCharges').val().trim(),
         //   InsuredAmount: $('#InsuredAmount').val().trim(),

            PaymentType: $('#PaymentType').val(),
            PaymentRefDate: dateFormat($('#PaymentRefDate').val()),
            PaymentRefNumber: $('#PaymentRefNumber').val().trim(),
            FromDate: dateFormat($('#FromDate').val()),

            ToDate: dateFormat($('#ToDate').val()),
            ContactPerson: $('#ContactPerson').val().trim(),
            ContactPhone: $('#ContactPhone').val().trim(),
            Notes: $('#Notes').val().trim(),
            Amc_Document_Id: Amc_Document_Id,



        }



        if ($('#insurance').valid()) {
            //$('#PaymentRefDate').val(dateFormat(paymentref));
            //$('#FromDate').val(dateFormat(validFrom));
            //$('#ToDate').val(dateFormat(validTo));
            $.ajax({
                type: "Post",
                // data: $("#insurance").serialize() + '&' + $.param({ Amc_Document_Id: Amc_Document_Id }),
                data: { AMC_Ins: assetAMC_Insurance },
                url: url,
                success: function (result) {

                    if (result.success == "1") {
                        toastr.success("Successfully Added");
                        $('#insurance')[0].reset();
                        $("#PaymentType").select2('val', '');
                        $("#InsuranceType").select2('val', '');
                        $("#AssetName").select2('val', '');
                        $("#AssetTypeId").select2('val', '');
                        $("#VendorName").select2('val', '');
                        $("#Item").select2('val', '');
                        $("#AmcType").select2('val', '');
                        $("#Category").select2('val', '');
                    }
                    else {
                        $(".errorspan").show();
                    }
                }
            });
        }
        $('#add').attr("disabled", false);
    }
    var Amc_Document_Id = '';


    function AutoUpload() {

        var formData = new FormData();
        var fileInput = document.getElementById('Amc_or_insurance_file');
        formData.append(fileInput.files[0].name, fileInput.files[0]);

        //formData.append("#file",File)
        $.ajax({
            url: '@Url.Content("~/AMC_Insurance/GetFileData")',
            type: "POST",
            data: formData,

            success: function (result) {

                if (result == "Success") {
                    toastr.success("Successfully Uploaded");
                    $('#insurance')[0].reset();
                } else if (Number.isInteger(parseInt(result))) {
                    toastr.success("Successfully Uploaded");
                    Amc_Document_Id = parseInt(result);


                } else {
                    Amc_Document_Id = '';
                    $(".errorspan").show();
                }



            },
            cache: false,
            contentType: false,
            processData: false
        })
    }
</script>
<form id="insurance" method="post" autocomplete="off">
    <div class="panel">
        <div class="card">
           
            <div class="card-header p-b-0">
                <h4>Asset - AMC/Insurance</h4>
            </div>
           
            <div class="card-block">
                <div class="content-align p15">   
                   <div class="row">
                       <div class="col-md-6"></div>
                       <div class="col-md-4 text-center">
                           <input type="file" id="Amc_or_insurance_file" class="file form-control" name="files[]" value="pick" accept=".pdf,.png,.jpg,.jpeg" />                          
                       </div>
                       <div class="text-right col-md-2">
                           <button class="btn btn-primary " type="button" onclick="AutoUpload()"><i class="fa fa-upload "></i>&nbsp;&nbsp;Upload</button>
                       </div>
                       <div class="col-12 text-left ">
                           <span class="text-right pull-right" style="color:red">(.pdf,.png,.jpg,.jpeg)*</span>
                       </div>

                   </div>
                    <div class="content-align p15" style="background-color:#ecdcdc">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Category)
                                    </div>
                                    <div class="editor-field">
                                        @Html.DropDownListFor(model => model.Category, new System.Web.Mvc.SelectList(Category, "value", "Text"), "----Select Type----", new { @class = "form-control requir select2cls" })
                                        @Html.ValidationMessageFor(model => model.Category)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <div class="editor-label">
                                        Asset Classification
                                    </div>
                                    <div class="editor-field">
                                        @Html.DropDownListFor(model => model.AssetTypeId, new System.Web.Mvc.SelectList(ViewBag.Asset, "Value", "Text"), new { @class = "form-control requir select2cls" })
                                        @Html.ValidationMessageFor(model => model.AssetTypeId)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <div class="editor-label">
                                        Category
                                    </div>
                                    <div class="editor-field">
                                        @Html.DropDownListFor((model => model.AssetName), new System.Web.Mvc.SelectList(ViewBag.Assetname, "Value", "Text"), new { @class = "form-control requir select2cls" })
                                        @Html.ValidationMessageFor(model => model.AssetName)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">

                                <div class="form-group ">
                                    <div class="editor-label">
                                        Item
                                    </div>
                                    <div class="editor-field">
                                        @Html.DropDownListFor(model => model.Item, new System.Web.Mvc.SelectList(ViewBag.Itemcode, "Value", "Text"), new { @class = "form-control requir select2cls", multiple = "multiple", placeholder = "---Select Item---" })
                                        @Html.ValidationMessageFor(model => model.Item)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                   Vendor Name
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.VendorName, new System.Web.Mvc.SelectList(ViewBag.vendorname, "value", "Text"), new { @class = "form-control requir select2cls" })
                                    @Html.ValidationMessageFor(model => model.VendorName)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                   AMC Type
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.AmcType, new System.Web.Mvc.SelectList(AmcType, "value", "Text"), "----Select AMC Type----", new { @class = "form-control requir select2cls" })
                                    @Html.ValidationMessageFor(model => model.AmcType)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                  Insurance Type
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.InsuranceType, new System.Web.Mvc.SelectList(InsuranceType, "value", "Text"), "----Select Insurance Type----", new { @class = "form-control requir select2cls" })
                                    @Html.ValidationMessageFor(model => model.InsuranceType)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                   AMC Charge
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.AmcCharges, new { @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.AmcCharges)
                                </div>
                            </div>
                        </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="editor-label">
                                            Premium Charges
                                        </div>
                                        <div class="editor-field">
                                            @Html.TextBoxFor(model => model.PremiumCharges, new { @class = "form-control requir" })
                                            @Html.ValidationMessageFor(model => model.PremiumCharges)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="editor-label">
                                            Payment Type
                                        </div>
                                        <div class="editor-field">
                                            @Html.DropDownListFor(model => model.PaymentType, new System.Web.Mvc.SelectList(PaymentType, "value", "Text"), "----Select Payment Type----", new { @class = "form-control requir select2cls" })
                                            @Html.ValidationMessageFor(model => model.PaymentType)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="editor-label">
                                            Payment Ref Date                                          
                                        </div>
                                        <div class="editor-field">
                                            @Html.TextBoxFor(model => model.PaymentRefDate,  "{ 0:dd/MMM/yyyy}", new { @class = "form-control requir", onkeydown = "return false", placeholder = "MM/DD/YYYY" })
                                            @Html.ValidationMessageFor(model => model.PaymentRefDate)
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="editor-label">
                                            Payment Ref Number
                                        </div>
                                        <div class="editor-field">
                                            @Html.TextBoxFor(model => model.PaymentRefNumber, new { @class = "form-control requir" })
                                            @Html.ValidationMessageFor(model => model.PaymentRefNumber)
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="editor-label">
                                           Valid From Date
                                        </div>
                                        <div class="editor-field">
                                            @Html.TextBoxFor(model => model.FromDate, "{0:dd/MMM/yyyy}", new { @class = "form-control requir", onkeydown = "return false", placeholder = "MM/DD/YYYY"  })
                                            @Html.ValidationMessageFor(model => model.FromDate)
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="editor-label">
                                           Valid To Date
                                        </div>
                                        <div class="editor-field">
                                            @Html.TextBoxFor(model => model.ToDate, "{0:dd/MMM/yyyy}", new { @class = "form-control requir" , onkeydown = "return false", placeholder = "MM/DD/YYYY" })
                                            @Html.ValidationMessageFor(model => model.ToDate)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="editor-label">
                                            Contact Person
                                        </div>
                                        <div class="editor-field">
                                            @Html.TextBoxFor(model => model.ContactPerson, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ContactPerson)
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="editor-label">
                                            Contact Phone
                                        </div>
                                        <div class="editor-field">
                                            @Html.TextBoxFor(model => model.ContactPhone, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ContactPhone)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="editor-label">
                                            @Html.LabelFor(model => model.Notes)
                                        </div>
                                        <div class="editor-field">
                                            @Html.TextAreaFor(model => model.Notes, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Notes)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="pull-right p-b-10 p-r-10">
                            <button type="button" id="cancel" onclick="@("window.location.href='" + @Url.Action("AssetDetail", "AssetDetails") + "'");" class="btn btn-light m-r-5">Close</button>
                            <button type="button" id="add" class="btn btn-primary spanedit " onclick="Amc_Insurance()">Save</button>
                        </div>
                    </div>
        </div>
    </div>
</form>



