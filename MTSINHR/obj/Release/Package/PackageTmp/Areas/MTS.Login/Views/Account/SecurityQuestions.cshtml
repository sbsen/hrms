@model MTS.LoginModels.SecurityQuestionModel

@{
    ViewBag.Title = "SecurityQuestions";
    Layout = Url.Content("~/views/shared/_AccountLayout.cshtml");}

   
    
    

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/sha1.js")" type="text/javascript"></script>
<script type="text/javascript">
    function encryptPassword() {
        if ($('#frmSecQuestions').valid()) {
            $('#NewPassword').val(CryptoJS.SHA1($('#NewPassword').val()));
            $('#ConfirmPassword').val(CryptoJS.SHA1($('#ConfirmPassword').val()));
            return true;
        }
        return false;
    }
</script>
@using (Html.BeginForm("/SecurityQuestions", "Account", FormMethod.Post, new {@class="form-signin" ,@id = "frmSecQuestions", @name = "frmSecQuestions", onsubmit = "encryptPassword()" }))
{
   
    @Html.HiddenFor(chngpwd => chngpwd.HashConfirmPassword)
    @Html.HiddenFor(chngpwd => chngpwd.HashCurrentPassword)

    <div class="card text-center card-shadow">
                    <div class="card-header form-signin-heading">
                     Security Questions
                    </div>
                    <div class="card-body">

                        <div class="textbox-align">
                            <div class="form-group">
            @Html.PasswordFor(chngpwd => chngpwd.NewPassword, new { @class = "required form-control", @placeholder = "New Password"})
            <div>
                @Html.ValidationMessageFor(chngpwd => chngpwd.NewPassword)
            </div>
</div>
 <div class="form-group">
            @Html.PasswordFor(chngpwd => chngpwd.ConfirmPassword, new {  @class = "required form-control", @placeholder = "Confirm Password"})
            <div>
                @Html.ValidationMessageFor(chngpwd => chngpwd.ConfirmPassword)
            </div>
         </div>
   
         <div class="form-group">
    @Html.DropDownListFor(secinfo => secinfo.SelectedSecQsn, new SelectList(Model.SecurityQsns, "Value", "Text"), "--Select--", new {  @class = "required form-control" })
    <div>
        @Html.ValidationMessageFor(secinfo => secinfo.SelectedSecQsn)
    </div>  </div>

   
        <div class="span6">
             <div class="form-group">
            @Html.TextBoxFor(secinfo => secinfo.SecAns, new { @class = "required form-control" , @placeholder = "Security Answer" })
            <div>
                @Html.ValidationMessageFor(secinfo => secinfo.SecAns)
            </div>
        </div></div>
    
    
        <div class="span5 pad-top5 text-right">
            &nbsp;
        </div>
        <div class="span6 validation-summary-errors text-left">
            @Html.DisplayFor(secinfo => secinfo.Message)
        </div>
    </div>
    <div class="btm_b clearfix">
        <input type="submit" name="button" value="Submit" class="btn btn-info pull-right" />
        </div>
    </div>
    </div>
}