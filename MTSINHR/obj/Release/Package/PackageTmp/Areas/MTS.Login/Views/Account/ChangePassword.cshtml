@model MTS.LoginModels.ChangePasswordModel
@using MTS.LoginModels;
@using MTS.Helpers;

@{
    ViewBag.Title = "Change Password";
    Layout = Url.Content("~/views/shared/Layout_New.cshtml");
}

@using (Html.BeginForm("/ChangePassword", "Account", FormMethod.Post, new { @class = "form-signin", @id = "frmChangePassword", @name = "frmChangePassword" }))
{
        
    @Html.HiddenFor(chngpwd => chngpwd.HashConfirmPassword)
    @Html.HiddenFor(chngpwd => chngpwd.HashCurrentPassword)
    <div class="change-password">
        <div class="card card-shadow">
            <div class="card-header form-signin-heading">
                Change Password
            </div>
            <div class="card-body">
                <div>
                    @if (ViewBag.success != null)
                    {
                        <div class="span12 gap-left0 validation-summary-success gap-bottom5 txt_cntr">
                            @Model.Message
                        </div>         
                    }
                    else
                    {
                
                        <div class="form-group">
                            <label>Current Password</label>
                            @Html.PasswordFor(chngpwd => chngpwd.CurrentPassword, new { @class = "required form-control" })
                            <div>@Html.ValidationMessageFor(chngpwd => chngpwd.CurrentPassword)</div>
                        </div>
               
              
                        <div class="form-group">
                            <label>New Password</label>

                            @Html.PasswordFor(chngpwd => chngpwd.NewPassword, new { @class = "required form-control" })
                            <div>@Html.ValidationMessageFor(chngpwd => chngpwd.NewPassword)</div>
                        </div>
             
            
                        <div class="form-group">
                            <label>Confirm New Password </label>

                            @Html.PasswordFor(chngpwd => chngpwd.ConfirmPassword, new { @class = "required form-control" })
                            <div>@Html.ValidationMessageFor(chngpwd => chngpwd.ConfirmPassword)</div>
                        </div>
               
                        <div class="span6 validation-summary-errors">
                            @Model.Message
                        </div>
                
                    }
                </div>
                <div>
                    @if (ViewBag.success != null)
                    {
                        <div class="text-right">
                            <button id="btnchangepasswordCancel" type="button" value="Close" class="btn btn-light" onclick=" window.location = '@ViewBag.HomeUrl.ToString()';">Close</button>
                        </div>           		
                    }
                    else
                    {
                        <div class="text-right m-t-25">
                            <button id="btnchangepasswordCancel" type="button" value="Cancel" class="btn btn-light m-r-5" onclick=" window.location = '@ViewBag.HomeUrl.ToString()';">Cancel</button>
                            <button type="submit" onclick="return encryptPassword()" class="btn btn-primary" id="btnchangepassword">Change Password</button>
                        </div> 
                    }
                </div>

            </div>
        </div>
    </div> 
       
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/sha1.js")" type="text/javascript"></script>
<script type="text/javascript">
    function encryptPassword() {
        if ($('#frmChangePassword').valid()) {
            $('#CurrentPassword').val(CryptoJS.SHA1($('#CurrentPassword').val()));
            $('#NewPassword').val(CryptoJS.SHA1($('#NewPassword').val()));
            $('#ConfirmPassword').val(CryptoJS.SHA1($('#ConfirmPassword').val()));
            return true;
        } else {
            return false;
        }
    }
</script>
