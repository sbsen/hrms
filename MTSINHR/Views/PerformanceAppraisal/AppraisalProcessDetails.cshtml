@{
    ViewBag.Title = "AppraisalProcessDetails";
}
@System.Web.Optimization.Styles.Render("~/bundles/datepickercss")
@System.Web.Optimization.Scripts.Render("~/bundles/datepicker")
<script src="~/Scripts/moment.min.js"></script>


<script src="~/Scripts/daterangepicker.min.js"></script>
<link href="~/Content/daterangepicker.css" rel="stylesheet" />
<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/select2.min.js"></script>

<style>
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
    /*.row_selected td {
       background-color: black !important; /* Add !important to make sure override datables base styles */
    }

    */ .pad-top25 {
        padding-top: 25px;
    }

    .badge {
        display: inline-block;
        padding: 0.25em 0.4em;
        font-size: 78%;
        font-weight: bold;
        line-height: 1;
        color: #fff;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: 0.25rem;
    }

    .pad0 {
        padding: 0px;
    }

    .pad-top22 {
        padding-top: 22px;
    }

    .pad-bottom5 {
        padding-bottom: 5px;
    }

    .requir {
        border-left: 2px solid red !important;
    }

    .modal-lg {
        max-width: 1200px;
    }
</style>

<div class="modal fade" id="Employee_mapping_modal" data-backdrop="static">
    <div class="modal-dialog modal-lg ">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Mapping Details</h4>
                <button type="button" onclick="clearinput()" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="col-lg-12 hideButtoncls ShowAllManagersListCls  text-right">
                Show all managers&nbsp;<input type="checkbox" id="ShowAllManagersList" class="chebox-lg">
            </div>
            <div class="modal-body  ">
                <div class="card-body">
                    <div class="row col-lg-12">
                        <div class="col-lg-3 form-group pad0">
                            <div class="col-lg-12">
                                <lable class=''>Employee Code</lable>
                            </div>
                            <div class="col-lg-12">
                                <input id="empCode" type="text" class=" form-control" disabled />
                            </div>
                        </div>
                        <div class="col-lg-3 form-group pad0">
                            <div class="col-lg-12">
                                <lable class=''>Employee Name</lable>
                            </div>
                            <div class="col-lg-12">
                                <input id="empName" type="text" class="form-control" disabled />
                            </div>
                        </div>
                        <div class="col-lg-3 form-group pad0">
                            <div class="col-lg-12">
                                <lable class=''>Employee Designation</lable>
                            </div>
                            <div class="col-lg-12">
                                <input id="empDesg" type="text" class="form-control" disabled />
                            </div>
                        </div>
                        <div class="col-lg-3 form-group pad0">
                            <div class="col-lg-12">
                                <lable class=''>Final Moderator</lable>
                            </div>
                            <div class="col-lg-12 ">
                                <input id="Moderator" type="text" class="form-control" disabled />
                            </div>
                        </div>
                        <div class="col-lg-4">
                        </div>

                    </div>
                    <div class=" col-lg-12 ">
                        <div class=" pad-bottom5">
                            <div class="row col-lg-12">
                                <div class="text-left col-lg-5 pad0" id="btnAddKraSkillDiv"><button id="btnAddKraSkill" type="button" class="btn btn-primary restrictKRA_SKILLcls" onclick="ShowKraSkill(this,event)"><i class="fa fa-plus-circle"></i>&nbsp;Add Kra/Skill</button></div>
                                <div class="col-lg-1"></div>
                                <div class="col-lg-5 row form-group pad0">
                                    <div class="col-lg-4 text-right p-t-5">
                                        <lable class=''>Manager</lable>
                                    </div>
                                    <div class="col-lg-8 ">
                                        <select id="drpdwnManagerName" class="form-control">
                                            <option value="0">---Select Manager---</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-lg-1 form-group hideButtoncls">
                                    <div class="col-lg-12">
                                    </div>
                                    <div class="col-lg-12">
                                        <button id="btnSaveManager" type="button" class="btn btn-primary " onclick="saveAssignManager()"><i class="fa fa-user-plus"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="restrictKRA_SKILLcls" id="eachKRA_SKILL_DIV">
                        <div class="row col-lg-12">
                            <div class="col-lg-6">
                                <div class="col-lg-12">
                                    <label>Type</label>
                                </div>
                                <div class="col-lg-12">
                                    <select id="type" class="col-lg-12 form-control inputcls requir select2cls">
                                        <option value="0">---Select Type---</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-6" id="dvWeightage">
                                <div class="col-lg-12">
                                    <label>Weightage(%)</label>
                                </div>
                                <div class="col-lg-12">

                                    <input id="weightage" class="col-lg-12 requir inputclearcls form-control  " type="number" />
                                </div>
                            </div>
                            @*<div class="col-lg-6">
                                    <div class="col-lg-12">
                                        <label>Functional Role</label>
                                    </div>
                                    <div class="col-lg-12">
                                        <select id="designation" class="col-lg-12 requir form-control inputcls select2cls">
                                            <option value="0">---Select Functional Role---</option>
                                        </select>
                                    </div>
                                </div>*@
                            <div class="col-lg-6" id="dvdescription">
                                <div class="col-lg-12">
                                    <label class="">Description</label>
                                </div>
                                <div class="col-lg-12">
                                    <select id="description" multiple="multiple" placeholder="--Select Description--" class="col-lg-12 requir form-control  select2cls">
                                        @*<option value="0" >---Select Description---</option>*@
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 text-right gap-top10 p-b-10 p-t-20">
                            <button type="button" id="btnSave" class="btn btn-primary" onclick="saveDesignationMapping()"><i class=""></i>&nbsp;Add</button>
                        </div>
                    </div>
                    <div>

                    </div>
                    <div class="MTS_Table">
                        <table class="table table-bordered table-responsive table-hover tabel-sm" id="Edit_Employee_Mapping" style="width:100%"></table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="clearinput()" id="modalClose" class="btn btn-light" data-dismiss="modal">Close</button>
                @*<input type="button" id="modalClose" value="Close" class="btn btn-danger" />*@
            </div>
        </div>
    </div>
</div>
<div class="">
    <div class="card">
        <div class="card-header text-center ">
            Appraisal Process Setup
        </div>
        <div class="row col-lg-12" style="padding-top: 10px;padding-left: 45px;padding-bottom: 10px;" id="btnAddAppraisalProcessDiv">
            <button class="btn btn-primary" id="btnAddAppraisalProcess" onclick="showAppraisalProcessDiv(this,event)"><i class="fa fa-plus-circle"></i>&nbsp;&nbsp;Appraisal Process</button>
            <br />
        </div>
        <div class="card-body" id="appraisalProcessContentDiv" hidden>
            <div id="appraisalProcessDiv">
                <div class="row col-lg-12" style="padding-bottom: 10px;" id="appraisalMappingDetails1">
                    <div class="col-lg-4">
                        <div class="col-lg-12">
                            <label>Appraisal Process Description/Period</label>
                        </div>
                        <div class="col-lg-12">
                            <input id="Process_Period" class="form-control requir" />
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="col-lg-12">
                            <label>Date of Join - Cut-Off (choose any one)</label>
                        </div>
                        <div class="col-lg-12">
                            <div class="row" id="DOJ_Element_Row">
                                <div class="col-lg-5" id="cut1">
                                    <input type="text" name="datefilter" id="daterangefilter" onkeydown="return false" placeholder="From - To" class=" text-center requir form-control" />
                                </div>
                                <div class="text-center col-lg-2" id="cut2">
                                    <label>(OR)</label>
                                </div>
                                <div class="col-lg-5" id="cut3">
                                    <input id="UntilDate" class=" text-center requir form-control" placeholder="Until Date" />
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="col-lg-4 p-t-30 pull-right">
                        <h4>
                            <span class="badge badge-primary">Maximum Rating: 5</span>
                        </h4>

                        @*<div class="col-lg-12 pull-right">

                            </div>
                            <div class="col-lg-12">
                                <select id="maxRating" class="col-lg-12 requir form-control  select2cls">
                                        <option value="5">5</option>
                                        <option value="10">10</option>
                                    </select>
                                <input id="maxRating" value="5" disabled class=" text-center form-control" />
                            </div>*@
                    </div>


                </div>

                <div class="col-lg-12 text-right " style="padding-top :10px;padding-bottom :10px;" id="appraisalMappingDetails3">
                    <button class="btn btn-success" onclick="saveAppraisalProcessDetails()">Save</button>
                </div>
            </div>
            <div class="MTS_Table" id="appraisalMappingDetails">
                <table class="table table-bordered table-hover tabel-sm table-responsive " id="Appraisal_Mapping_Table" style="width:100%">
                    <thead>
                        <tr>
                            <th rowspan="2">Appraisal Process Period</th>
                            @*<th rowspan="2">From Date</th>
                                <th rowspan="2">To Date</th>*@
                            <th rowspan="2">Evaluator Name</th>
                            <th rowspan="2">Maximum Rating</th>
                            <th rowspan="2">Total Emp.</th>
                            <th rowspan="2">Pending</th>
                            <th rowspan="2">From Date</th>
                            <th rowspan="2">From Date</th>

                            <th colspan="3">Completed</th>
                            <th rowspan="2">From Date</th>
                            <th rowspan="2">From Date</th>
                            <th rowspan="2">From Date</th>
                        </tr>
                        <tr>
                            <th>Not-Yet Set-up</th>
                            <th>Excess</th>
                            <th>Short</th>
                        </tr>
                    </thead>

                </table>
            </div>
            <div class="row" id="empMappingDetails">
                <div class="row" style="padding-bottom: 10px;" id="appraisalMappingDetails1">
                    <div class="p-l-20 m-l-10">
                        <label>Status</label>
                        <select id="statusFilter" class="col-lg-12 form-control">
                            <option value="0">All</option>
                            <option value="1">Completed</option>
                            <option value="2">Manager Rated</option>
                            <option value="3">Pending</option>
                            <option value="4">Self Rated</option>
                        </select>
                    </div>

                    <div class="p-l-10 m-l-10" style="width:250px;">
                        <label>Manager</label>
                        <select id="managerFilter" class="col-lg-12 form-control select2cls">
                            <option value="0">All</option>
                        </select>
                    </div>

                    <div class="p-l-10 m-l-10">
                        <div style="padding-top: 30px;">
                            <button class="btn btn-primary" onclick="filterStatus()"><i class="fa fa-filter"></i>&nbsp;Filter</button>
                        </div>
                    </div>

                    <div class="p-l-10 m-l-10 p-t-30">
                        <button class="btn btn-warning" id="btnviewAppraisal" onclick="redirectToAppraisalPage()">View Appraisal</button>
                    </div>

                    <div class="p-l-10 m-l-10 p-t-45" id="skipManagerToggleDiv">
                        <div class="pull-right">
                            <p class="m-b-0 pull-left fz14 m-l-5" id="tglAssignModerator">Assign Final Moderator(s)</p>
                            <div class="tg-list pull-left p-l-5">
                                <div class="tg-list-item">
                                    <input class="tgl tgl-light" id="tglOption" type="checkbox">
                                    <label class="tgl-btn" for="tglOption"></label>
                                </div>
                            </div>
                            <p class="m-b-0 pull-left fz14 m-r-5 p-l-5" id="tglSkipManager">Skip Manager Review</p>
                        </div>
                    </div>
                </div>

                <div class="col-lg-12 row p-l-30">
                    <div class="col-lg-6"></div>
                    <div class="col-lg-6 AssignModerator">

                        <div class="row float-right">
                            <div class=" text-center" style="width:250px;">
                                <select id="drpdwnEmpName" class="form-control select2cls">
                                    <option value="0">---Select Final Moderator---</option>
                                </select>
                            </div>
                            <div class=" p-l-20">
                                <button class="btn btn-success" id="btnAssignFinalModerator" onclick="assignFinalModerator()">Assign</button>
                            </div>

                        </div>

                    </div>
                    <div class="col-lg-6 SkipManager text-right">
                        <div class="p-b-5">
                            <button class="btn btn-success" onclick="skipManagers()">Skip Manager(s)</button>
                        </div>
                    </div>
                </div>

                <div class="col-lg-12 p-t-15">
                    <div class="MTS_Table">
                        @*<div class="col-lg-12 row text-left">
                                <button class="btn btn-primary">Assign Moderator</button><br />
                            </div>*@
                        <table class="table table-bordered table-hover tabel-sm table-responsive " id="Employee_Mapping_Table" style="width:100%"></table>

                    </div>
                </div>
                <div class="col-lg-12 text-left p-l-30 " style="padding-top :10px;padding-bottom :10px;" id="appraisalMappingDetails3">
                    <button class="btn btn-primary" onclick="backAppraisalProcessDetails()"><i class="fa fa-arrow-circle-left"></i>&nbsp;&nbsp;Back</button>
                </div>
            </div>


        </div>
    </div>
    <div class="clearfix"></div>
</div>
<script>
    var ManagersList = [];
    var EvaluaterList = [];
    var EmpMappingTableDetails;
    var AppraisalProcessDetails;
    var EMPLOYEE_ID;
    var EmpMappingTable;
    var DesgnMappingTableDetails;
    var APPRAISAL_PROCESS_ID;
    var APPRAISAL_ACTIVE_STAGE;
    var MODERATOR;
    var editEmployeeTable;
    var AssignFinalModerator = [];
    var Staging = [];
    var chkBoxFlag = 0;
    var STATUS;
    var MANAGER_ID;
    var MANAGER_NAME;
    var currType;
    var selectedRowEmpId;
    var empBasicDetail = [];
    var EMP_NAME;
    var Manager_Moderator_Pending = [];
    var KRA_SKILL_Pending = [];
    $(document).ready(function () {


        var table = $('#example').DataTable();


        $('#btnviewAppraisal').attr('disabled', true);
        $('.select2cls').select2({ 'width': '100%' });
        $('#appraisalProcessDiv,#eachKRA_SKILL_DIV').hide();
        getAppraisalDetails();
        GetEvaluaterList();

        GetDesignationList();
        Get_Skill_KRA_Details();
        //Get_Appraisal_Mapping_Table_Details();

        $('#appraisalMappingDetails1').show();
        $('#appraisalMappingDetails2').show();
        $('#appraisalMappingDetails3').show();
        $('#appraisalMappingDetails').show();
        $('#empMappingDetails').hide();

        $('#daterangefilter').daterangepicker({
            autoUpdateInput: false,

            locale: { cancelLabel: 'Clear' },

        });
        $('#daterangefilter').val('');
        $('#daterangefilter').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
            $('#cut2,#cut3').hide();
            if ($('#cut1').hasClass('col-lg-5')) {
                $('#cut1').removeClass('col-lg-5');
                $('#cut1').addClass('col-lg-12');
            }
        });
        $('#daterangefilter').on('cancel.daterangepicker', function (ev, picker) {
            $('#cut2,#cut3').show();
            $('#cut1').removeClass('col-lg-12');
            $('#cut1').addClass('col-lg-5');
            $('#daterangefilter').val('');
            //     ReloadTable();
        });


        if ('@ViewBag.ViewType' == 3) {
            redirectFromAppraisalDetail();
        }


        $('#Employee_Mapping_Table').on('click', 'tr', function () {

            var rowData = $('#Employee_Mapping_Table').DataTable().row(this.closest('tr')).data();
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
                $('#btnviewAppraisal').attr('disabled', true);
            }
            else {
                $(this).addClass('selected');
                $('#btnviewAppraisal').attr('disabled', false);
                selectedRowEmpId = rowData.EMP_ID// EmpMappingTable.row(this).data().EMP_ID;
                //$('#Employee_Mapping_Table').DataTable().row(thisval.closest('tr')).data();
            }
        });

        $('#UntilDate').datepicker({
            format: 'mm/dd/yyyy',
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            // endDate: monthlimit
            //    startDate: new Date()
        }).keydown(function (e) {

            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#UntilDate').val('');
            }
        });

        $('#drpdwnEmpName').on('change', function () {

            if ($('#drpdwnEmpName').val() == 0 || $('#drpdwnEmpName').val() == null || $('#drpdwnEmpName').val() == undefined) {
                $('#btnAssignFinalModerator').attr('disabled', 'disabled');
            }
            else {
                $('#btnAssignFinalModerator').attr('disabled', false);
            }
        })

        $('#btnAssignFinalModerator').attr('disabled', 'disabled');

        $('.SkipManager').hide();

        $('#tglOption').click(function () {

            if ($(this).prop("checked") == true) {
                $('.AssignModerator').hide();
                $('.SkipManager').show();
            }
            else if ($(this).prop("checked") == false) {
                $('.AssignModerator').show();
                $('.SkipManager').hide();
            }
        });
        //$('#assignModerator').click(function () {
        //
        //    var CurrentData = [];
        //    chkBoxFlag = 1;

        //    $.each(EmpMappingTableDetails, function (i, val) {
        //        if (val.ASSIGNED_MODERATOR_ID == 0) {
        //            CurrentData.push(val);
        //        }
        //    });
        //    EmpMappingTableDetails = CurrentData;
        //    Employee_mappingTable();
        //    if (chkBoxFlag == 1) {
        //        EmpMappingTable.column(19).visible(true);
        //    }
        //    else {
        //        EmpMappingTable.column(19).visible(false);
        //    }
        //});
        setTimeout(function () { $('#appraisalProcessContentDiv').prop('hidden', false); }, 500)

    });
    $('#ShowAllManagersList').on('click', function () {
        @*$.ajax({
            type: "GET",
            data: { GetAllmanagers: $('#ShowAllManagersList').is(":checked") },
            url: '@Url.Content("~/LeaveApply/GetManagersNames")',
            success: function (data) {
                var ManagersList = JSON.parse(data);
                $("#drpdwnManagerName").html('');
                $.each(ManagersList, function (i, val) {
                    $("#drpdwnManagerName").append('<option value="' + val.Value + '">' + val.Text + '</option>');
                })
                //if ($("#FromDate").val() != "" && $("#FromDate").val() != null && $("#ToDate").val() != "" && $("#ToDate").val() != null) {
                //    $("#Managerid").trigger('change');
                //}
            }
        });*@
        if ($('#ShowAllManagersList').is(":checked")) {



            $("#drpdwnManagerName").html('');
            $("#drpdwnManagerName").append('<option value="' + 0 + '">' + "----Select Manager----" + '</option>');
            $.each(EvaluaterList, function (i, val) {
                if (EMPLOYEE_ID != val.ID)
                    $("#drpdwnManagerName").append('<option value="' + val.ID + '">' + val.Manager_Name + '</option>');
            }
            );

            //if ((MANAGER_ID == 0 && STATUS >= 1) || (STATUS >= 2)) {
            //    $('#drpdwnManagerName').attr('disabled', true);
            //    $('#btnSaveManager').hide();
            //    if (MANAGER_NAME != null) {
            //        $("#drpdwnManagerName").empty();
            //        $("#drpdwnManagerName").append('<option value="' + 0 + '">' + MANAGER_NAME + '');
            //    }
            //}
        }
        else {
            GetManagersList(EMPLOYEE_ID);
            $('#drpdwnManagerName').select2('val', MANAGER_ID);
            $('#drpdwnManagerName').val(MANAGER_ID);
            if ((STATUS <= 1 || STATUS == null) && APPRAISAL_ACTIVE_STAGE <= 2) {
                $('#drpdwnManagerName').attr('disabled', false);
            }
            else {
                $('#drpdwnManagerName').attr('disabled', true);
            }
        }

    });

    function redirectFromAppraisalDetail() {
        $('#skipManagerToggleDiv,.AssignModerator').show();
        //   rowData = $('#Appraisal_Mapping_Table').DataTable().row(thisval.closest('tr')).data();
        APPRAISAL_PROCESS_ID = '@ViewBag.AppraisalProcessId';
        APPRAISAL_ACTIVE_STAGE = '@ViewBag.AppraisalActiveStage';
        Get_Appraisal_Mapping_Table_Details_By_ProcessId(APPRAISAL_PROCESS_ID);

        if (APPRAISAL_ACTIVE_STAGE > 2) {
            EmpMappingTable.columns(18).visible(false).columns(19).visible(false).draw(false);
            $('.hideButtoncls,#skipManagerToggleDiv,.SkipManager,.AssignModerator').hide();
        }
    }
    function redirectToAppraisalPage() {

        window.location.href = '@Url.Content("~/PerformanceAppraisal/EmployeeSelfAppraisal?empid=")' + selectedRowEmpId + '&AppraisalProcessId=' + APPRAISAL_PROCESS_ID + '&ViewType=' + 3 + '&AppraisalActiveStage=' + APPRAISAL_ACTIVE_STAGE;

    }
    function filterStatus() {

        EmpMappingTable.columns(7).search('', true).columns(12).search('', true).draw();
        //  EmpMappingTable.columns(12).search($('#statusFilter').children("option:selected").text()).draw();
        if ($('#statusFilter').children("option:selected").text() == 'All' && $('#managerFilter').children("option:selected").text() == 'All') {
            EmpMappingTable.columns(7).search('', true).columns(12).search('', true).draw();
        }
        if ($('#statusFilter').children("option:selected").text() != 'All' && $('#managerFilter').children("option:selected").text() != 'All') {
            EmpMappingTable.columns(12).search("^" + $.fn.dataTable.util.escapeRegex($('#statusFilter').children("option:selected").text()) + "$").columns(7).search("^" + $.fn.dataTable.util.escapeRegex($('#managerFilter').children("option:selected").text()) + "$").draw();

        }
        if ($('#statusFilter').children("option:selected").text() == 'All' && $('#managerFilter').children("option:selected").text() != 'All') {
            EmpMappingTable.columns(7).search("^" + $.fn.dataTable.util.escapeRegex($('#managerFilter').children("option:selected").text()) + "$").columns(12).search('', true).draw();

        }
        if ($('#statusFilter').children("option:selected").text() != 'All' && $('#managerFilter').children("option:selected").text() == 'All') {
            EmpMappingTable.columns(7).search('', true).columns(12).search("^" + $.fn.dataTable.util.escapeRegex($('#statusFilter').children("option:selected").text()) + "$").draw();

        }
        // if($('#managerFilter').children("option:selected").text()=='')
    }
    function generateDescriptionList() {
        $.each(TypeList, function (i, value) {
            $('#type').append('<option value="' + TypeList[i].Id + '">' + TypeList[i].PerformanceType + '');
        });
        if ($('#type').val() != "0") {
            $.each(DescriptionList, function (i, value) {

                $('#description').append('<option  value="' + DescriptionList[i].Id + '">' + DescriptionList[i].Description + '');
            });
        }
    }
    function GetDesignationList() {
        $.ajax({
            url: '@Url.Content("~/PerformanceAppraisal/GetDesignationDetails")',
            success: function (data) {
                DesignationList = JSON.parse(data.result);
                $.each(DesignationList, function (i, value) {
                    $('#designation').append('<option value="' + DesignationList[i].id + '">' + DesignationList[i].Role_Name + '');
                });

            }, error: function (err) {

                alert("error");
            }
        })
    }

    function Get_Skill_KRA_Details() {
        $.ajax({
            url: '@Url.Content("~/PerformanceAppraisal/Get_Skill_KRA_Details")',
            success: function (data) {
                //   Skill_KRA_details = JSON.parse(data.result);
                TypeList = JSON.parse(data.result1);
                DescriptionList = JSON.parse(data.result3);
                generateDescriptionList();
            }, error: function (err) {

                alert("error");
            }
        })
    }
    $('#UntilDate').on('change', function () {
        if ($(this).val() != '') {
            $('#cut1,#cut2').hide();
            if ($('#cut3').hasClass('col-lg-5')) {
                $('#cut3').removeClass('col-lg-5');
                $('#cut3').addClass('col-lg-12');
            }
        }
        else {
            $('#cut1,#cut2').show();
            $('#cut3').removeClass('col-lg-12');
            $('#cut3').addClass('col-lg-5');
        }
    });
    $('#type').on('change', function (e) {
        $('.field-validation-valid').text('');
        $('.field-validation-valid').show();
        $('#description').select2('val', '');
        $('#description').empty();
        currType = e.currentTarget.value;
        if (e.currentTarget.value == '1') {
            $('#weightage').val('');
            if ($("#dvdescription").hasClass("col-lg-12"))
                $("#dvdescription").removeClass("col-lg-12");
            if (!$("#dvdescription").hasClass("col-lg-6"))
                $("#dvdescription").addClass("col-lg-6");
            //$('#weightage').attr('disabled', false);
            $('#dvWeightage').show();

            $('#description').empty();
            $.each(DescriptionList, function (i, value) {
                if (e.currentTarget.value == DescriptionList[i].PerformanceTypeID) {
                    $('#description').append('<option  value="' + DescriptionList[i].Id + '">' + DescriptionList[i].Description + '');
                }
            });
            $.each(editEmployeeDetails, function (i, value) {
                $.each(DescriptionList, function (j, val) {
                    if (DescriptionList[j].Description == editEmployeeDetails[i].DESCRIPTION) {
                        $('#description option[value="' + DescriptionList[j].Id + '"]').remove();
                    }
                })
            });
        }
        else if (e.currentTarget.value == '2') {
            $('#weightage').val('');
            //$('#weightage').attr('disabled', false);
            if ($("#dvdescription").hasClass("col-lg-12"))
                $("#dvdescription").removeClass("col-lg-12");
            if (!$("#dvdescription").hasClass("col-lg-6"))
                $("#dvdescription").addClass("col-lg-6");
            $('#dvWeightage').show();
            $('#description').empty();
            $.each(DescriptionList, function (i, value) {
                if (e.currentTarget.value == DescriptionList[i].PerformanceTypeID) {
                    $('#description').append('<option  value="' + DescriptionList[i].Id + '">' + DescriptionList[i].Description + '');
                }
            });
            $.each(editEmployeeDetails, function (i, value) {
                $.each(DescriptionList, function (j, val) {
                    if (DescriptionList[j].Description == editEmployeeDetails[i].DESCRIPTION) {
                        $('#description option[value="' + DescriptionList[j].Id + '"]').remove();
                    }
                })
            });
        }
        else if (e.currentTarget.value == '3') {
            $('#weightage').val('');
            //$('#weightage').attr('disabled', true);
            $('#dvWeightage').hide();
            if ($("#dvdescription").hasClass("col-lg-6"))
                $("#dvdescription").removeClass("col-lg-6");
            if (!$("#dvdescription").hasClass("col-lg-12"))
                $("#dvdescription").addClass("col-lg-12");
            $('#description').empty();
            $.each(DescriptionList, function (i, value) {
                if (e.currentTarget.value == DescriptionList[i].PerformanceTypeID) {
                    $('#description').append('<option  value="' + DescriptionList[i].Id + '">' + DescriptionList[i].Description + '');
                }
            });
            $.each(editEmployeeDetails, function (i, value) {
                $.each(DescriptionList, function (j, val) {
                    if (DescriptionList[j].Description == editEmployeeDetails[i].DESCRIPTION) {
                        $('#description option[value="' + DescriptionList[j].Id + '"]').remove();
                    }
                })
            });
        }
        else {
            $('#weightage').val('');
            //$('#weightage').attr('disabled', false);
            $('#dvWeightage').show();
            $('#description').empty();
            if ($("#dvdescription").hasClass("col-lg-12"))
                $("#dvdescription").removeClass("col-lg-12");
            if (!$("#dvdescription").hasClass("col-lg-6"))
                $("#dvdescription").addClass("col-lg-6");
            //$.each(DescriptionList, function (i, value) {
            //    $('#description').append('<option  value="' + DescriptionList[i].Id + '">' + DescriptionList[i].Description + '');
            //});
        }
    });
    function validationCall() {

        $('.field-validation-valid').text('');
        $('.field-validation-valid').show();
        for (var i = 0; i < $('.inputcls').length; i++) {
            if ($('#' + $('.inputcls')[i].id).val() == '0') {
                $('<span class="field-validation-valid">' + ' This field is required...!</span>').css('color', 'red').insertAfter('#' + $('.inputcls')[i].id);
            }
        }
        if (currType != '3') {
            if ($('#weightage').val() == '' || $('#weightage').val() == 0) {
                $('<span class="field-validation-valid">' + ' Weightage should be more than 0</span>').css('color', 'red').insertAfter($('#weightage'));
            }
        }

        if ($('#description').val() == '') {
            $('<span class="field-validation-valid">' + ' This field is required...!</span>').css('color', 'red').insertAfter($('#description'));
        }


    }
    //$('.editWeightagecls').on('input', function () {
    //
    //    $('.field-validation-valid').text('');
    //    $('.field-validation-valid').show();
    //    if ($(this).val() > 100) {
    //        $('<span class="field-validation-valid">' + 100 + ' is the maximum limit ...!</span>').css('color', 'red').insertAfter(this);
    //    }
    //    if ($(this).val() == 0) {
    //        $('<span class="field-validation-valid">' + ' Weightage should be more than 0</span>').css('color', 'red').insertAfter(this);
    //    }
    //    $(this).val(Math.max(Math.min($(this).val(), 100), -(100)));

    //});
    $('#weightage').on('input', function () {

        $('.field-validation-valid').text('');
        $('.field-validation-valid').show();
        if ($(this).val() > 100) {
            $('<span class="field-validation-valid">' + 100 + ' is the maximum limit ...!</span>').css('color', 'red').insertAfter(this);
        }
        if ($(this).val() == 0) {
            $('<span class="field-validation-valid">' + ' Weightage should be more than 0</span>').css('color', 'red').insertAfter(this);
        }
        $(this).val(Math.max(Math.min($(this).val(), 100), -(100)));

    });
    function saveDesignationMapping() {
        var tempDescription = '';
        validationCall();
        //if ($('#weightage').val() == 0) {
        //    $('<span class="field-validation-valid">' + ' Weightage should be more than 0</span>').css('color', 'red').insertAfter($('#weightage'));
        //}
        if ($('.field-validation-valid').text() != '') {
            return false;
        }
        for (var i = 0; i < $('#description').val().length; i++) {
            tempDescription += $('#description').val()[i] + ',';
        }

        tempDescription = tempDescription.substring(0, tempDescription.length - 1);
        $.ajax({
            type: 'post',
            url: '@Url.Content("~/PerformanceAppraisal/Add_Appraisal_Designation_Mapping_For_Individual")',
            data: { type: $('#type').val(), description: tempDescription, weightage: $('#weightage').val(), EmpId: EMPLOYEE_ID, Appraisal_Process_Id: APPRAISAL_PROCESS_ID },
            success: function (data) {
                if (JSON.parse(data.result) == 1) {
                    toastr.success("Added successfully");
                    //     Get_Appraisal_Mapping_Table_Details();
                    Get_Appraisal_Employee_Mapping(EMPLOYEE_ID);
                    //  Designation_mappingTable();
                    //      Employee_mappingTable();
                    $('.field-validation-valid').text('');

                    clearinput2();
                }
                else {
                    toastr.warning("Already Exists");
                    $('.field-validation-valid').text('');
                    $('#KRA_SKillModal').modal('hide');
                    clearinput2();

                }
            }, error: function (err) {

                alert("error");
            }
        })

    }

    function ShowKraSkill(thisval, e) {
        if ($(thisval.firstElementChild).hasClass('fa-plus-circle')) {
            $(thisval.firstElementChild).removeClass('fa-plus-circle').addClass('fa-arrow-circle-up');
        }
        else {
            $(thisval.firstElementChild).removeClass('fa-arrow-circle-up').addClass('fa-plus-circle');
        }
        $('#eachKRA_SKILL_DIV').slideToggle();
    }
    function showAppraisalProcessDiv(thisval, e) {
        $('.field-validation-valid').text('');
        $('.field-validation-valid').show();
        if ($(thisval.firstElementChild).hasClass('fa-plus-circle')) {
            $(thisval.firstElementChild).removeClass('fa-plus-circle').addClass('fa-arrow-circle-up');
        }
        else {
            $(thisval.firstElementChild).removeClass('fa-arrow-circle-up').addClass('fa-plus-circle');
        }
        $('#appraisalProcessDiv').slideToggle();
        clearProcessInputs();
    }
    function getAppraisalDetails() {

        $.ajax({
            type: 'GET',
            url: '@Url.Content("~/PerformanceAppraisal/getAppraisalProcessDetails")',
            success: function (data) {

                AppraisalProcessDetails = JSON.parse(data.result1);
                Appraisal_MappingTable();
            }, error: function (err) {

                alert("error");
            }
        })

    }

    function getEvaluatorsName(FinalModerator, Manager) {

        //$("#drpdwnEmpName,#managerFilter").html('');
        $.each(FinalModerator, function (i) {
            $("#drpdwnEmpName").append('<option value="' + FinalModerator[i].ID + '">' + FinalModerator[i].Evaluator_Name + '');
        });
        $("#managerFilter").append('<option value="' + -1 + '">' + "No Manager Rating" + '</option>');
        $.each(Manager, function (i) {
            $("#managerFilter").append('<option value="' + Manager[i].ID + '">' + Manager[i].Manager_Name + '');
        });
    }

    function GetManagersList(Empid) {
        $.ajax({
            type: "GET",
            async: false,
            url: '@Url.Content("~/PerformanceAppraisal/GetManagersList")',
            data: { EmpId: Empid },
            success: function (data) {

                ManagersList = JSON.parse(data);
                $("#drpdwnManagerName").empty();
                $("#drpdwnManagerName").append('<option value="' + 0 + '">----Select Manager----');
                //$("#drpdwnManagerName,#drpdwnEmpName").val(0);
                //$("#drpdwnManagerName,#drpdwnEmpName").select2('val', 0);
                $.each(ManagersList, function (i) {
                    $("#drpdwnManagerName").append('<option value="' + ManagersList[i].id + '">' + ManagersList[i].Firstname + ' ' + ManagersList[i].Lastname + '');
                });
                //getEvaluatorsName();
            }, error: function (err) {
                alert("error");
            }
        });
    }
    function GetEvaluaterList() {
        $.ajax({
            type: "GET",
            url: '@Url.Content("~/PerformanceAppraisal/GetEvaluatorsList")',
            success: function (data) {

                EvaluaterList = JSON.parse(data.result1);
                getEvaluatorsName(JSON.parse(data.result), JSON.parse(data.result1));
            }, error: function (err) {

                alert("error");
            }
        });
    }
    function backAppraisalProcessDetails() {
        if ($('#tglOption').is(':checked')) {
            $('#tglOption').trigger('click');
        }
        $('#appraisalMappingDetails1').show();
        $('#appraisalMappingDetails2').show();
        $('#appraisalMappingDetails3').show();
        $('#appraisalMappingDetails').show();
        $('#empMappingDetails').hide();
        $('#btnAddAppraisalProcessDiv').show();
    }
    function validationAppraisalProcess() {

        $('.field-validation-valid').text('');
        $('.field-validation-valid').show();
        if ($('#daterangefilter').val() == '' && $('#UntilDate').val() == '') {
            $('<span class="field-validation-valid">This field is required...!</span>').css({ 'text-align': 'right', 'color': 'red' }).insertAfter('#DOJ_Element_Row');
        }
        if ($('#Process_Period').val().trim() == '') {
            $('<span class="field-validation-valid">This field is required...!</span>').css({ 'text-align': 'right', 'color': 'red' }).insertAfter('#Process_Period');
        }
    }
    function clearProcessInputs() {
        $('#daterangefilter').val('');
        $('#daterangefilter').trigger('cancel.daterangepicker');
        $('#UntilDate').val('');
        $('#UntilDate').trigger('change');
        $('#Process_Period').val('');
    }
    function saveAppraisalProcessDetails() {
        var StartDate = $('input[name="datefilter"]').val().split("-")[0];
        var EndDate = $('input[name="datefilter"]').val().split("-")[1];

        if (StartDate == '') {
            EndDate = '';
        }
        validationAppraisalProcess();
        if ($('.field-validation-valid').text() != '') {
            return false;
        }
        $.ajax({
            type: "POST",
            data: { appraisalPeriod: $('#Process_Period').val().trim(), fromdate: StartDate, todate: EndDate, untilDate: $('#UntilDate').val(), evaluator: $('#drpdwnEmpName').val(), maxRating: $('#maxRating').val() },
            url: '@Url.Content("~/PerformanceAppraisal/AddAppraisalProcessDetails")',
            success: function (data) {
                if (data.result > 0) {
                    toastr.success("Successfully Added");
                    getAppraisalDetails();
                    clearProcessInputs();

                }
                else {
                    toastr.warning("Failed to Add. Same Appraisal Exists or No Employee Available.");
                }
            }
             , error: function (err) {

                 alert("error");
             }
        });
    }
    function dateValueFormat(date) {
        var d = new Date(date);
        var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                        "Aug", "Sep", "Oct", "Nov", "Dec"];
        var val = d.getDate() + "-" + months[d.getMonth()] + "-" + d.getFullYear();
        return val;
    }

    function Appraisal_MappingTable() {

        if ($.fn.DataTable.isDataTable('#Appraisal_Mapping_Table')) {
            $('#Appraisal_Mapping_Table').dataTable().fnDestroy();
        }
        EmpMappingTable = $('#Appraisal_Mapping_Table').DataTable({
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "iDisplayLength": 5,
            "bFilter": true,
            'data': AppraisalProcessDetails,
            "aoColumns":
        [
           { "mData": "Appraisal_Process_Period", "sTitle": "Appraisal Process Description/Period", 'bVisible': false, "sClass": "text-left", "sWidth": "0%", "defaultContent": "<i>Not set</i>" }//0
         , { "mData": "Appraisal_Process_Period_Name", "sTitle": "Appraisal Process Description/Period", "sClass": "text-left", "sWidth": "25%", "defaultContent": "<i>Not set</i>" }//1
         , { "mData": "From_Date", "sTitle": "Date of Join(Cut Off)", "sClass": "text-center", "sWidth": "30%", "defaultContent": "<i>Not set</i>" }//2
         //, { "mData": "From_Date", "sTitle": "From Date", "sClass": "text-left", "sWidth": "20%", "defaultContent": "<i>Not set</i>" }//
         //, { "mData": "To_Date", "sTitle": "To Date", "sClass": "text-left", "sWidth": "20%", "defaultContent": "<i>Not set</i>" }//
         //, { "mData": "Until", "sTitle": "Until", "sClass": "text-left", "sWidth": "20%", "defaultContent": "<i>Not set</i>" }//
         , { "data": "Evaluator", "sTitle": "Evaluator", "sClass": "text-center", "sWidth": "0%", 'bVisible': false, "defaultContent": "<i>Not set</i>" }//3
         , { "mData": "EMP_NAME", "sTitle": "Evaluator Name", 'bVisible': false, "sClass": "text-left", "sWidth": "0%", "defaultContent": "<i>Not set</i>" }//4
         , { "mData": "Maximum_Rating", "sTitle": "Maximum Rating", 'bVisible': false, "sClass": "text-right", "sWidth": "0%", "defaultContent": "<i>Not set</i>" }//5
          , { "mData": "Total_Employees", "sTitle": "Total Employee(s)", "sClass": "text-right", "sWidth": "5%", "defaultContent": "<i>Not set</i>" }//6

            , { "mData": "Self_Apprisal_comp", "sTitle": "Self Rating", "sClass": "text-right", "sWidth": "5%", "defaultContent": "<i>Not set</i>" }//7
             , { "mData": "Manager_Rating_Comp", "sTitle": "Manager Rating", "sClass": "text-right", "sWidth": "10%", "defaultContent": "<i>Not set</i>" }//8
              , { "mData": "Final_Rating_Comp", "sTitle": "Final Rating", "sClass": "text-right", "sWidth": "5%", "defaultContent": "<i>Not set</i>" }//9
               , { "mData": "Pending", "sTitle": "Pending", "sClass": "text-right", "sWidth": "5%", "defaultContent": "<i>Not set</i>" }//10
               , { "mData": "Active", "sTitle": "Process Status", "sClass": "text-center", "sWidth": "10%", "defaultContent": "<i>Not set</i>" }//11
         , { "mData": "Id", "sTitle": "View", "sClass": "text-center", "sWidth": "5%", "bSortable": true, "orderable": false }//12

        ],
            'aoColumnDefs':
                [
                    {
                        "aTargets": [12],
                        "mRender": function (data, type, row) {
                            return '<span onclick="ViewEmpAppraisalMapping(this)" id="viewLeaveDetails" class="fa fa-bars spanedit"></span>';
                        }
                    }

                      , {
                          "aTargets": [2],
                          "mRender": function (data, type, row) {
                              if (row.From_Date == null) {
                                  return "Until Date - " + dateValueFormat(row.Until);
                              }
                              else {
                                  return "Between" + dateValueFormat(row.From_Date) + " & " + dateValueFormat(row.To_Date)
                              }
                          }
                      }

                    //, {
                    //    "aTargets": [4],
                    //    "mRender": function (data, type, row) {
                    //        return dateValueFormat(data);
                    //    }
                    //}

                    , {
                        "aTargets": [6, 7, 8, 9, 10],
                        "mRender": function (data, type, row) {
                            return data;
                        }
                    }
                     , {
                         "aTargets": [11],
                         "mRender": function (data, type, row) {
                             if (data == 2) {
                                 return '<span   class="badge" style="background-color:green;cursor:pointer;" onclick="appraisalClosing(this)">Published</span>';
                             }
                             if (data == 3) {
                                 return '<span   class="badge" style="background-color:#dc3535c4;">Closed</span>';
                             }
                             if (data == 1) {
                                 return '<span   class="badge" style="background-color:#0602f7c4;cursor:pointer;"  onclick="appraisalPublishing(this)">Initiated</span>';
                             }
                         }
                     }

                ],
        })
    }
    function ViewEmpAppraisalMapping(thisval) {

        $('#skipManagerToggleDiv,.AssignModerator').show();
        rowData = $('#Appraisal_Mapping_Table').DataTable().row(thisval.closest('tr')).data();
        APPRAISAL_PROCESS_ID = rowData.Id;
        APPRAISAL_ACTIVE_STAGE = rowData.Active;
        Get_Appraisal_Mapping_Table_Details_By_ProcessId(rowData.Id);

        if (APPRAISAL_ACTIVE_STAGE > 2) {
            EmpMappingTable.columns(18).visible(false).columns(19).visible(false).draw(false);
            $('.hideButtoncls,#skipManagerToggleDiv,.SkipManager,.AssignModerator').hide();
        }

    }


    function Get_Appraisal_Mapping_Table_Details_By_ProcessId(APPRAISAL_PROCESS_Id) {
        $.ajax({
            type: 'get',
            async: false,
            url: '@Url.Content("~/PerformanceAppraisal/Get_Appraisal_Mapping_Table_Details_By_ProcessId")',
            data: { AppraisalProcessId: APPRAISAL_PROCESS_Id },
            success: function (data) {

                $('#statusFilter').val(0);
                $('#managerFilter').select2('val', 0);
                $('#drpdwnEmpName').select2('val', 0);
                $('#drpdwnEmpName').trigger('change');
                EmpMappingTableDetails = JSON.parse(data.result1);
                Employee_mappingTable();
            }
            , error: function (err) {

                alert("error");
            }
        })
    }

    function Employee_mappingTable() {

        $('#appraisalMappingDetails1').hide();
        $('#appraisalMappingDetails2').hide();
        $('#appraisalMappingDetails3').hide();
        $('#appraisalMappingDetails').hide();
        $('#empMappingDetails').show();
        $('#btnAddAppraisalProcessDiv').hide();
        if ($.fn.DataTable.isDataTable('#Employee_Mapping_Table')) {
            $('#Employee_Mapping_Table').dataTable().fnDestroy();
        }
        EmpMappingTable = $('#Employee_Mapping_Table').DataTable({
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "iDisplayLength": 5,
            "bFilter": true,
            // stateSave: true,
            "select": { style: 'single' },
            'scrollX': true,
            'data': EmpMappingTableDetails,

            "aoColumns":
        [
           { "mData": "EMP_CODE", "sTitle": "Employee Code", "sClass": "text-left", "defaultContent": "<i>Not set</i>" }//0
           , { "mData": "EMP_NAME", "sTitle": "Employee Name", "sClass": "text-left", "defaultContent": "<i>Not set</i>" }//1
           , { "mData": "TYPE", "sTitle": "Type", "sClass": "text-left", 'bVisible': false, "defaultContent": "<i>Not set</i>" }//2
           , { "mData": "DESCRIPTION", "sTitle": "Description", "sClass": "text-left", 'bVisible': false, "defaultContent": "<i>Not set</i>" }//3
           , { "data": "WEIGHTAGE", "sTitle": "Weightage", "sClass": "text-center", 'bVisible': false, "defaultContent": "<i>Not set</i>" }//4
           , { "mData": "DESIGNATION", "sTitle": "Role", "sClass": "text-left", "defaultContent": "<i>Not set</i>" }//5
           , { "mData": "DOJ", "sTitle": "Date Of Join", "sType": "date", "sClass": "text-center", "defaultContent": "<i>Not set</i>" }//6
           , { "mData": "ASSIGNED_MANAGER_NAME", "sTitle": "Manager", "sClass": "text-left", "defaultContent": "<i>Not set</i>" }//7
           , { "mData": "ASSIGNED_MODERATOR_NAME", "sTitle": "Assigned Final Moderator", "sClass": "text-left", "defaultContent": "<i>Not set</i>" }//8
           , { "mData": "Status", "sTitle": "Self Rating", 'bVisible': false, "sClass": "text-center", "defaultContent": "<i>Not set</i>" }//9
           , { "mData": "Status", "sTitle": "Manager Rating", 'bVisible': false, "sClass": "text-center", "defaultContent": "<i>Not set</i>" }//10
           , { "mData": "Status", "sTitle": "Final Evl. Rating", 'bVisible': false, "sClass": "text-center", "defaultContent": "<i>Not set</i>" }//11
           , { "mData": "Status", "sTitle": "Status", "sClass": "text-center", "defaultContent": "<i>Not set</i>" }//12
           , { "mData": "Performance", "sTitle": "Performance Rating", "sClass": "text-center", "defaultContent": "<i>Not set</i>" }//13
           , { "mData": "Potential", "sTitle": "Potential", "sClass": "text-center", "defaultContent": "<i>Not set</i>" }//14
           , { "mData": "Overall_Rating", "sTitle": "Category", "sClass": "text-center", "defaultContent": "<i>Not set</i>" }//15
           , { "mData": "FEEDBACK_CATEGORY", "sTitle": "Feedback Category", "sClass": "text-center", "defaultContent": "<i>Not set</i>" }//16
           , { "mData": null, "sTitle": "Edit", "sClass": "text-center", "defaultContent": "<i class='fa fa-edit' style='cursor: pointer;' onclick='EditCall(this)'></i>" }//17
           , { "mData": null, "sTitle": "Delete", "sClass": "text-center", "defaultContent": "<i class='fa fa-trash' style='cursor: pointer;' onclick='DeleteCall(this)'></i>" }//18
           , { "mData": "EMP_CODE", "sTitle": "Select Employee", "sClass": "text-center", "defaultContent": "<i>Not set</i>" }//19


        ],
            'aoColumnDefs':
                [
                    {
                        "aTargets": [3], "mRender": function (data, type, row) {
                            //for (var i = 0; i < DescriptionList.length; i++) {
                            //    if (data == DescriptionList[i].Description) {

                            //    }
                            //}
                            return data;
                        }
                    }
                    ,
                    {
                        "aTargets": [6], "mRender": function (data, type, row) {
                            return dateValueFormat(data);
                        }
                    }
                    , {
                        "aTargets": [7], "mRender": function (data, type, row) {

                            if (row.ASSIGNED_MANAGER_ID == 0) {
                                return 'No Manager Rating';
                            }

                            else {
                                if (data == null || data == undefined) {
                                    return 'Not Assigned';
                                }
                                else {
                                    return data;
                                }
                            }
                        }

                    }
                     , {
                         "aTargets": [8], "mRender": function (data, type, row) {
                             if (data == null || data == undefined) {
                                 row.ASSIGNED_MODERATOR_ID = 0;
                                 // return '<label  class="moderatorNAcls">Not Assigned</label>input id="checkbox'+row.EMP_ID+'" ';
                                 return 'Not Assigned';
                             }
                             else {

                                 return data;
                             }
                         }

                     }
                    , {
                        "aTargets": [9], "mRender": function (data, type, row) {
                            if (data == null || data == undefined || data == 0) {
                                return '<i class="fa fa-close" style="color:gray;"></i>'
                            }
                            else {

                                return '<i class="fa fa-check" style="color:gray;"></i>'
                            }
                        }

                    }
                    , {
                        "aTargets": [10], "mRender": function (data, type, row) {
                            if (data >= 2 && data <= 3) {
                                return '<i class="fa fa-check" style="color:gray;"></i>'
                            }
                            else {
                                return '<i class="fa fa-close" style="color:gray;" ></i>'
                            }
                        }

                    }

                    , {
                        "aTargets": [11], "mRender": function (data, type, row) {
                            if (data == 3) {
                                return '<i class="fa fa-check" style="color:gray;"></i>'
                            }
                            else {
                                return '<i class="fa fa-close" style="color:gray;" ></i>'
                            }
                        }

                    }
                     , {
                         "aTargets": [12], "mRender": function (data, type, row) {
                             if (data == 3) {
                                 return '<span   class="badge" style="background-color:green;">Completed</span>'
                             }
                             if (data == 2) {
                                 if (row.ASSIGNED_MANAGER_ID == 0) {
                                     return '<span class="badge" style="background-color:#b17018;">Self Rated</span>'
                                 }
                                 else {
                                     return '<span class="badge" style="background-color:#060df1b8;">Manager Rated</span>'
                                 }
                             }
                             if (data == 1) {
                                 return '<span   class="badge" style="background-color:#b17018;">Self Rated</span>'
                             }
                             else {
                                 return '<span   class="badge" style="background-color:#dc3535c4;">Pending</span>'
                             }
                         }


                     }
                     , {
                         "aTargets": [13, 14, 15, 16], "mRender": function (data, type, row) {

                             if (row.Status >= 3) {
                                 return data;
                             }
                             else {
                                 return 'Not Set'
                             }
                         }


                     }
                     , {
                         "aTargets": [19]
                         , "mRender": function (data, type, row) {
                             //if (row.ASSIGNED_MODERATOR_ID == 0) {
                             return '<input type="checkbox" id="' + row.EMP_CODE + '" name="' + row.EMP_CODE + '" class="checkboxcls spanedit" />';
                             //}
                             //else {
                             //    return '';
                             //}
                         }
                     }
                ],
        })
    }

    function EditCall(thisval) {

        //$('#eachKRA_SKILL_DIV').hide();
        rowData = $('#Employee_Mapping_Table').DataTable().row(thisval.closest('tr')).data();
        EMPLOYEE_ID = rowData.EMP_ID;
        MODERATOR = rowData.ASSIGNED_MODERATOR_NAME;
        MANAGER_ID = rowData.ASSIGNED_MANAGER_ID;
        MANAGER_NAME = rowData.ASSIGNED_MANAGER_NAME;
        STATUS = rowData.Status;
        EMP_NAME = EMP_NAME;
        GetManagersList(rowData.EMP_ID);
        if (ManagersList.length > 0) {
            $.each(ManagersList, function (i) {
                if (MANAGER_ID == ManagersList[i].id) {
                    $('#drpdwnManagerName').val(rowData.ASSIGNED_MANAGER_ID);
                    $('#drpdwnManagerName').trigger('change');
                }
            });
        }
        //else {
        //    if (EvaluaterList.length > 0) {
        //        $.each(EvaluaterList, function (i, val) {
        //            if (EMPLOYEE_ID != val.ID)
        //                $("#drpdwnManagerName").append('<option value="' + val.ID + '">' + val.Manager_Name + '</option>');
        //        }
        //        );
        //        $.each(EvaluaterList, function (i) {
        //            if (MANAGER_ID == EvaluaterList[i].id) {
        //                $('#drpdwnManagerName').val(rowData.ASSIGNED_MANAGER_ID);
        //                $('#drpdwnManagerName').trigger('change');
        //            }
        //        });
        //    }
        //}


        Get_Appraisal_Employee_Mapping(rowData.EMP_ID);
        $('#Employee_mapping_modal').modal('show');
        //$('#drpdwnManagerName').select2('val', rowData.ASSIGNED_MANAGER_ID);
        //$('#drpdwnManagerName').val(rowData.ASSIGNED_MANAGER_ID);



        //Get_Appraisal_Mapping_Table_Details();
    }
    function Get_Appraisal_Employee_Mapping(eMP_ID) {

        $.ajax({
            type: 'get',
            url: '@Url.Content("~/PerformanceAppraisal/GetIndividualMappingDetails")',
            data: { EmpId: eMP_ID, AppraisalProcessId: APPRAISAL_PROCESS_ID },
            success: function (data) {
                empBasicDetail = JSON.parse(data.result2);
                editEmployeeDetails = JSON.parse(data.result1);
                $('#empCode').val(empBasicDetail[0].EMP_CODE);
                $('#empDesg').val(empBasicDetail[0].DESIGNATION);
                $('#empName').val(empBasicDetail[0].EMP_NAME);
                $('.hideButtoncls').show();
                Edit_Employee_Mapping_Table();
                if (APPRAISAL_ACTIVE_STAGE > 2) {
                    $('.hideButtoncls').hide();
                    editEmployeeTable.columns(6).visible(false).draw(false);
                    editEmployeeTable.$('.restrictKRA_SKILLcls').hide();
                    $('#drpdwnManagerName').attr('disabled', true);
                }

                if (STATUS >= 1) {
                    $('.restrictKRA_SKILLcls').hide();
                    editEmployeeTable.columns(6).visible(false).draw(false);
                    editEmployeeTable.$('.restrictKRA_SKILLcls').hide();
                }
                else {
                    $('.restrictKRA_SKILLcls').show();
                    editEmployeeTable.columns(6).visible(true).draw(false);
                }
                if (APPRAISAL_ACTIVE_STAGE > 2) {
                    $('.hideButtoncls').hide();
                    $('.restrictKRA_SKILLcls').hide();
                    $('#btnSaveManager').hide();
                    $('#drpdwnManagerName').attr('disabled', true);
                    editEmployeeTable.columns(6).visible(false).draw(false);
                    editEmployeeTable.$('.restrictKRA_SKILLcls').hide();
                }
                //if ( STATUS >=2) {
                //    $('#drpdwnManagerName').attr('disabled', true);
                //    $('#btnSaveManager').hide();
                //}

                if ((MANAGER_ID == 0 && STATUS >= 1) || (STATUS >= 2)) {
                    $('#drpdwnManagerName').attr('disabled', true);
                    $('#btnSaveManager,.ShowAllManagersListCls').hide();

                    if (MANAGER_NAME != null) {
                        $("#drpdwnManagerName").empty();
                        $("#drpdwnManagerName").append('<option value="' + 0 + '">' + MANAGER_NAME + '');
                    }
                }
                else {
                    $('#drpdwnManagerName').attr('disabled', false);
                    $('#btnSaveManager').show();
                }
                $('#eachKRA_SKILL_DIV').hide();
            }, error: function (err) {

                alert("error");
            }

        })
    }
    function GetPendingDetailsBeforePublishing(thisval) {
        rowData = $('#Appraisal_Mapping_Table').DataTable().row(thisval.closest('tr')).data();

        $.ajax({
            type: 'post',
            async: false,
            url: '@Url.Content("~/PerformanceAppraisal/GetPendingDetailsBeforePublishing")',
            data: { AppraisalProcessId: rowData.Id },
            success: function (data) {
                if (data.success) {
                    Manager_Moderator_Pending = JSON.parse(data.result1);
                    KRA_SKILL_Pending = JSON.parse(data.result2);
                }
            }, error: function (err) {

                alert("error");
            }

        })
    }
    function appraisalPublishing(thisval) {
        var MessageText = '';

        rowData = $('#Appraisal_Mapping_Table').DataTable().row(thisval.closest('tr')).data();
        GetPendingDetailsBeforePublishing(thisval);
        //if (Manager_Moderator_Pending[0].Manager_Assign_Pending || Moderator_Assign_Pending || KRA_SKILL_Pending[0].KRA_SKILL_PENDING) {
        if (Manager_Moderator_Pending[0].Manager_Assign_Pending || KRA_SKILL_Pending[0].KRA_SKILL_PENDING) {
            MessageText = "Few employees are not assigned manager, final moderator, KRA / Skill or Summary. Do you want to publish the appraisal process anyway?";
        }
        else {
            MessageText = 'Do you want to Publish this appraisal process to all mapped employees?';
        }
        bootbox.confirm(MessageText, function (result) {
            if (result) {

                $.ajax({
                    type: 'post',
                    url: '@Url.Content("~/PerformanceAppraisal/PublishingAppraisalProcess")',
                    data: { AppraisalProcessId: rowData.Id },
                    success: function (data) {
                        if (data.result > 0) {

                            toastr.success("Published Successfully");
                            getAppraisalDetails();
                        }
                    }, error: function (err) {

                        alert("error");
                    }

                })
            }
        });
    }
    function appraisalClosing(thisval) {

        bootbox.confirm('Are you sure do you want to close this appraisal process?', function (result) {
            if (result) {
                rowData = $('#Appraisal_Mapping_Table').DataTable().row(thisval.closest('tr')).data();

                $.ajax({
                    type: 'post',
                    url: '@Url.Content("~/PerformanceAppraisal/ClosingAppraisalProcess")',
                    data: { AppraisalProcessId: rowData.Id },
                    success: function (data) {
                        if (data.result > 0) {

                            toastr.success("Period Closed Successfully");
                            getAppraisalDetails();
                        }
                    }, error: function (err) {

                        alert("error");
                    }

                })
            }
        });
    }

    function DeleteCall(thisval) {
        debugger
        var MessageText = '';
        rowData = $('#Employee_Mapping_Table').DataTable().row(thisval.closest('tr')).data();
        if (rowData.Status >= 1) {
            MessageText = 'This Employee has already got self/manager/final rating. Do you want to remove this Employee from the appraisal process anyway?';
        }
        else {
            MessageText = 'Are you sure do you want to remove this Employee from the appraisal process?';
        }

        bootbox.confirm(MessageText, function (result) {

            if (result) {


                $.ajax({
                    type: 'post',
                    url: '@Url.Content("~/PerformanceAppraisal/RemoveAppraisalEmployeeMapping")',
                    data: { EMP_ID: rowData.EMP_ID, AppraisalProcessId: APPRAISAL_PROCESS_ID },
                    success: function (data) {
                        if (data.result > 0) {
                            Get_Appraisal_Mapping_Table_Details_By_ProcessId(APPRAISAL_PROCESS_ID);
                            //Get_Appraisal_Mapping_Table_Details();
                            toastr.success("Deleted successfully");
                        }
                    }, error: function (err) {

                        alert("error");
                    }

                })
            }
        });
    }
    function Edit_Delete_Row(thisval, status) {

        rowData = $('#Edit_Employee_Mapping').DataTable().row(thisval.closest('tr')).data();
        if (rowData.WEIGHTAGE > 100) {
            toastr.warning("Weightage should be less than 100");
            return false;
        }

        if (status == 1 && (rowData.WEIGHTAGE == null || rowData.WEIGHTAGE == '' || rowData.WEIGHTAGE == 0)) {
            toastr.warning("Weightage should be more than 0");
            return false;
        }
        $.ajax({
            type: 'post',
            url: '@Url.Content("~/PerformanceAppraisal/RemoveEmployeeMappingDetails")',
            data: { status: status, weightage: rowData.WEIGHTAGE, rowID: rowData.ROW_ID },
            success: function (data) {
                if (data.result == 1) {
                    toastr.success("Updated successfully");
                }
                if (data.result == 2) {
                    toastr.success("Removed successfully");
                }
                showTable(EMPLOYEE_ID);
            }
            , error: function (err) {

                alert("error");
            }

        })
    }

    function showTable(id) {
        $.ajax({
            type: 'get',
            url: '@Url.Content("~/PerformanceAppraisal/GetIndividualMappingDetails")',
            data: { EmpId: id, AppraisalProcessId: APPRAISAL_PROCESS_ID },
            success: function (data) {
                editEmployeeDetails = JSON.parse(data.result1);
                Edit_Employee_Mapping_Table();
            }
             , error: function (err) {

                 alert("error");
             }

        })

    }

    function Edit_Employee_Mapping_Table() {
        if ($.fn.DataTable.isDataTable('#Edit_Employee_Mapping')) {
            $('#Edit_Employee_Mapping').dataTable().fnDestroy();
        }
        editEmployeeTable = $('#Edit_Employee_Mapping').DataTable({
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "iDisplayLength": 5,
            "bFilter": true,
            // 'scrollX': true,
            'data': editEmployeeDetails
    ,
            "aoColumns":
        [
           { "mData": "EMP_CODE", "sTitle": "Employee Code", "sClass": "text-left", 'bVisible': false, "defaultContent": "<i>Not set</i>" }//0
       , { "mData": "EMP_NAME", "sTitle": "Employee Name", "sClass": "text-left", 'bVisible': false, "defaultContent": "<i>Not set</i>" }//1
          , { "mData": "TYPE", "sTitle": "Type", "sClass": "text-left", "sWidth": "15%", "defaultContent": "<i>Not set</i>" }//2
          , { "mData": "DESCRIPTION", "sTitle": "Description", "sClass": "text-left", "sWidth": "30%", "defaultContent": "<i>Not set</i>" }//3
         , { "data": "WEIGHTAGE", "sTitle": "Weightage", "sClass": "text-center", "sWidth": "40%", "defaultContent": "<i>Not set</i>" }//4
         , { "mData": "DESIGNATION", "sTitle": "Designation", 'bVisible': false, "sClass": "text-left", "defaultContent": "<i>Not set</i>" }//5
          , { "mData": null, "sTitle": "Delete", "sClass": "text-center", "sWidth": "15%", "defaultContent": "<i class='fa fa-trash' style='cursor: pointer;' onclick='Edit_Delete_Row(this,2)'></i>" }//6



        ],
            "aoColumnDefs": [{
                "aTargets": [4]
                            , "mRender": function (data, type, row) {
                                var btnAssignMng = '';
                                //  var btnAddKraSkill = '';

                                //if (STATUS <= 1 || STATUS == null) {
                                //    btnAssignMng = '<button id="btnSave' + row.ROW_ID + '" type="button" class="btn btn-primary" onclick="saveAssignManager(' + row.ROW_ID + ')"><i class="fa fa-user-plus"></i> Assign</button>';
                                //}
                                //else {
                                //    btnAssignMng = '';
                                //    $('#drpdwnManagerName').attr('disabled', true);
                                //}
                                ////   btnAddKraSkill = '<button id="btnSave' + row.ROW_ID + '" type="button" class="btn btn-primary" onclick="saveAssignManager(' + row.ROW_ID + ')">Assign <i class="fa fa-user-plus"></i></button>';
                                //// $('#btnAddKraSkillDiv').html(btnAddKraSkill);
                                //$('#btnassignManagerDiv').html(btnAssignMng);
                                //$('#empCode').val(row.EMP_CODE);
                                //$('#empDesg').val(row.DESIGNATION);
                                $('#Moderator').val(MODERATOR);
                                //if (APPRAISAL_ACTIVE_STAGE > 2) {
                                //    $('.hideButtoncls').hide();
                                //}
                                //if (APPRAISAL_ACTIVE_STAGE >= 1) {
                                //    $('.restrictKRA_SKILLcls').hide();
                                //}
                                return ' <div><input id="weightage' + row.ROW_ID + '"  onchange="modifyWeightage(this,' + row.ROW_ID + ')" class="editWeightagecls" type="number"  value=' + data + ' disabled />&nbsp&nbsp<i class="fa fa-edit restrictKRA_SKILLcls" onclick="enableWeightage(this,' + row.ROW_ID + ')" style="cursor: pointer;"></i>&nbsp&nbsp<i class="fa fa-save restrictKRA_SKILLcls" onclick="Edit_Delete_Row(this,1)" style="cursor: pointer;"></i></div>'
                            },

            },


            ]
        })
    }
    function saveAssignManager() {

        if ($('#drpdwnManagerName').val() == 0 || $('#drpdwnManagerName').val() == null || $('#drpdwnManagerName').val() == '') {
            toastr.warning('Please Select Manager...!');
            return false;
        }
        $.ajax({
            type: 'post',
            url: '@Url.Content("~/PerformanceAppraisal/AssignManagerToEmployee")',
            data: { id: EMPLOYEE_ID, managerId: $('#drpdwnManagerName').val(), AppraisalProcessId: APPRAISAL_PROCESS_ID },
            success: function (data) {
                if (data.result == 1) {
                    toastr.success("Assigned successfully");
                    Get_Appraisal_Mapping_Table_Details_By_ProcessId(APPRAISAL_PROCESS_ID);
                    $('#Employee_mapping_modal').modal('hide');
                    $('#ShowAllManagersList').prop('checked', false);

                }
            }, error: function (err) {

                alert("error");
            }
        })

    }
    function modifyWeightage(thisval, rowID) {

        rowData = $('#Edit_Employee_Mapping').DataTable().row(thisval.closest('tr')).data();
        rowData.WEIGHTAGE = $('#weightage' + rowID).val();

        //$('.field-validation-valid').text('');
        //$('.field-validation-valid').show();
        //if ($('#weightage' + rowID).val() > 100) {
        //    $('<span class="field-validation-valid">' + 100 + ' is the maximum limit ...!</span>').css('color', 'red').insertAfter($('#weightage' + rowID));
        //}
        //if ($('#weightage' + rowID).val() == 0) {
        //    $('<span class="field-validation-valid">' + ' Weightage should be more than 0</span>').css('color', 'red').insertAfter($('#weightage' + rowID));
        //}
        //$(this).val(Math.max(Math.min($(this).val(), 100), -(100)));
    }
    function enableWeightage(thisval, rowID) {
        if ($('#weightage' + rowID).is(":disabled")) {
            $('#weightage' + rowID).attr('disabled', false);
        }
        else {
            $('#weightage' + rowID).attr('disabled', true);
        }

    }

    function Get_Appraisal_Mapping_Table_Details() {
        $.ajax({
            type: 'get',
            url: '@Url.Content("~/PerformanceAppraisal/Get_Appraisal_Mapping_Table_Details")',
            success: function (data) {
                EmpMappingTableDetails = JSON.parse(data.result2);
                Employee_mappingTable();
                //  Designation_mappingTable();
            }, error: function (err) {
                alert("error");
            }
        })
    }

    function Designation_mappingTable() {
        if ($.fn.DataTable.isDataTable('#Designation_Mapping_Table')) {
            $('#Designation_Mapping_Table').dataTable().fnDestroy();
        }
        DesgnMappingTable = $('#Designation_Mapping_Table').DataTable({
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "iDisplayLength": 5,
            "bFilter": true,
            // 'scrollX': true,
            'data': DesgnMappingTableDetails
              ,

            "aoColumns":
            [
            { "mData": "TYPE", "sTitle": "Type", "sClass": "text-left", "sWidth": "25%", "defaultContent": "<i>Not set</i>" }//0
          , { "mData": "DESCRIPTION", "sTitle": "Description", "sClass": "text-left", "sWidth": "25%", "defaultContent": "<i>Not set</i>" }//1
         , { "data": "WEIGHTAGE", "sTitle": "Weightage", "sClass": "text-center", "sWidth": "25%", "defaultContent": "<i>Not set</i>" }//2
         , { "mData": "DESIGNATION", "sTitle": "Designation", "sClass": "text-left", "sWidth": "25%", "defaultContent": "<i>Not set</i>" }//3

            ],
        })
    }

    function clearinput() {
        $('#ShowAllManagersList').prop('checked', false);
        $('#drpdwnManagerName').select2('val', 0);
        $('#drpdwnManagerName').val(0);
        $('.select2cls').select2('val', 0);
        $('#designation').select2('val', 0);
        $('#description').select2('val', '');
        $('#description').empty();
        $('.inputclearcls').val('');
        $('.field-validation-valid').text('');
        if ($("#dvdescription").hasClass("col-lg-12"))
            $("#dvdescription").removeClass("col-lg-12");
        if (!$("#dvdescription").hasClass("col-lg-6"))
            $("#dvdescription").addClass("col-lg-6");
        //$('#weightage').attr('disabled', false);
        $('#dvWeightage,#btnSaveManager,.ShowAllManagersListCls').show();
        // ShowKraSkill();
        EMPLOYEE_ID = '';
        MODERATOR = '';
        MANAGER_ID = '';
        STATUS = '';
        MANAGER_ID = '';
        MANAGER_NAME = '';
        $('#drpdwnManagerName').attr('disabled', false);
        $('#btnSaveManager').show();

    }

    function clearinput2() {
        //$('#drpdwnManagerName').select2('val', 0);
        //$('#drpdwnManagerName').val(0);
        $('.select2cls').select2('val', 0);
        $('#designation').select2('val', 0);
        $('#description').select2('val', '');
        $('#description').empty();
        $('.inputclearcls').val('');
        $('.field-validation-valid').text('');
        if ($("#dvdescription").hasClass("col-lg-12"))
            $("#dvdescription").removeClass("col-lg-12");
        if (!$("#dvdescription").hasClass("col-lg-6"))
            $("#dvdescription").addClass("col-lg-6");
        //$('#weightage').attr('disabled', false);
        $('#dvWeightage').show();
        // ShowKraSkill();
    }

    function skipManagers() {

        var tempEmployeeIdlist = '';
        var allow = true;
        if (EmpMappingTable.$('.checkboxcls').is(':checked')) {
            $.each(EmpMappingTableDetails, function (i, val) {
                if (EmpMappingTable.$('input[name="' + val.EMP_CODE + '"]').is(':checked') == true && (val.Status <= 1 || val.Status == null)) {
                    tempEmployeeIdlist += val.EMP_ID + ',';
                    EmpMappingTable.$('input[name="' + val.EMP_CODE + '"]').prop('checked', false);
                }
                else {
                    //if (val.ASSIGNED_MANAGER_ID == 0 && EmpMappingTable.$('input[name="' + val.EMP_CODE + '"]').is(':checked') == true) {
                    //    toastr.warning('Not Allowed. Manager rating skipped / evaluation completed.');
                    //    allow = false;
                    //    EmpMappingTable.$('input[name="' + val.EMP_CODE + '"]').prop('checked', false);
                    //    return false;
                    //}
                    if (EmpMappingTable.$('input[name="' + val.EMP_CODE + '"]').is(':checked') == true && val.Status >= 2) {
                        toastr.warning('Not Allowed. Only Pending/Self Rated(without No Manager Rating) Employees are allowed for Skip Manager Review');
                        allow = false;
                        EmpMappingTable.$('input[name="' + val.EMP_CODE + '"]').prop('checked', false);
                        return false;
                    }
                }
            });
            if (!allow) {
                return false;
            }

            tempEmployeeIdlist = tempEmployeeIdlist.substring(0, tempEmployeeIdlist.length - 1);
            $.ajax({
                type: 'POST'
                    , data: { EmployeeIdlist: tempEmployeeIdlist, AppraisalProcessId: APPRAISAL_PROCESS_ID }
                    , url: '@Url.Content("~/PerformanceAppraisal/SkipManagersToEmployee")'
                    , success: function (data) {
                        if (data.result == 1) {
                            toastr.success('Successfully Skipped');
                            Get_Appraisal_Mapping_Table_Details_By_ProcessId(APPRAISAL_PROCESS_ID);
                            EmpMappingTable.$('.checkboxcls').prop('checked', false);

                        }
                        else {
                            toastr.warning('Failed to Skip');
                            EmpMappingTable.$('.checkboxcls').prop('checked', false);
                        }
                    }
            });
        }
        else {
            toastr.warning('Select employee(s) to skip manager assignation');
        }

    }

    function assignFinalModerator() {
        AssignFinalModerator = [];
        Staging = [];
        $.each(EmpMappingTableDetails, function (i, val) {
            if (EmpMappingTable.$('input[name="' + val.EMP_CODE + '"]').is(':checked') == true) {
                AssignFinalModerator.push(val.EMP_CODE);
                Staging.push(val.Status);
            }
        });

        if ($('#drpdwnEmpName').val() != 0 && $('#drpdwnEmpName').val() != null && $('#drpdwnEmpName').val() != undefined) {
            if (AssignFinalModerator.length > 0) {

                $.ajax({
                    type: 'POST'
                    , data: { EmpID: AssignFinalModerator, FinalModeratorID: $('#drpdwnEmpName').val(), Staging: Staging, AppraisalProcessId: APPRAISAL_PROCESS_ID }
                    , url: '@Url.Content("~/PerformanceAppraisal/AssignFinalModeratorToEmployee")'
                    , success: function (data) {
                        if (data.success == false) {
                            toastr.warning('Failed to Assign');
                            EmpMappingTable.$('.checkboxcls').prop('checked', false);
                        }
                        else if (data.errMsg != '' && data.errMsg != null && data.errMsg != undefined) {
                            toastr.warning(data.errMsg);
                            EmpMappingTable.$('.checkboxcls').prop('checked', false);
                        }
                        else if (data.success) {
                            toastr.success('Successfully assigned');
                            //  $('.checkboxcls').attr('checked', false);
                            //$.each(EmpMappingTableDetails, function (i, val) {
                            //    if ($('input[name="' + val.EMP_CODE + '"]').is(':checked') == true) {
                            //        $('input[name="' + val.EMP_CODE + '"]').prop('checked', false);
                            //    }
                            //});
                            EmpMappingTable.$('.checkboxcls').prop('checked', false);
                            if (data.failedAssign != null && data.failedAssign != undefined) {
                                var res = JSON.parse(data.result);
                                var value = '';
                                for (var i = 0; i < res.count - 1; i++) {
                                    value += ',' + data.res[i];
                                }
                                toastr.waring('But for employee(s) ' + value + ' were failed to assigned');
                            }
                            Get_Appraisal_Mapping_Table_Details_By_ProcessId(APPRAISAL_PROCESS_ID);
                            //$('#btnAssignFinalModerator').attr('disabled', 'disabled');
                            $('#drpdwnEmpName').select2('val', 0);
                            $('#drpdwnEmpName').trigger('change');
                        }
                    }, error: function (err) {
                        alert("error");
                    }
                });

            }
            else {
                toastr.warning('Select employee(s) to assign');
            }
        }
        else {
            toastr.warning('Select Final moderator to assign');
        }
    }

    @*function ProcessTable() {
        if ($.fn.DataTable.isDataTable('#App_Proces_Table')) {
            $('#App_Proces_Table').dataTable().fnDestroy();
        }
        assetTable = $("#App_Proces_Table").DataTable({


            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "iDisplayLength": 10,
            "bFilter": true,

           // "scrollX": true,
            "ajax": {
                type: 'Get',
                url: '@Url.Content("~/PerformanceAppraisal/Get_Appraisal_Process_Details")',
                dataSrc: function (data) {

                    return JSON.parse(data.result1);
                }
            },
            "aoColumns": [

                 { "mData": "Appraisal_Process_Period_Name", "sTitle": "Appraisal Period", "defaultContent": "<i>Not set</i>", "sWidth": "15%", "sClass": "text-left" }//"bVisible": false, //0
                , { "mData": "From_Date",'sType': 'date', "sTitle": "From Date", "sClass": "text-center", "defaultContent": "<i>Not set</i>", "sWidth": "15%" }//1
                , { "mData": "To_Date", 'sType': 'date', "sTitle": "To Date", "sClass": "text-center", "defaultContent": "<i>Not set</i>", "sWidth": "15%" }//2
                , { "mData": "Until", "sTitle": "Until Date", "sClass": "text-center", "defaultContent": "<i>Not set</i>", "sWidth": "15%" }//3
                , { "mData": "EMP_NAME", "sTitle": "Final Evaluator", "sClass": "text-left", "bVisible": true, "defaultContent": "<i>Not set</i>", "sWidth": "25%" }//4
              , { "mData": "Maximum_Rating", "sTitle": "Maximum Rating", "sClass": "text-right", "defaultContent": "<i>Not Set</i>", "sWidth": "15%" }//5
            , { "mData": "Appraisal_Process_Period", "sTitle": "Appraisal Process Period", "sClass": "text-left", "bVisible": false }

            ],
            "aoColumnDefs": [

   {
       "aTargets": [1,2,3]
       , "mRender": function (data, type, row) {
           if (data =='' || data==null) {
               return 'N/A';
           }
           else
           {
               return dateValueFormat(data);
           }
       }
   }],
        });
    }*@
</script>
