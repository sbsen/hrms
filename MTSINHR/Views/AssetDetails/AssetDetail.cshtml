@model MTSINHR.Models.AssetDetails
@System.Web.Optimization.Scripts.Render("~/bundles/datatable")
@System.Web.Optimization.Styles.Render("~/bundles/datepickercss")
@System.Web.Optimization.Scripts.Render("~/bundles/datepicker")
<script src="~/Scripts/ValidationFunction.js"></script>
<style>
    .editor-field{
        position:relative;
        left:80px;
    }  
    .text-wrap{
    white-space:normal;
}
.width-200{
    width:200px;
}
</style>
<script>
    var groupTable;
    var rowData = "";

    $(document).ready(function () {
        $('#FromDate').val('');
        $('#ToDate').val('');
        groupTable = $("#getasset").DataTable({
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "iDisplayLength": 5,
            "bFilter": true,
            "scrollX": true,
            "bProcessing": true,
            "ajax": {
                type: "GET",
                url: '@Url.Content("~/AssetDetails/Read")',
                dataSrc: function (data) {
                    return JSON.parse(data);

                }
            },
            "aoColumns":
      [{ "mData": "ID", "sTitle": "SI.No", "bVisible": false,"sClass": "text-right", "sWidth": "80px" }//0
      , { "mData": "ASSET_TYPEID", "bVisible": false, "sTitle": "Asset Classification", "sClass": "text-left" }//1
      , { "mData": "AssetnameId", "bVisible": false, "sTitle": "Asset Classification", "sClass": "text-left" }//2
      , { "mData": "AssetType", "sTitle": "Asset Classification", "sClass": "text-left" }//3
      , { "mData": "AssetName", "sTitle": "Category", "sClass": "text-left" }//4
      , { "mData": "IDENTIFICATION_CODE", "sTitle": "Item Code", "sClass": "text-left" }//5
      , { "mData": "ASSET_DESCRIPTION", "sTitle": "Description", "sClass": "text-left" }//6
      , { "mData": "MAKE", "sTitle": "Make", "sClass": "text-center" }//7
       , { "mData": "SERIAL_NUMBER", "sTitle": "Serial Number", "sClass": "text-center" }//8
       , { "mData": "Purchased_year", "sTitle": "Purchased Year", "sClass": "text-center" }//9
      , { "mData": "AssignedTo", "sTitle": "Currently Assign To", "sClass": "text-center", "sWidth": "80px" }//10
      , { "mData": "totalcost", "sTitle": "Maintenance Cost Rs. (So Far)", "sClass": "text-center" }//11
      , { "mData": "Category", "sTitle": "Warranty or AMC / Insurance", "sClass": "text-center" }//12
      , { "mData": "Id", "sTitle": "Assign To", "sClass": "text-center" }//13
      , { "mData": "AssettypeId", "sTitle": "Add Maintenance", "sClass": "text-center" }//14
      , { "mData": "AssettypeId", "sTitle": "Add AMC/Insurance", "sClass": "text-center" }//15
      , { "mData": "Id", "sTitle": "View", "sClass": "text-center" }//16
      ],
            "aoColumnDefs":
          [
               {
                   "aTargets": [5]
              , "mRender": function (data, type, row) {
                  return data || 'N/A'
              }
               },
              {
                  "aTargets": [6]
              , "mRender": function (data, type, row) {
                  if (data =='' || data == null) {
                      return 'N/A'
                  }
                  else {
                      return "<div class='text-wrap width-200'>" + data + "</div>"
                  }
              }
              },
              {
                  "aTargets": [8]
              , "mRender": function (data, type, row) {
                  return data || 'N/A'
              }
              },
              {
                  "aTargets": [9]
              , "mRender": function (data, type, row) {
                  return data || 'N/A'
              }
              },
              {
                  "aTargets": [10]
              , "mRender": function (data, type, row) {
                  
                  if (data == null) {
                      return 'Not Assigned'
                  }
                  else {
                      return data;
                  }
              }
              },
              {
                  "aTargets": [11]
              , "mRender": function (data, type, row) {
                  if (data == null) {
                      return 'N/A'
                  }
                  else {
                      return data;
                  }
              }
              },
                {
                    "aTargets": [12]
              , "mRender": function (data, type, row) {
                  var item = row.ID;
                  if (data == '1') {
                      return 'AMC'
                  }
                  else if (data == '2') {
                      return 'Insurance';
                  }
                  else if (data == "1,2") {
                      return 'AMC/Insurance'
                  }
                  else if (data == null) {
                      return '-'
                  }
              }
                },
              {
                  "aTargets": [13]
              , "mRender": function (data, type, row) {
                  var type = row.ASSET_TYPEID;
                  var name = row.AssetnameId;
                  var item = row.ID;
                  return '<button="" onclick="addAssetassign(' + type + ',' + name + ',' + item + ')"><i class="fa fa-plus"/></button>'
              }
              },
          {
              "aTargets": [14]
              , "mRender": function (data, type, row) {
                  var type = row.ASSET_TYPEID;
                  var name = row.AssetnameId;
                  var item = row.ID;
                  return '<button="" onclick="addMaintenance(' + type + ',' + name + ','+ item +')"><i class="fa fa-plus"/></button>'
              }
          },
          {
              "aTargets": [15]
              , "mRender": function (data, type, row) {
                  var type = row.ASSET_TYPEID;
                  var name = row.AssetnameId;
                  var item = row.ID;
                  return '<button="" onclick="addAmc(' + type + ',' + name + ','+ item +')"><i class="fa fa-plus"/></button>'

              }
          },
          {
              "aTargets": [16]
              , "mRender": function (data, type, row) {
                  var itemCode = row.ID;
                //  var rowDetail = JSON.stringify(row);

                  return '<button="" onclick=ViewDetails('+itemCode+')><i class="fa fa-list"/></button>'
              }
          }
          ],
        });
        DateRange();
        $('#Filterdata').on('click', function () {

            //$('#FromDate').val(dateFormat(from));
           // $('#ToDate').val(dateFormat(to));
            var from = $('#FromDate').val();
            var to = $('#ToDate').val();
            if ((from != null && from != '') && (to != null && to != ''))
            {
                //$('#FromDate').val(dateFormat(from));
                //$('#ToDate').val(dateFormat(to));
              
                $.ajax({
                    type: "POST",
                    data: { from: dateFormat(from), to: dateFormat(to) },
                    url: '@Url.Content("~/AssetDetails/Purchased")',
                    success: function (data) {
                        groupTable.clear();
                        groupTable.rows.add(JSON.parse(data));
                        groupTable.draw();
                    },
                });
            }

        });
        $('input[type="checkbox"]').click(function () {
            if ($(this).prop("checked") == true) {
                alert("Checkbox is checked.");
            }
            else if ($(this).prop("checked") == false) {
                alert("Checkbox is unchecked.");
            }
        });
        $('#FromDate,#ToDate').on('change', function () {
            if (($('#FromDate').val() == '' && $('#ToDate').val() == '') || ($('#FromDate').val() == null && $('#ToDate').val() == null)) {
                $.ajax({
                    type: "GET",
                    url: '@Url.Content("~/AssetDetails/Read")',
                    success: function (data) {
                        groupTable.clear();
                        groupTable.rows.add(JSON.parse(data));
                        groupTable.draw();
                    },
                });
            }
        });
    });
    function DateRange() {
        var todayDate = new Date();
        var end = new Date().getDate();
        var yearrestrict = '@System.Configuration.ConfigurationManager.AppSettings["Year_restrict_count"]';
        $('#FromDate').datepicker({
            startDate: "-" + yearrestrict + "y",
            endDate: '+1m',
            autoclose: true
        }).on('changeDate', function () {
            
            $("#ToDate").val(this.value);
            $('#ToDate').datepicker('setStartDate', new Date($(this).val()));
        }).keydown(function (e) {
            
            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#FromDate').val('');
                $('#ToDate').datepicker('setEndDate', false);
                $('#ToDate').datepicker('setStartDate', false);
            }
        });

        $('#ToDate').datepicker({
            startDate: "-" + yearrestrict + "y",
            endDate: '+1m',

            autoclose: true
        }).on('changeDate', function () {
            
            $('#FromDate').datepicker('setEndDate', new Date($(this).val()));
        }).keydown(function (e) {
            
            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#ToDate').val('');
                $('#FromDate').datepicker('setEndDate', false);
                $('#FromDate').datepicker('setStartDate', false);
                
            }
        });
    }
    function addAssetassign(type, name, item) {

        window.location.href = '@Url.Content("~/AssignAsset/AssetAssign?assettype=")' + type + "&assetname="+ name + "&item=" + item;
    }
    function addMaintenance(type, name,item) {

        window.location.href = '@Url.Content("~/AssetMaintenanceDetails/MaintenanceAsset?assettype=")' + type + "&assetname=" + name + "&item=" + item;
    }
    function addAmc(type, name,item) {

        window.location.href = '@Url.Content("~/AMC_Insurance/AMC_InsuranceAsset?assettype=")' + type + "&assetname=" + name + "&item=" + item;

    }
    function dateFormat(date) {
        var d = new Date(date);
        var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                        "Aug", "Sep", "Oct", "Nov", "Dec"];
        var val = d.getDate() + "-" + months[d.getMonth()] + "-" + d.getFullYear();
        return val;
    }
    function ViewDetails(itemCode)
    {

        window.location.href = '@Url.Content("~/AssetReportView/AssetDetailView?ItemCode=")' + itemCode ;
    }
</script>
<div class="card">
    <div class="card-header text-center ">
        Asset Details
    </div>
    <div class="card-body">
        <div>
            <form id="filter" method="post" autocomplete="off">
                <div class="row text-right card-columns">
                    <div class="col-md-1"></div>
                    <div class="col-md-9 row">
                        <div class="input-group">
                            <div class="col-md-3"></div>
                            <lable class="col-md-3">Purchase Date :</lable>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control ", @data = "date-end-date='0d'",onkeydown="return false", @placeholder = "From Date", @style = "width:100%"})
                                @Html.ValidationMessageFor(m => m.FromDate)
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control ", onkeydown="return false", @placeholder = "To Date", @style = "width:100%" })
                                @Html.ValidationMessageFor(m => m.ToDate)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="btn-primary btn-sm float-left" id="Filterdata"><span class="fa fa-search"></span> Search </button>
                    </div>
                </div>
            </form>
            <div class="row m-t-15">
                <div class="MTS_Table">
                    <table id="getasset" class="table table-bordered table-hover tabel-sm table-responsive" cellspacing="0" width="100%"></table>
                </div>
            </div>
        </div>
    </div>
</div>
