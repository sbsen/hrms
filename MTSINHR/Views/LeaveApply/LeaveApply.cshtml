@model MTSINHR.Models.Leave

@{
    Layout = "~/Views/Shared/Layout_New.cshtml";
}

@System.Web.Optimization.Styles.Render("~/bundles/bootstrapdt")
@System.Web.Optimization.Styles.Render("~/bundles/fontawesome")
@System.Web.Optimization.Styles.Render("~/bundles/datepickercss")
@System.Web.Optimization.Scripts.Render("~/bundles/datatable")
@System.Web.Optimization.Scripts.Render("~/bundles/datepicker")
<script src="~/Scripts/ValidationFunction.js"></script>
<script src="~/Scripts/bootbox.min.js"></script>

<style>
    #ErrorSpan {
        text-align: left;
    }

    .chebox-lg {
        width: 18px;
        height: 18px;
        cursor: pointer;
        vertical-align: middle;
    }

    .lable-text-align{
        text-align: right;
        /*width: 33%;*/
    }
</style>

<script>
    $(document).ready(function () {

        $("html,body").scrollTop(0);
    });
</script>


<form id="LeaveForm">
    <div class="panel">
        <div class="card">
            <div class="card-header p-b-0">
                <div>

                    <div class="card-title">Apply Leave</div>


                </div>
            </div>

            <div class="content-align p15 ">
                @*<div class="text-right p-t-5">
                    <button type="button" id="Leavebalance" class="btn btn-primary btn-sm">Leave Balance</button>
                    <button type="button" id="Myleave" class="btn btn-primary btn-sm">Show My Leaves</button>
                </div>*@
                <div class="row">
                    <div class="col-md-8">
                        <div class="row">
                            <div class="col-md-6">
                            </div>
                            <div class="col-md-6">
                                <div class="pull-right">
                                    <button type="button" id="Leavebalance" class="btn btn-primary btn-sm">Leave Balance</button>
                                    <button type="button" id="Myleave" class="btn btn-primary btn-sm">Show My Leaves</button>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="editor-label">
                                        @Html.LabelFor(m => m.LeaveType)
                                    </div>
                                    <div class="editor-field">
                                        @Html.DropDownListFor(m => m.LeaveType, new System.Web.Mvc.SelectList(ViewBag.LeaveTypes, "Value", "Text"), new { @class = "form-control", onchange = "getLeaveBalanceDetails(1)" })
                                        @Html.ValidationMessageFor(m => m.LeaveType)
                                    </div>

                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="editor-label">
                                        @Html.LabelFor(m => m.Reason)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextAreaFor(m => m.Reason, new { maxlength = 50, @class = "form-control", @placeholder = "Must between 50 characters" })
                                        @Html.ValidationMessageFor(m => m.Reason)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="editor-label">
                                        @Html.LabelFor(m => m.FromDate)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control", @data = "date-end-date='0d'", onchange = "getLeaveBalanceDetails(2)" })
                                        @Html.ValidationMessageFor(m => m.FromDate)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="editor-label">
                                        @Html.LabelFor(m => m.LeaveFromSession, "From Session")
                                    </div>
                                    <div class="editor-field">
                                        @Html.DropDownListFor(m => m.LeaveFromSession, new System.Web.Mvc.SelectList(ViewBag.LeaveFromSessions, "Value", "Text"), new { @class = "form-control", onchange = "getLeaveBalanceDetails(2)" })
                                        @Html.ValidationMessageFor(m => m.LeaveFromSession)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="editor-label">
                                        @Html.LabelFor(m => m.ToDate)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control", onchange = "getLeaveBalanceDetails(1)" })
                                        @Html.ValidationMessageFor(m => m.ToDate)
                                    </div>
                                </div>

                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="editor-label">
                                        @Html.LabelFor(m => m.LeaveToSession, "To Session", new { @class = "LeaveToSession" })
                                    </div>
                                    <div class="editor-field">
                                        @Html.DropDownListFor(m => m.LeaveToSession, new System.Web.Mvc.SelectList(ViewBag.LeaveToSessions, "Value", "Text"), new { @class = "form-control", onchange = "getLeaveBalanceDetails(2)" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="editor-label">
                                        @Html.LabelFor(m => m.Managerid)
                                    </div>
                                    <div class="editor-field">
                                        @Html.DropDownListFor(m => m.Managerid, new System.Web.Mvc.SelectList(ViewBag.EmployeeNames, "Value", "Text"), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Managerid)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="editor-label">
                                        <label>No of Days</label>
                                    </div>
                                    <div class="editor-field">
                                        <input type="text" id="NumberOfDays" name="NumberOfDays" class="form-control" readonly="readonly" />
                                    </div>
                                </div>
                                <span id="ErrorSpan" style="color: red; align-self: center; font: bold; display: none"></span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 p-l-30">
                                <div class="form-group">
                                    <input type="checkbox" id="ShowAllManagersList" class="chebox-lg" /> &nbsp;  Show all managers
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                            </div>

                            <div class="col-md-6">
                                <div class="pull-right">
                                    <button id="Back" onclick="location.href='@Url.Action("UserList", "UserList")';return false;" class="btn btn-default">Cancel</button>
                                    <button type="button" id="submit" class="btn btn-primary">Apply</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4" style="padding-top: 80px;">
                        <div class="row">
                            <div class="col-md-9 p-l-30"><label style="border-bottom: 1px solid #999;"><b>Leave Balance</b></label></div>
                            <div class="col-md-2"><label style="border-bottom: 1px solid #999;"><b>Day(s)</b></label></div>
                            <div class="col-md-1"></div>
                        </div>
                        <div class="row">
                            <div class="col-md-9 p-l-30"><label><b>Opening Balance</b></label></div>
                            <div class="col-md-2"><b><label type="text" id="OpeningBalance" name="OpeningBalance" /></b></div>
                            <div class="col-md-1"></div>
                        </div>
                        <div class="row">
                            <div class="col-md-9 p-l-30"><label>Leave Availed</label></div>
                            <div class="col-md-2"><label type="text" id="LeaveAvailed" name="LeaveAvailed" /></div>
                            <div class="col-md-1"></div>
                        </div>
                        <div class="row">
                            <div class="col-md-9 p-l-30"><label>Leave Approval pending</label></div>
                            <div class="col-md-2"><label type="text" id="LeaveApprovalpending" name="LeaveApprovalpending" /></div>
                            <div class="col-md-1"></div>
                        </div>
                        <div class="row">
                            <div class="col-md-9 p-l-30"><b><label>Leave Balance</label></b></div>
                            <div class="col-md-2"><b><label type="text" id="LeaveBalance" name="LeaveBalance" /></b></div>
                            <div class="col-md-1"></div>
                        </div>
                        <div class="row">
                            <div class="col-md-9 p-l-30"><label>Leave Now Applied</label></div>
                            <div class="col-md-2"><label type="text" id="LeaveNowApplied" name="LeaveNowApplied" /></div>
                            <div class="col-md-1"></div>
                        </div>
                        <div class="row">
                            <div class="col-md-9 p-l-30"><b><label>Estimated Balance</label></b></div>
                            <div class="col-md-2"><b><label type="text" id="EstimatedBalance" name="EstimatedBalance" /></b></div>
                            <div class="col-md-1"></div>
                        </div>
                        <br />
                        <div class="row isLeaveBalanceCalculation">
                            <div class="col-md-12 p-l-30"><label type="text" id="LeaveBalanceCalculation" name="LeaveBalanceCalculation" /></div>
                        </div>
                    </div>
                </div>
                @*<div class="pull-right">
                    <button id="Back" onclick="location.href='@Url.Action("UserList", "UserList")';return false;" class="btn btn-default">Cancel</button>
                    <button type="button" id="submit" class="btn btn-primary">Apply</button>
                </div>*@
                <div class="leavelist p-t-40">
                    <div class="col-lg-12">
                        <diV class="row">
                            <div class="col-lg-4"></div>
                                <div class="col-lg-3 form-group">
                                    <div class="form-control">
                                        <div class="row">
                                            <div class="col-lg-3"><label class="p-t-10 p-l-10">Year: </label></div>
                                            <div class="col-lg-8"><select class="form-control" id="year"></select></div>
                                        </div>
                                    </div>
                                </div>
                            <div class="col-lg-5"></div>
                        </diV>
                    </div>  
                    <div class="MTS_Table p-t-5">   
                        <table id="LeaveList" style="width: 100%;" class="table table-bordered table-hover tabel-sm table-responsive"></table>
                    </div>
                </div>
                <div class="leavebalancelist">
                    <div class="MTS_Table p-t-45">
                        <table id="LeavebalanceList" style="width: 100%;" class="table table-bordered table-hover tabel-sm table-responsive"></table>
                    </div>
                </div>
            </div>

        </div>
    </div>
</form>

<script>
    var EmployeeLeaveListTable;
    $(function () {

        $("#Managerid").prop('disabled', true)
        $('#LeaveFromSession').change(function () {

            var value = $(this).val();

            if (value == '1') {

                var LeaveTo = $("#LeaveFromSession").val();
                if ($('#FromDate').val() == $('#ToDate').val()) {
                    $("#LeaveToSession").val(LeaveTo);
                    $('#LeaveToSession').prop('disabled', true);
                    $('#ToDate').prop('disabled', false);
                    $('#Managerid').prop('disabled', false);
                }
                else {

                    $('#LeaveToSession').prop('disabled', false);
                }
            }

            else if (value == '2') {

                $('#LeaveToSession').prop('disabled', true);
                $('#ToDate').prop('disabled', true);

                var Fromdate = $("#FromDate").val();
                $("#ToDate").val(Fromdate);

                var FromSession = $("#LeaveFromSession").val();
                $("#LeaveToSession").val(FromSession);
            }

            else if (value == '3') {

                var ToSession = "";
                $('#LeaveToSession').val(ToSession);
                if ($('#FromDate').val() == $('#ToDate').val()) {

                    $('#LeaveToSession').prop('disabled', true);
                    $('#ToDate').prop('disabled', false);
                    $('#Managerid').prop('disabled', false);
                }
                else {

                    $('#LeaveToSession').prop('disabled', false);
                }
            }

            else {

                $('#ToDate').prop('disabled', false);
                $('#LeaveToSession').prop('disabled', false);

            }
            if (($('#FromDate').val()) != "" && ($('#ToDate').val()) != "") {

                $("#Managerid").prop('disabled', false)
                if($("#Managerid")[0].childElementCount > 1){
                    $("#Managerid").val("").trigger('change');
                } else{
                    $("#Managerid").trigger('change');
                }
            }

        });



        $('#FromDate').change(function () {
            //
            if (($("#ToDate").val()) != "" && ($('#FromDate').val()) != "") {
                $("#Managerid").prop('disabled', false)
                if($("#Managerid")[0].childElementCount > 1){
                    $("#Managerid").val("").trigger('change');
                }else{
                    $("#Managerid").trigger('change');
                }
            }
            else {
                $("#Managerid").prop('disabled', true)
            }
        });


        $('#LeaveToSession').change(function () {

            if (($("#ToDate").val()) != "" && ($('#FromDate').val()) != "") {
                $("#Managerid").prop('disabled', false)
                if($("#Managerid")[0].childElementCount > 1){
                    $("#Managerid").val("").trigger('change');
                }else{
                    $("#Managerid").trigger('change');
                }
            }
            else {
                $("#Managerid").prop('disabled', true)
            }
        });



        $('#ToDate').change(function () {
            //
            var FromSession = $("#LeaveFromSession").val();

            if ($("#ToDate").val() == ($('#FromDate').val())) {

                $("#LeaveToSession").prop('disabled', true);
                $("#Managerid").prop('disabled', false);
                $("#LeaveToSession").val(FromSession);
            }

            else {

                $("#LeaveToSession").prop('disabled', false);
            }

            if (($("#ToDate").val()) != "" && ($('#FromDate').val()) != "") {

                $("#Managerid").prop('disabled', false)
                if($("#Managerid")[0].childElementCount > 1){
                    $("#Managerid").val("").trigger('change');
                } else {
                    $("#Managerid").trigger('change');
                }

            }
            else {

                $("#Managerid").prop('disabled', true)
            }
        });



        //$('#Managerid').change(function () {
            
        //    if (($("#Managerid").val()) != "") {
        //        if ($("#LeaveType option:selected").text().toLowerCase() == "maternity")
        //        {
        //           var Totaldaysleave = IncludeLeaveDays();
        //        }
        //        else
        //        {
        //            var Totaldaysleave = Noofdays();
        //        }
               

        //        $("#NumberOfDays").val(Totaldaysleave);
        //    }
        //});

        $('#ShowAllManagersList').on('click', function () {
            $.ajax({
                type : "GET",
                data : {GetAllmanagers : $('#ShowAllManagersList').is(":checked")},
                url : '@Url.Content("~/LeaveApply/GetManagersNames")',
                success : function (data){
                    var ManagersList = JSON.parse(data);
                    $("#Managerid").html('');
                    $.each(ManagersList,function(i,val){
                        $("#Managerid").append('<option value="'+val.Value+'">'+val.Text+'</option>');
                    })
                    if ($("#FromDate").val() != "" && $("#FromDate").val() != null && $("#ToDate").val() != "" && $("#ToDate").val() != null) {
                        $("#Managerid").trigger('change');
                    }
                }
                });
        })
    });
</script>


<script>
    function ApplyLeaveBalanceDetails(LeaveTypeId) {
        //
        var currentyear = new Date().getFullYear();
        var fromYear = new Date(($("#FromDate").val())).getFullYear();
        var toYear = new Date(($("#ToDate").val())).getFullYear();
        //var MTS_LeaveType_ID = data_contact.Get_MTS_LeaveType_ID(leaveCode, departmentid);
        if (currentyear + 1 == toYear) {
            var nextyear = currentyear + 1;
            bootbox.confirm('Are You Sure You Want to Apply Leave For the Year ' + nextyear, function (result) {
                if (result == true) {

                    $.ajax({
                        type: "GET",
                        url: '@Url.Content("~/LeaveApply/CreateLeaveBalanceForFeatureYear")',
                        data: { year: currentyear + 1 },
                        success: function (response) {
                            
                            var jsonresponse = JSON.parse(response);
                            if (jsonresponse == 1) {
                                getLeaveAdjustmentDetails(LeaveTypeId,toYear);
                            }
                        }
                    });
                }
            });
        }
        if (fromYear == toYear && currentyear + 1 != toYear) {
            getLeaveAdjustmentDetails(LeaveTypeId,toYear);
        }

    }
    function getLeaveAdjustmentDetails(LeaveTypeId,toYear) {
        
        $.ajax({
            type: "GET",
            url: '@Url.Content("~/LeaveApply/GetLeaveBalanceDetails")',
            data: { LeaveTypeId: LeaveTypeId, year: toYear },
            success: function (response) {
                
                var jsonresponse = JSON.parse(response);
                if (jsonresponse != null && jsonresponse.Table.length > 0) {
                    var approvalpending = 0;
                    var leaveAvailed = 0;
                    var openingBalance = 0;
                    $("#LeaveApprovalpending").text(0);
                    $("#LeaveAvailed").text(0);
                    for (var i = 0; i < jsonresponse.Table.length; i++) {
                        $("#LeaveApprovalpending").text(jsonresponse.Table[0].PendingLeaveCount);
                        $("#LeaveAvailed").text(jsonresponse.Table[0].ApproredLeaveCount);
                        approvalpending = jsonresponse.Table[0].PendingLeaveCount;
                        leaveAvailed = jsonresponse.Table[0].ApproredLeaveCount;
                    }
                    if (jsonresponse.Table.length > 0) {
                        openingBalance = jsonresponse.Table[0].AvailableLeave - (approvalpending + leaveAvailed)
                        $("#OpeningBalance").text(jsonresponse.Table[0].AvailableLeave);
                        if(openingBalance >= 0)
                            $("#LeaveBalance").text(openingBalance);
                        else
                            $("#LeaveBalance").text(0);
                        holidayAsLeave = parseInt(jsonresponse.Table[0].HolidayAsLeave);
                        //alert(holidayAsLeave)
                        if (holidayAsLeave == 1)
                            var Totaldaysleave = IncludeLeaveDays();
                        else
                            var Totaldaysleave = Noofdays();
                        if (Totaldaysleave != undefined) {
                            $("#LeaveNowApplied").text(Totaldaysleave);
                            $("#NumberOfDays").val(Totaldaysleave);
                        }
                    }
                    if(($("#LeaveBalance").text()) - ($("#LeaveNowApplied").text()) >= 0 )
                        $("#EstimatedBalance").text(($("#LeaveBalance").text()) - ($("#LeaveNowApplied").text()));
                    else
                        $('#EstimatedBalance').text(0);
                    if ((($("#LeaveBalance").text()) - ($("#LeaveNowApplied").text())) < 0) {
                        $(".isLeaveBalanceCalculation").show();
                        getLeaveAdjustment();
                    } else {
                        $(".isLeaveBalanceCalculation").hide();
                    }
                } else {
                    $('#OpeningBalance').text(0);
                    $('#LeaveAvailed').text(0);
                    $('#LeaveApprovalpending').text(0);
                    $('#LeaveBalance').text(0);
                    $('#LeaveNowApplied').text(0);
                    $('#EstimatedBalance').text(0);
                    $(".isLeaveBalanceCalculation").hide();
                }
            }
        });
    }
    function getLeaveBalanceDetails(value) {
        if ($("#FromDate").val() != "" && $("#ToDate").val() != "" && $("#LeaveType").val() != "") {
            //
            var fromYear = new Date(($("#FromDate").val())).getFullYear();
            var toYear = new Date(($("#ToDate").val())).getFullYear();
            var currentyear = new Date().getFullYear();
            if (fromYear == toYear) {
                if(value == 1){
                    ApplyLeaveBalanceDetails($("#LeaveType").val());
                } else{
                    getLeaveAdjustmentDetails($("#LeaveType").val(),toYear);
                }
            } else {
                toastr.error('Leave cannot be applied across the year !!');
                $('#OpeningBalance').text(0);
                $('#LeaveAvailed').text(0);
                $('#LeaveApprovalpending').text(0);
                $('#LeaveBalance').text(0);
                $('#LeaveNowApplied').text(0);
                $('#EstimatedBalance').text(0);
            }
        } else {
            $('#OpeningBalance').text(0);
            $('#LeaveAvailed').text(0);
            $('#LeaveApprovalpending').text(0);
            $('#LeaveBalance').text(0);
            $('#LeaveNowApplied').text(0);
            $('#EstimatedBalance').text(0);
        }
    }

    function DestroyDatePicker() {

    }
    function InitializeDatePicker(DisableDates, daysDisabled) {

        var end = new Date(new Date().setYear(new Date().getFullYear() + 2));
        var setenddate = new Date().setDate() + 1;
        //if ($("#LeaveType option:selected").text().toLowerCase() == "maternity")
        //{
        //    DisableDates = [];
        //    daysDisabled = [];
        //}

        $('#FromDate').datepicker({
            format: 'dd/M/yyyy',
            endDate: end,
            autoclose: true,
            daysOfWeekDisabled: daysDisabled,
            datesDisabled: DisableDates,

        }).on('changeDate', function () {


            daysOfWeekDisabled: daysDisabled
        }).on('changeDate', function () {
            if ($("#LeaveType option:selected").text().toLowerCase() == "casual") {
                var date = new Date($("#FromDate").val());
                var month = date.toLocaleString('en-us', { month: 'long' });
                var EndDate = (date.getDate() + 1) + "/" + month + "/" + date.getFullYear();
                daysOfWeekDisabled: daysDisabled,
                $("#ToDate").val(this.value).change();
                $('#ToDate').datepicker('setStartDate', new Date($(this).val()));
                //$('#ToDate').datepicker('setEndDate', new Date($(this).val()).getDate()+1);


            }
            else {
                $("#ToDate").val(this.value).change();
                $('#ToDate').datepicker('setStartDate', new Date($(this).val()));
                $('#ToDate').datepicker('setEndDate', '');
            }

        });

        $('#ToDate').datepicker({
            format: 'dd/M/yyyy',
            //setEndDate:endDate,
            //startDate: new Date('2018-1-5'),
            //endDate: new Date('2018-1-12'),
            autoclose: true,
            daysOfWeekDisabled: daysDisabled,
            datesDisabled: DisableDates,
        }).on('changeDate', function () {

            //  $('#FromDate').datepicker('setEndDate', new Date($(this).val()));
        });
    }


    $(document).ready(function () {
        //
        var holidayAsLeave = 0;
        $('#OpeningBalance').text(0);
        $('#LeaveAvailed').text(0);
        $('#LeaveApprovalpending').text(0);
        $('#LeaveBalance').text(0);
        $('#LeaveNowApplied').text(0);
        $('#EstimatedBalance').text(0);
        $(".isLeaveBalanceCalculation").hide();

        var DisableDates = [];
        var disabledDays = [0, 6];
        var year = (new Date()).getFullYear();

        //$('#LeaveType').on('change', function () {
        //    $("#FromDate").datepicker("destroy");
        //    $("#ToDate").datepicker("destroy");
        //    InitializeDatePicker(DisableDates, disabledDays);
        //    if ($('#FromDate').val() != '' && $('#ToDate').val() != '') {
        //        $('#FromDate').datepicker('setDate', null);
        //        $('#ToDate').datepicker('setDate', null);
        //    }
        //});


        $.ajax({

            type: 'GET',
            url: '@Url.Content("~/LeaveApply/GetDisableHolidayDatesList")',
            async: false,
            cache: false,
            data:
                {
                    year: year
                },
            success: function (data) {
                var jsondata = JSON.parse(data);
                $.each(jsondata, function (i, holidaydate) {

                    DisableDates.push(holidaydate.DATEOFHOLIDAY);

                });
            }
        });

        InitializeDatePicker(DisableDates, disabledDays);

    });
    var totalDays;
    function validateLeave() {
        //
        $.ajax({

            type: "POST",
            url: '@Url.Content("~/LeaveApply/validateLeave")',
            data: $('#LeaveForm').serialize(),
            success: function (response) {
                
                if (response.success == 1 || response.success == 2) {
                    leaveListTable.ajax.url("../LeaveApply/GetEmployeeLeaveList").load().draw();
                    $('#year').trigger('change');
                    $("#LeaveForm")[0].reset();
                    clearlableValues();
                    toastr.success("Successfully Applied waiting for approval");
                }
                if (response.success == 3) {
                    bootbox.confirm(response.message, function (result) {
                        if (result == true) {
                            ApplyLeave();
                            clearlableValues();
                        }
                    });
                }
                //if (response.success == 2) {
                //    toastr.success(response.message);
                //}
                if (response.success == 0) {
                    toastr.error(response.message);
                }
            }
        });

        function clearlableValues() {
            $('#OpeningBalance').text(0);
            $('#LeaveAvailed').text(0);
            $('#LeaveApprovalpending').text(0);
            $('#LeaveBalance').text(0);
            $('#LeaveNowApplied').text(0);
            $('#EstimatedBalance').text(0);
            $(".isLeaveBalanceCalculation").hide();
        }
        //var leaveReqType = $("#LeaveType option:selected").text();
        //var noOfDays = parseInt($("#NumberOfDays").val());
        //if (leaveBalance.length > 0) {
        //    if (leaveReqType != null && leaveReqType != undefined && RestrictSickLeave(leaveReqType)) {
        //        var _data = leaveBalance.filter(a=>a.LEAVE_TYPE == leaveReqType)
        //        totalDays = _data[0].AvailableLeave;
        //        if (totalDays < noOfDays) {
        //            bootbox.confirm("You have less number of leave balance than you applied for in " + leaveReqType + ", do you wish to continue?", function (result) {
        //                if (result == true) {
        //                    ApplyLeave();
        //                }
        //            });
        //        }
        //        else {
        //            ApplyLeave();
        //        }
        //    }
        //}
        //else {
        //    var result = RestrictSickLeave(leaveReqType);
        //    if (result) {
        //        ApplyLeave();
        //    }
        //}
    }

    function getLeaveAdjustment() {
        
        $.ajax({

            type: "POST",
            url: '@Url.Content("~/LeaveApply/getLeaveAdjustment")',
            data: $('#LeaveForm').serialize(),
            success: function (response) {
                
                $("#LeaveBalanceCalculation").text(response.message);

            }, error: function (errorThrown) {
                
            }
        });
    }

    function RestrictSickLeave(leaveReqType) {
        if (leaveReqType.toLowerCase() == "sick") {
            var sickLeaveDetails = leaveListTable.rows().data().filter(aa=>aa.LeaveType == "Sick" && aa.Approval == 1)
            if (sickLeaveDetails.length > 0) {
                toastr.error("Another sick leave is in pending Status,Cancel your leave or Contact your Manager");
                return false;
            }
            else {
                return true;
            }
        }
        else {
            return true;
        }
    }
</script>
<script>

    var leaveBalanceTable, leaveListTable;
    var leaveBalance = [];
    $("#FromDate").on("keydown", function () {
        return false;
    });
    $("#ToDate").on("keydown", function () {
        return false;
    });

    $("#submit").click(function () {
        var currentYear = new Date().getFullYear()
        var disabled = $('#LeaveForm').find(':input:disabled').removeAttr('disabled');
        var fromYear = new Date(($("#FromDate").val())).getFullYear();
        var toYear = new Date(($("#ToDate").val())).getFullYear()
        if (fromYear == toYear) {
            if (currentYear+1 >= fromYear) {
                if (currentYear - 2 < fromYear) {
                    if ($('#LeaveForm').valid()) {
                        var leaveResponse = false;
                        bootbox.confirm("Are you sure want to apply ?", function (result) {
                            if (result == true) {
                                validateLeave();
                            }
                        })
                    }
                }
                else {
                    toastr.error('Leave cannot be applied across the year ' + fromYear + ' !!');
                }
            }
            else {
                toastr.error('Leave Not Available for the Year ' + fromYear + ' !!');
            }
        }
        else {
            toastr.error('Leave cannot be applied across the year !!');
        }
    });

    function ApplyLeaveWithLOP() {
        bootbox.confirm("Do you want to continue with loss of pay deduction?", function (result) {

            if (result == true) {
                $.ajax({

                    type: "POST",
                    url: '@Url.Content("~/LeaveApply/LeaveApplyWithLOP")',
                    data: $('#LeaveForm').serialize(),
                    success: function (response) {

                        if (parseInt(response.success) == 1) {
                            leaveListTable.ajax.url("../LeaveApply/GetEmployeeLeaveList").load().draw();
                            $('#year').trigger('change');
                            $("#LeaveForm")[0].reset();
                            toastr.success("Successfully Applied waiting for approval");
                        }
                        else {
                            toastr.error('Failed To Apply');
                        }
                    }
                });
            }
        })
    }
    function ApplyLeave() {
        $.ajax({

            type: "POST",
            url: '@Url.Content("~/LeaveApply/Create")',
            data: $('#LeaveForm').serialize(),
            success: function (response) {
                //
                if (parseInt(response.success) >= 1) {
                    leaveListTable.ajax.url("../LeaveApply/GetEmployeeLeaveList").load().draw();
                    $('#year').trigger('change');
                    $("#LeaveForm")[0].reset();
                    toastr.success("Successfully Applied waiting for approval");

                }
                else if (parseInt(response.success) == 0) {
                    toastr.error('Leave applied or pending on same Date(s) ');
                }
                //else if ((parseInt(response.success) == 2)) {
                //    ApplyLeaveWithLOP();
                //}
                else {
                    toastr.error('Failed To Apply');
                }
            }
        });
    }

    $(document).ready(function () {

        $(".leavebalancelist").hide();
        $(".leavelist").hide();

        loadLeaveBalance();
        loadLeaveList();

        var PrevYear = @DateTime.Now.Year - 1;
        var CurYear = @DateTime.Now.Year;
        var NextYear = @DateTime.Now.Year + 1;
        $("#year").append('<option value="' + PrevYear + '">' + PrevYear + '');
        $("#year").append('<option value="' + CurYear + '" Selected="selected">' + CurYear + '');
        $("#year").append('<option value="' + NextYear + '">' + NextYear + '');

        $('#year').trigger('change');

        //leaveListTable.columns(9).search($("#year").val()).draw();

        $("#Leavebalance").on('click', function () {

            $(".leavelist").hide();
            $(".leavebalancelist").show();
            $("html, body").animate({ scrollTop: $(document).height() }, "slow");
            leaveBalanceTable.columns.adjust().draw();
        });

        $("#Myleave").on('click', function () {
            $(".leavelist").show();
            $(".leavebalancelist").hide();
            $("html, body").animate({ scrollTop: $(document).height() }, "slow");
            leaveListTable.ajax.url("../LeaveApply/GetEmployeeLeaveList").load().draw();
            $('#year').trigger('change');
        });

        //setTimeout(function () { $('#year').trigger('change'); }, 1000);
        //$('#year').trigger('change');
    });

    $("#year").on('change',function (e) {

        var data = $(this).val();
        var currentdata = [];
        $.each((JSON.parse(EmployeeLeaveListTable)), function (i, val) {
            if(val.Year == data ){
                currentdata.push(val);
            }
        });

    leaveListTable.clear().draw();
    leaveListTable.rows.add(currentdata);
    leaveListTable.columns.adjust().draw();

    });


    function loadLeaveBalance() {
        var currentYear = new Date().getFullYear();
        leaveBalanceTable = $("#LeavebalanceList").DataTable({

            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "iDisplayLength": 5,
            "ajax": {
                "url": '@Url.Content("~/LeaveApply/GetLeaveBalance")',
                data: {
                    year: currentYear
                },
                "dataSrc": function (data) {
                    var d = typeof (data);
                    var s = typeof (JSON.parse(data));
                    leaveBalance = JSON.parse(data);
                    return JSON.parse(data);

                }
            },
            "aoColumns": [
                 { "mData": "ID", "sTitle": "ID", "sClass": "text-center", "sWidth": "2%", "bVisible": false }  //0
                , { "mData": "Employee_Id", "sTitle": "Employee Id", "sClass": "text-center" }  //1
                , { "mData": "EmployeeName", "sTitle": "Employee Name", "sClass": "text-center" }  //2
                , { "mData": "LEAVE_TYPE", "sTitle": "Leave Type", "sClass": "text-center" }  //3
                , { "mData": "LEAVE_CODE", "sTitle": "Leave Code", "sClass": "text-center", "bVisible": false }  //4
                , { "mData": "LeaveTypeId", "sTitle": "Leave Type Id", "sClass": "text-center", "bVisible": false}  //5
                , { "mData": "LeaveCredited", "sTitle": "Leave Credit", "sClass": "text-center", "bVisible": false }  //6
                , { "mData": "NumberofdaysLeaveTaken", "sTitle": "Leave Taken", "sClass": "text-center", "bVisible": false }  //7
                , { "mData": "AvailableLeave", "sTitle": "Leave Balance", "sClass": "text-center"}  //8
                , { "mData": "AdvanceCredit", "sTitle": "Advance Credit", "sClass": "text-center", "bVisible": false }  //9
                , { "mData": "AdvanceAvailed", "sTitle": "Advance Availed", "sClass": "text-center", "bVisible": false }  //10
                , { "mData": "TotalLeavesCredit", "sTitle": "TotalLeaves", "sClass": "text-center", "bVisible": false }  //10 AdvanceCredit + LeaveCredited

                //{ "mData": "Employee_Id", "sTitle": "Employee Id" },
                //{ "mData": "Fullname", "sTitle": "Employee Name" },
                //{ "mData": "Leavetype", "sTitle": "Leave Type" },
                //{ "mData": "Leavebalance", "sTitle": "Leave Balance" }
            ],

            "aoColumnDefs": [
                {
                    "aTargets": [8],
                    "mRender": function (data, type, row) {
                        if (data < 0) {
                            return 0;
                        }
                        else {
                            return data;
                        }

                    }
                }
            ]
        });
    }

    function loadLeaveList() {

        leaveListTable = $("#LeaveList").DataTable({
            "order": [[7, "desc"]],
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "iDisplayLength": 5,
            "ajax": {
                "async": false,
                "url": '@Url.Content("~/LeaveApply/GetEmployeeLeaveList")',
                "dataSrc": function (data) {

                    EmployeeLeaveListTable = data;
                    return JSON.parse(data);

                }
            },
            "aoColumns":
                [
                { "mData": "FromDate",'sType':'date', "sTitle": "From Date" },
                { "mData": "ToDate",'sType':'date', "sTitle": "To Date" },
                { "mData": "Numberofdays", "sTitle": "Number Of Days" },
                { "mData": "LeaveType", "sTitle": "Leave Type" },
                { "mData": "Reason", "sTitle": "Reason" },
                { "mData": "Approval", "sTitle": "Status" },
                { "mData": "id", "sTitle": "Cancel", "sClass": "text-center", "bSortable": true, "orderable": false },
                { "mData": "AppliedDate",'sType':'date', "bVisible": false, "sTitle": "Applied Date" },
                { "mData": "Year", "sTitle": "Year", "bVisible": false },
                { "mData": "id", "sTitle": "View", "sClass": "text-center", "bSortable": true, "orderable": false }
                ],

            "aoColumnDefs": [
                {
                    "aTargets": [6],
                    "mRender": function (data, type, row) {

                        if (row["Approval"] == 1) {
                            return '<span onclick= CancelLeave($(this).closest("tr")) id="spanhide" class="fa fa-times spanedit" ></span>';
                        }
                        else {
                            return '<span onclick= CancelLeave($(this).closest("tr")) style="display:none" id="spanhide" class="fa fa-times spanedit" ></span>';
                        }

                    }
                },
                {
                    "aTargets": [5],
                    "mRender": function (data, type, row) {
                        if (data == 1) {
                            return "Pending";
                        }

                        if (data == 2) {
                            return "Approved";
                        }
                        if (data == 3) {
                            return "Rejected";
                        }
                        if (data == 4) {
                            return "Cancelled";
                        }
                    }
                },
                {
                    "aTargets": [9],
                    "mRender": function (data, type, row) {
                        if (parseInt( row["Year"] ) > 2019) {
                            return '<img src="@Url.Content("~/Content/images/chevron-down.png")" onclick="ViewLeaveDetails('+ data +' ,this)" id="viewLeaveDetails" class="spanedit" />';
                        }
                        else{
                            return '';
                        }
                    }
                }

            ]
        });
    }
</script>


<script>
    var PreviousTr;
    var PreviousTd;
    function ViewLeaveDetails(LeaveId, CurrentElement){
        
        var DetailedLeaveList;

        $.ajax({
            type:'POST'
            ,async:false
            ,data:{leaveId:LeaveId}
            ,url:'@Url.Content("~/LeaveApply/GetDetailedLeaveList")'
            ,success:function(data){
                DetailedLeaveList = JSON.parse(data);
            }
        });

        var nTr = CurrentElement.parentNode.parentNode;
        if($("#LeaveList").dataTable().fnIsOpen(PreviousTr) && PreviousTr != nTr){
            $("#LeaveList").dataTable().fnClose(PreviousTr);
            PreviousTd.src="@Url.Content("~/Content/images/chevron-down.png")";
        }
        if($("#LeaveList").dataTable().fnIsOpen(nTr)){
            $("#LeaveList").dataTable().fnClose(nTr);
            CurrentElement.src="@Url.Content("~/Content/images/chevron-down.png")"
        }
        else{
            CurrentElement.src="@Url.Content("~/Content/images/chevron-up.png")"
            $("#LeaveList").dataTable().fnOpen(nTr, mapDetails(DetailedLeaveList), 'details')
            PreviousTr = nTr;
            PreviousTd = CurrentElement;
        }
    }

    function mapDetails(data){

        var sOut = '<table class="table table-bordered table-condensed" style="margin-bottom: 1px!important;;width:100%;" border="0">';
        if (data == null || data == undefined || data.length == 0) {
            sOut += '<tr><th class="text-center">No data</th></tr>';
        } else {
            sOut += '<thead>';
            sOut += '<tr role="row">';
            sOut += '<th style="width:33.33%" class="text-center">Leave applied</th>';
            sOut += '<th style="width:33.33%" class="text-center">Adjust against</th>';
            sOut += '<th style="width:33.33%" class="text-center">Days</th>';
            sOut += '</tr>';
            sOut += '</thead>';
            sOut += '<tbody>'
            for(var i=0; i<data.length; i++){
                sOut += '<tr>';
                sOut += '<td style="width:33.33%" class="text-center">'+ data[i].AppliedLeaveType +'</td>';
                sOut += '<td style="width:33.33%" class="text-center">'+ data[i].LeaveType +'</td>';
                sOut += '<td style="width:33.33%" class="text-center">'+ data[i].NumberOfDays +'</td>';
                sOut += '</tr>';
            }
            sOut += '</tbody>';
        }
        sOut += '</table>';
        return sOut;
    }

    function CancelLeave(curTr) {
        var rowdata;
        rowdata = leaveListTable.row(curTr).data();

        bootbox.confirm("Are you sure want to cancel ?", function (result) {

            if (result == true) {

                $.ajax({
                    type: "POST",

                    url: '@Url.Content("~/LeaveApply/LeaveCancel")',
                    data: {

                        id: rowdata.id

                    },
                    success: function (response) {

                        if (parseInt(response.success) == 1) {
                            //$("#ErrorSpan").text("Successfully Canceled");
                            //$("#ErrorSpan").show();
                            toastr.error("Successfully Cancelled");

                            leaveListTable.ajax.url("../LeaveApply/GetEmployeeLeaveList").load().draw();
                            $('#year').trigger('change');
                        }
                        else {

                            //$("#ErrorSpan").text("Failed to Cancel");
                            //$("#ErrorSpan").show();
                            toastr.error("Failed To Cancel");
                        }
                    }
                });
            }
        });
    };
</script>




<script>


    function Noofdays() {

        var fd = new Date($("#FromDate").val());
        var td = new Date($("#ToDate").val());

        if ($("#FromDate").val() != "" && $("#ToDate").val() != "") {
            var listOfHolidays = [];
            var noOfDaysLeave = 0;

            $.ajax({

                type: 'GET',
                url: '@Url.Content("~/LeaveApply/GetHolidayDatesList")',
                async: false,
                cache: false,
                data:
                    {
                        FromDate: fd.toDateString(),
                        ToDate: td.toDateString()
                    },
                success: function (data) {

                    var jsondata = JSON.parse(data);
                    $.each(jsondata, function (i, holidaydate) {

                        listOfHolidays.push(holidaydate.DATEOFHOLIDAY);
                    });
                }
            });

            //

            var runDate = new Date(fd);
            var isLeave = 0;
            while (runDate <= td) {
                isLeave = 0;
                if (!((runDate.getDay() == 0 || runDate.getDay() == 6))) {
                    isLeave = 1;
                }
                if (isLeave == 1) {


                    if ((listOfHolidays.includes(runDate.getFullYear().toString() + ("0" + (runDate.getMonth() + 1)).slice(-2) + ("0" + (runDate.getDate())).slice(-2)))) {
                        isLeave = 0;
                    }
                }
                noOfDaysLeave = noOfDaysLeave + isLeave;
                runDate.setDate(runDate.getDate() + 1);
            }


            var LeaveFromSession = $("#LeaveFromSession").val();
            var LeaveToSession = $("#LeaveToSession").val();

            if (LeaveFromSession == 2) {
                noOfDaysLeave = 0.5;
            } else {

                if (LeaveFromSession == 3) {
                    noOfDaysLeave = noOfDaysLeave - 0.5;
                }

                if (LeaveToSession == 2) {
                    noOfDaysLeave = noOfDaysLeave - 0.5;
                }

            }
            return noOfDaysLeave;
        }
    }


    function diff(from, to) {

        var date1 = from;
        var date2 = to;
        var diffDays = parseInt((date2 - date1) / (1000 * 60 * 60 * 24));

        return diffDays + 1;
    }

    function IncludeLeaveDays() {
        if ($("#FromDate").val() != "" && $("#ToDate").val() != "") {
            var from = new Date($("#FromDate").val());
            var to = new Date($("#ToDate").val());

            var Noofday = diff(from, to);

            var LeaveFromSession = $("#LeaveFromSession").val();
            var LeaveToSession = $("#LeaveToSession").val();

            if (LeaveFromSession == 2) {
                Noofday = 0.5;
            } else {

                if (LeaveFromSession == 3) {
                    Noofday = Noofday - 0.5;
                }

                if (LeaveToSession == 2) {
                    Noofday = Noofday - 0.5;
                }

            }
            return Noofday;
        }
    }

</script>







