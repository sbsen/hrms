@model LeaveApply.Models.Leave

@{
    Layout = "~/Views/Shared/Layout_New.cshtml";
}

@System.Web.Optimization.Styles.Render("~/bundles/bootstrapdt")
@System.Web.Optimization.Styles.Render("~/bundles/fontawesome")
@System.Web.Optimization.Styles.Render("~/bundles/datepickercss")
@System.Web.Optimization.Scripts.Render("~/bundles/datatable")
@System.Web.Optimization.Scripts.Render("~/bundles/datepicker")
<script src="~/Scripts/ValidationFunction.js"></script>
<script src="~/Scripts/bootbox.min.js"></script>

<style>
    #ErrorSpan {
        text-align: left;
    }
</style>

<script>
    $(document).ready(function () {

        $("html,body").scrollTop(0);
    });

</script>


<form id="LeaveForm">
    <div class="panel">
        <div class="card">
            <div class="card-header p-b-0">
                <div>

                    <div class="card-title">Apply Leave</div>


                </div>
            </div>

            <div class="content-align p15 ">
                <div class="text-right p-t-5">
                    <button type="button" id="Leavebalance" class="btn btn-primary btn-sm">Leave Balance</button>
                    <button type="button" id="Myleave" class="btn btn-primary btn-sm">Show My Leaves</button>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(m => m.LeaveType)
                            </div>

                            <div class="editor-field">
                                @Html.DropDownListFor(m => m.LeaveType, new System.Web.Mvc.SelectList(ViewBag.LeaveTypes, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.LeaveType)
                            </div>


                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(m => m.Reason)
                            </div>
                            <div class="editor-field">
                                @Html.TextAreaFor(m => m.Reason, new { maxlength = 50, @class = "form-control", @placeholder = "Must between 50 characters" })
                                @Html.ValidationMessageFor(m => m.Reason)
                            </div>
                        </div>
                    </div>


                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(m => m.FromDate)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.FromDate)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="editor-label">
                            </div>
                            <div class="editor-field">

                                @Html.DropDownListFor(m => m.LeaveFromSession, new System.Web.Mvc.SelectList(ViewBag.LeaveFromSessions, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.LeaveFromSession)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(m => m.ToDate)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ToDate)
                            </div>
                        </div>

                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(m => m.LeaveToSession, "To Session", new { @class = "LeaveToSession" })
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(m => m.LeaveToSession, new System.Web.Mvc.SelectList(ViewBag.LeaveToSessions, "Value", "Text"), new { @class = "form-control" })
                            </div>
                        </div>
                    </div>


                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(m => m.Managerid)
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(m => m.Managerid, new System.Web.Mvc.SelectList(ViewBag.EmployeeNames, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Managerid)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="editor-label">
                                <label>No of Days</label>
                            </div>
                            <div class="editor-field">
                                <input type="text" id="NumberOfDays" name="NumberOfDays" class="form-control" readonly="readonly" />
                            </div>
                        </div>
                        <span id="ErrorSpan" style="color: red; align-self: center; font: bold; display: none"></span>
                    </div>


                </div>
                <div class="pull-right">
                    <button id="Back" onclick="location.href='@Url.Action("UserList", "UserList")';return false;" class="btn btn-default">Cancel</button>
                    <button type="button" id="submit" class="btn btn-primary">Apply</button>
                </div>
                <div class="leavelist">
                    <div class="MTS_Table p-t-45">
                        <table id="LeaveList" style="width: 100%;" class="table table-bordered table-hover tabel-sm table-responsive"></table>
                    </div>
                </div>
                <div class="leavebalancelist">
                    <div class="MTS_Table p-t-45">
                        <table id="LeavebalanceList" style="width: 100%;" class="table table-bordered table-hover tabel-sm table-responsive"></table>
                    </div>
                </div>
            </div>

        </div>
    </div>
</form>

<script>
    $(function () {

        $("#Managerid").prop('disabled', true)
        $('#LeaveFromSession').change(function () {
            debugger
            var value = $(this).val();

            if (value == '1') {

                var LeaveTo = $("#LeaveFromSession").val();
                if ($('#FromDate').val() == $('#ToDate').val()) {
                    $("#LeaveToSession").val(LeaveTo);
                    $('#LeaveToSession').prop('disabled', true);
                    $('#ToDate').prop('disabled', false);
                    $('#Managerid').prop('disabled', false);
                }
                else {

                    $('#LeaveToSession').prop('disabled', false);
                }
            }

            else if (value == '2') {

                $('#LeaveToSession').prop('disabled', true);
                $('#ToDate').prop('disabled', true);

                var Fromdate = $("#FromDate").val();
                $("#ToDate").val(Fromdate);

                var FromSession = $("#LeaveFromSession").val();
                $("#LeaveToSession").val(FromSession);
            }

            else if (value == '3') {

                var ToSession = "";
                $('#LeaveToSession').val(ToSession);
                if ($('#FromDate').val() == $('#ToDate').val()) {

                    $('#LeaveToSession').prop('disabled', true);
                    $('#ToDate').prop('disabled', false);
                    $('#Managerid').prop('disabled', false);
                }
                else {

                    $('#LeaveToSession').prop('disabled', false);
                }
            }

            else {

                $('#ToDate').prop('disabled', false);
                $('#LeaveToSession').prop('disabled', false);

            }
            if (($('#FromDate').val()) != "" && ($('#ToDate').val()) != "") {

                $("#Managerid").prop('disabled', false)
                $("#Managerid").val("").trigger('change');
            }

        });



        $('#FromDate').change(function () {

            if (($("#ToDate").val()) != "" && ($('#FromDate').val()) != "") {
                $("#Managerid").prop('disabled', false)
                $("#Managerid").val("").trigger('change');
            }
            else {
                $("#Managerid").prop('disabled', true)
            }
        });


        $('#LeaveToSession').change(function () {

            if (($("#ToDate").val()) != "" && ($('#FromDate').val()) != "") {
                $("#Managerid").prop('disabled', false)
                $("#Managerid").val("").trigger('change');
            }
            else {
                $("#Managerid").prop('disabled', true)
            }
        });



        $('#ToDate').change(function () {

            var FromSession = $("#LeaveFromSession").val();

            if ($("#ToDate").val() == ($('#FromDate').val())) {

                $("#LeaveToSession").prop('disabled', true);
                $("#Managerid").prop('disabled', false);
                $("#LeaveToSession").val(FromSession);
            }

            else {

                $("#LeaveToSession").prop('disabled', false);
            }

            if (($("#ToDate").val()) != "" && ($('#FromDate').val()) != "") {

                $("#Managerid").prop('disabled', false)
                $("#Managerid").val("").trigger('change');

            }
            else {

                $("#Managerid").prop('disabled', true)
            }
        });



        $('#Managerid').change(function () {

            if (($("#Managerid").val()) != "") {

                var Totaldaysleave = Noofdays();

                $("#NumberOfDays").val(Totaldaysleave);
            }
        });

    });


</script>


<script>
    $(document).ready(function () {
        var DisableDates = [];

        var year = (new Date()).getFullYear();

        $.ajax({

            type: 'GET',
            url: '@Url.Content("~/LeaveApply/GetDisableHolidayDatesList")',
            async: false,
            cache: false,
            data:
                {
                    year: year
                },
            success: function (data) {
                var jsondata = JSON.parse(data);
                $.each(jsondata, function (i, holidaydate) {

                    DisableDates.push(holidaydate.DATEOFHOLIDAY);

                });
            }
        });



        var end = new Date(new Date().setYear(new Date().getFullYear() + 2));
        var setEndDate = new Date().setDate() + 1;

        $('#FromDate').datepicker({
            format: 'dd/M/yyyy',
            endDate: end,
            autoclose: true,      
        }).on('changeDate', function () {
            $("#ToDate").val(this.value);
            $('#ToDate').datepicker('setStartDate', new Date($(this).val()));
            //$('#ToDate').datepicker('setEndDate', new Date($(this).val()).getDate()+1);
        });
        $('#ToDate').datepicker({
            format: 'dd/M/yyyy',
            //endDate: '+1d',
            autoclose: true,
        }).on('changeDate', function () {

            $('#FromDate').datepicker('setEndDate', new Date($(this).val()));
        });
        });
</script>

<script>

    var leaveBalanceTable, leaveListTable;

    $("#FromDate").on("keydown", function () {
        return false;
    });
    $("#ToDate").on("keydown", function () {
        return false;
    });
    $("#submit").click(function () {
        var disabled = $('#LeaveForm').find(':input:disabled').removeAttr('disabled');
        if ($('#LeaveForm').valid()) {
            debugger
            //var x;
            var currleavetype = $("#LeaveType").val();
            var EmpLeavebalance = employeeLeaveBalance.filter(x=>x.LeavetypeId == currleavetype);
            // var currLeavebalance = $("#Leavebalance");
            var currLeavebalance = EmpLeavebalance[0].Leavebalance;
            if (currLeavebalance <= 0) {
                {
                    bootbox.confirm("Your Leave balance is Nil do you want to apply?", function (result) {

                        if (result == true) {

                            $.ajax({

                                type: "POST",
                                url: '@Url.Content("~/LeaveApply/Create")',
                                data:

                                    $('#LeaveForm').serialize(),

                                success: function (response) {

                                    if (parseInt(response.success) == 1) {
                                        leaveListTable.ajax.url("../LeaveApply/GetEmployeeLeaveList").load().draw();
                                        $("#LeaveForm")[0].reset();
                                        toastr.success("Successfully Applied waiting for approval");

                                    }
                                    else if (parseInt(response.success) == 2) {
                                        toastr.error('You cannot apply leave as you are already on casual leave');
                                    }
                                    else {
                                        toastr.error('Failed To Apply  ');
                                    }
                                }
                            });
                        }
                    })
                }



                }

            else {
                bootbox.confirm("Are you sure you want to apply ?", function (result) {

                    if (result == true) {

                        $.ajax({

                            type: "POST",
                            url: '@Url.Content("~/LeaveApply/Create")',
                            data:

                                $('#LeaveForm').serialize(),

                            success: function (response) {

                                if (parseInt(response.success) == 1) {
                                    leaveListTable.ajax.url("../LeaveApply/GetEmployeeLeaveList").load().draw();
                                    $("#LeaveForm")[0].reset();
                                    toastr.success("Successfully Applied waiting for approval");

                                }
                                else if (parseInt(response.success) == 2) {
                                    toastr.error('You cannot apply leave as you are already on casual leave');
                                }
                                else {
                                    toastr.error('Failed To Apply  ');
                                }
                            }
                        });
                    }
                })
            }
        }
    });


    $(document).ready(function () {
        var employeeLeaveBalance = [];
        $(".leavebalancelist").hide();
        $(".leavelist").hide();

        loadLeaveBalance();
        loadLeaveList();

        $("#Leavebalance").on('click', function () {

            $(".leavelist").hide();
            $(".leavebalancelist").show();
            $("html, body").animate({ scrollTop: $(document).height() }, "slow");
            leaveBalanceTable.columns.adjust().draw();
        });

        $("#Myleave").on('click', function () {

            $(".leavelist").show();
            $(".leavebalancelist").hide();
            $("html, body").animate({ scrollTop: $(document).height() }, "slow");
            leaveListTable.ajax.url("../LeaveApply/GetEmployeeLeaveList").load().draw();

        });
    });

    function loadLeaveBalance() {
        leaveBalanceTable = $("#LeavebalanceList").DataTable({

            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "iDisplayLength": 5,
            "ajax": {
                "url":  '@Url.Content("~/LeaveApply/GetLeaveBalance")',
                "dataSrc": function (data) {
                    var d = typeof (data);
                    var s = typeof (JSON.parse(data));
                    employeeLeaveBalance = JSON.parse(data);
                    return JSON.parse(data);

                }
            },
            "aoColumns": [
                { "mData": "Employee_Id", "sTitle": "Employee Id" },
                { "mData": "Fullname", "sTitle": "Employee Name" },
                { "mData": "Leavetype", "sTitle": "Leave Type" },
                { "mData": "LeavetypeId", "bVisible": false, "sTitle": "Leave Type" },
                { "mData": "Leavebalance", "sTitle": "Leave Balance" }]

        });
    }

    function loadLeaveList() {
        leaveListTable = $("#LeaveList").DataTable({
            "order": [[7, "desc"]],
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "iDisplayLength": 5,
            "ajax": {
                "url": '@Url.Content("~/LeaveApply/GetEmployeeLeaveList")',
                "dataSrc": function (data) {

                    return JSON.parse(data);

                }
            },
            "aoColumns":
                [
                { "mData": "FromDate", "sTitle": "From Date" },
                { "mData": "ToDate", "sTitle": "To Date" },
                { "mData": "Numberofdays", "sTitle": "Number Of Days" },
                { "mData": "LeaveType", "sTitle": "Leave Type" },
                { "mData": "Reason", "sTitle": "Reason" },
                { "mData": "Approval", "sTitle": "Status" },
                { "mData": "id", "sTitle": "Cancel", "sClass": "text-center", "bSortable": true, "sWidth": "1%", "orderable": false },
                { "mData": "AppliedDate", "bVisible": false, "sTitle": "Applied Date" }
                ],

            "aoColumnDefs": [
                {

                    "aTargets": [6],
                    "mRender": function (data, type, row) {

                        if (row["Approval"] == 1) {
                            return '<span onclick= CancelLeave($(this).closest("tr")) id="spanhide" class="fa fa-times spanedit" ></span>';
                        }
                        else {
                            return '<span onclick= CancelLeave($(this).closest("tr")) style="display:none" id="spanhide" class="fa fa-times spanedit" ></span>';
                        }

                    }
                }, {
                    "aTargets": [5],
                    "mRender": function (data, type, row) {
                        if (data == 1) {
                            return "Pending";
                        }

                        if (data == 2) {
                            return "Approved";
                        }
                        if (data == 3) {
                            return "Rejected";
                        }
                        if (data == 4) {
                            return "Canceled";
                        }
                    }
                }

            ]
        });
    }
</script>


<script>
    function CancelLeave(curTr) {
        var rowdata;
        rowdata = leaveListTable.row(curTr).data();

        bootbox.confirm("Are you sure want to cancel ?", function (result) {

            if (result == true) {

                $.ajax({
                    type: "POST",

                    url: '@Url.Content("~/LeaveApply/LeaveCancel")',
                    data: {

                        id: rowdata.id

                    },
                    success: function (response) {

                        if (parseInt(response.success) == 1) {
                            $("#ErrorSpan").text("Successfully Canceled");
                            $("#ErrorSpan").show();

                            leaveListTable.ajax.url("../LeaveApply/GetEmployeeLeaveList").load().draw();
                        }
                        else {

                            $("#ErrorSpan").text("Failed to Cancel");
                            $("#ErrorSpan").show();
                        }
                    }
                });
            }
        });
    };
</script>




<script>


    function Noofdays() {

        var fd = new Date($("#FromDate").val());
        var td = new Date($("#ToDate").val());
        var listOfHolidays = [];
        var noOfDaysLeave = 0;

        $.ajax({

            type: 'GET',
            url: '@Url.Content("~/LeaveApply/GetHolidayDatesList")',
            async: false,
            cache: false,
            data:
                {
                    FromDate: fd.toDateString(),
                    ToDate: td.toDateString()
                },
            success: function (data) {

                var jsondata = JSON.parse(data);
                $.each(jsondata, function (i, holidaydate) {

                    listOfHolidays.push(holidaydate.DATEOFHOLIDAY);
                });
            }
        });



        var runDate = new Date(fd);
        var isLeave = 0;
        while (runDate <= td) {
            isLeave = 0;
            if (!((runDate.getDay() == 0 || runDate.getDay() == 6))) {
                isLeave = 1;
            }
            if (isLeave == 1) {


                if ((listOfHolidays.includes(runDate.getFullYear().toString() + ("0" + (runDate.getMonth() + 1)).slice(-2) + ("0" + (runDate.getDate())).slice(-2)))) {
                    isLeave = 0;
                }
            }
            noOfDaysLeave = noOfDaysLeave + isLeave;
            runDate.setDate(runDate.getDate() + 1);
        }


        var LeaveFromSession = $("#LeaveFromSession").val();
        var LeaveToSession = $("#LeaveToSession").val();

        if (LeaveFromSession == 2) {
            noOfDaysLeave = 0.5;
        } else {

            if (LeaveFromSession == 3) {
                noOfDaysLeave = noOfDaysLeave - 0.5;
            }

            if (LeaveToSession == 2) {
                noOfDaysLeave = noOfDaysLeave - 0.5;
            }

        }
        return noOfDaysLeave;

    }
</script>









