@model MTSINHR.Models.Employee

@{
    Layout = "~/Views/Shared/Layout_New.cshtml";
}


@System.Web.Optimization.Scripts.Render("~/bundles/datepicker")
@System.Web.Optimization.Styles.Render("~/bundles/datepickercss")
<script src="~/Scripts/bootbox.min.js"></script>

<style>
    .requir{
        border-left:2px solid red !important;
    }
</style>

@{

    List<SelectListItem> GenderItems = new List<SelectListItem>();

    GenderItems.Add(new SelectListItem
    {
        Text = "Male",
        Value = "0",

    });
    GenderItems.Add(new SelectListItem
    {
        Text = "Female",
        Value = "1"
    });


    //List<SelectListItem> FunctionalRoleItems = new List<SelectListItem>();

    //FunctionalRoleItems.Add(new SelectListItem
    //{
    //    Text = "Trainee",
    //    Value = "1",

    //});
    //FunctionalRoleItems.Add(new SelectListItem
    //{
    //    Text = "Developer",
    //    Value = "2"
    //});

    //FunctionalRoleItems.Add(new SelectListItem
    //{
    //    Text = "Team Lead",
    //    Value = "3"
    //});

    //FunctionalRoleItems.Add(new SelectListItem
    //{
    //    Text = "Manager",
    //    Value = "4"
    //});

    //FunctionalRoleItems.Add(new SelectListItem
    //{
    //    Text = "QA",
    //    Value = "5"
    //});

    //FunctionalRoleItems.Add(new SelectListItem
    //{
    //    Text = "BPO",
    //    Value = "6"
    //});

    List<SelectListItem> RoleItems = new List<SelectListItem>();

    RoleItems.Add(new SelectListItem
    {
        Text = "Admin",
        Value = "1",

    });
    RoleItems.Add(new SelectListItem
    {
        Text = "User",
        Value = "2"
    });

    Int64 mDesignation = 0;
    Int64 mDepartment = 0;
    Int64 mMaritalstatus = 0;
    Int64 mNationality = 0;
    Int64 mFunctionalRole = 0;

    if (Model != null)
    {
        mDesignation = Model.Designation;
        mDepartment = Model.DepartmentId;
        mMaritalstatus = Model.Maritalstatus;
        mNationality = Model.Nationality;
        mFunctionalRole = Model.FunctionalRole;
    }

}





<form id="employee" method="post">
    <div class="panel">
        <div class="card">
            <div class="card-header p-b-0">
                <div class="card-title text-center">
                    <label id="addedit"></label>
                </div>
            </div>
            <div class="card-block">
                <div class="content-align p15">

                    <div class="row">
                        <div class="col-md-4">
                            @Html.HiddenFor(model => model.id)
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Employee_ID)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Employee_ID, new { @class = "form-control requir", @minlength = 5, @maxlength = 5 })
                                    @Html.ValidationMessageFor(model => model.Employee_ID)
                                </div>

                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">

                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Firstname)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Firstname, new { @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.Firstname)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Lastname)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Lastname, new { @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.Lastname)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Fathername)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Fathername, new { @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.Fathername)
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Gender)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.Gender, new System.Web.Mvc.SelectList(GenderItems, "value", "Text"), "Select Gender ", new { @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.Gender)
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Dateofbirth)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Dateofbirth, "{0:dd/MMM/yyyy}", new { @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.Dateofbirth)
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Maritalstatus)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.Maritalstatus, new System.Web.Mvc.SelectList(ViewBag.maritalstatus, "value", "Text"), new { @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.Maritalstatus)
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Spousename)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Spousename, new { @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.Spousename)
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Mobile)
                                </div>
                                <div class="editor-field">
                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control requir" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Mobile)
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Email)
                                    <span style="color:#2abb50"> (Email Address will be the Username)</span>
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.Email)
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Dateofjoin)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Dateofjoin, "{0:MMM/dd/yyyy}", new { @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.Dateofjoin)
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Designation)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.Designation, new System.Web.Mvc.SelectList(ViewBag.designation, "value", "Text"), new { @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.Designation)
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.DepartmentId)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.DepartmentId, new System.Web.Mvc.SelectList(ViewBag.department, "value", "Text"), new { @onchange = "getLeaveTaken(this.value)", @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.DepartmentId)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.FunctionalRole)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.FunctionalRole, new System.Web.Mvc.SelectList(ViewBag.FunctionalRoleList, "value", "Text"), new { @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.FunctionalRole)
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">

                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Aadhar)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Aadhar, new { @class = "form-control", minlength = 12, maxlength = 12 })
                                    @Html.ValidationMessageFor(model => model.Aadhar)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">

                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Pancard)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Pancard, new { @class = "form-control", minlength = 10, maxlength = 10 })
                                    @Html.ValidationMessageFor(model => model.Pancard)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">

                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.PF_AccountNumber)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.PF_AccountNumber, new { @class = "form-control", minlength = 10 })
                                    @Html.ValidationMessageFor(model => model.PF_AccountNumber)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">

                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.PF_UAN)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.PF_UAN, new { @class = "form-control", minlength = 10 })
                                    @Html.ValidationMessageFor(model => model.PF_UAN)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">

                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ESI_Number)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ESI_Number, new { @class = "form-control", minlength = 10 })
                                    @Html.ValidationMessageFor(model => model.ESI_Number)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Nationality)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.Nationality, new System.Web.Mvc.SelectList(ViewBag.nationality, "value", "Text"), new { @class = "form-control requir" })
                                    @Html.ValidationMessageFor(model => model.Nationality)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="formRow field-validation-error f12size text-center">
                                    <span class="errorspan" style="display: none">Failed To Save Employee Details Check Your Email or Employee Id</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pull-right p-b-10 p-r-10">
                    <button type="button" id="cancel" onclick="back()" class="btn btn-light m-r-5">Close</button>
                    <button type="button" id="add" class="btn btn-primary spanedit " onclick="EmployeeAddEdit()">Save</button>
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    $(document).ready(function () {



        var CurrentYear = (new Date).getFullYear();
        var monthcount = '@System.Configuration.ConfigurationManager.AppSettings["Month_restrict_count"]';
        var DOBlimit = '@System.Configuration.ConfigurationManager.AppSettings["Doblimit_count"]';
        var monthlimit = "-" + monthcount + "m";
        $('#Dateofjoin').datepicker({
            format: 'dd/M/yyyy',


            changeMonth: true,
            changeYear: true,
            autoclose: true,
            endDate: monthlimit
        });

        $('#Dateofbirth').datepicker({
            format: 'dd/M/yyyy',
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            endDate: "-" + DOBlimit + "y"



        });
        $("#Maritalstatus").on("change", function () {
            var s = $("#Maritalstatus").val();
            if ((s == "1")) {
                $("#Spousename").prop('disabled', true);
            }
            else {
                $("#Spousename").prop('disabled', false);
            }
        });

        $("#addedit").text('Add Employee');
        var user = '@ViewBag.actionURL';

        if (user != "AddEmployee") {
            $("#Designation").val('@mDesignation').trigger('change');
            $("#Maritalstatus").val('@mMaritalstatus').trigger('change');
            $("#Nationality").val('@mNationality').trigger('change');
            $("#Department").val('@mDepartment').trigger('change');
            $("#FunctionalRole").val('@mFunctionalRole').trigger('change');
            $("#Role").prop('disabled', true);
            $("#Employee_ID").prop('readonly', true);
            $("#addedit").text('Edit Employee');

        }
        else {
            $("#Employee_ID").val('@ViewBag.EmployeeId')
        }

    });

    function back() {

        bootbox.confirm("Are you sure?", function (result) {

            if (result == true) {

                window.location.href = '@Url.Action("EmployeeList", "EmployeeList")';
            }
        });
    }
    function EmployeeAddEdit() {
        debugger
        var actionname = "@ViewBag.actionURL";




        var url = '@Url.Content("~/Employee/")' + actionname;

        if ($("#employee").valid()) {




            $.ajax({
                type: "Post",
                data: $("#employee").serialize(),

                url: url,
                success: function (result) {

                    if (result == "Failed") {
                        $(".errorspan").show();
                    }
                    else if (result == "Success") {
                        toastr.success("Successfully Saved");
                        window.location.href = '@Url.Action("EmployeeList", "EmployeeList")';
                    }
                    else if (result == "EditSuccess") {
                        toastr.success("Successfully Updated");
                        window.location.href = '@Url.Action("ReadEmployeeDetails", "Employee")';
                    }
                }
            });
        }
    }

    function getLeaveTaken(docname) {
        var actionname = "@ViewBag.actionURL";
        if (docname != "" && actionname == "EditEmployee") {
            bootbox.confirm("Are you sure you want to change department and reset leave for employee?", function (result) {
                if (result == true) {
                    //alert(docname)
                }
            });
        }
    }
</script>