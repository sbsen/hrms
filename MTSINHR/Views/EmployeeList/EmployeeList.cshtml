@{
    ViewBag.Title = "EmployeeList";
}
@System.Web.Optimization.Scripts.Render("~/bundles/jquery")
<script src="~/Scripts/moment.min.js"></script>
@System.Web.Optimization.Styles.Render("~/bundles/bootstrapdt")
@System.Web.Optimization.Scripts.Render("~/bundles/datatable")

<script src="~/Scripts/ValidationFunction.js"></script>
<script src="~/Scripts/DataTables/dataTables.buttons.min.js"></script>
<script src="~/Scripts/DataTables/excel.min.js"></script>
<script src="~/Scripts/daterangepicker.min.js"></script>

<script src="~/Scripts/DataTables/buttons.html5.min.js"></script>
<link href="~/Content/DataTables/css/buttons.dataTables.min.css" rel="stylesheet" />
<script src="~/Scripts/DataTables/datatables.sorting.natural.js"></script>

<link href="~/Content/daterangepicker.css" rel="stylesheet" />

<script>
    var groupTable;
    var groupTableData;
    $(document).ready(function () {
        $('input[name="daterange"]').daterangepicker({
            locale: { cancelLabel: 'Clear' }
        })
        $('#FilterEmployees').on('click', function () {
            var DateVal = $('input[name="daterange"]').val().split("-");
            var fromDate = DateVal[0].trim();
            var toDate = DateVal[1].trim();
            var StartDate = new Date(fromDate);
            var EndDate = new Date(toDate);

            $.ajax({
                type: "POST",
                data: {
                    StartDate: StartDate.toISOString()
                    , EndDate: EndDate.toISOString()
                },
                url: '@Url.Content("~/EmployeeList/FilterEmployees")',
                success: function (data) {
                    groupTable.clear();
                    groupTable.rows.add(JSON.parse(data));
                    groupTable.draw();

                },
            });


        });

        $('#addbankdetails').prop('disabled', true);
        loadTable();
        //setTimeout(drawActiveEmployees, 110);
        drawActiveEmployees();
        var table = $('#getallemployee').DataTable();
        $('#getallemployee tbody').on('click', 'tr', function () {

            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
                $('#addbankdetails').prop('disabled', true);
            }
            else {
                var selectedIndex = groupTable.row(this).data();
                if (selectedIndex.Bankname != null) {
                    table.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                    $('#addbankdetails').prop('disabled', true);
                } else {
                    table.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                    $('#addbankdetails').prop('disabled', false);
                }
            }
        });

        $('#addbankdetails').click(function () {
            var count = table.row('.selected');
            if (count[0].length > 0) {
                var data = table.row('.selected').data();
                var id = data.id;
                var employeeName = data.Firstname + ' ' + data.Lastname;
                $.ajax({
                    type: 'POST',
                    data: {
                        id: id
                    },
                    url: '@Url.Action("BankDetails", "BankDetails")',
                    success: function (result) {

                        $('.changeName').text('Add Bank Details For ' + employeeName);
                        $(".card-body").html(result)
                    }
                });
            }
            else {

                $('#addbankdetails').hide();
            }
        });
        $('#addEmployee').click(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Employee/SetEmployeeid")',
                success: function (result) {
                    if (result == "success") {
                        window.location.href = '@Url.Action("Employee", "Employee")';
                    }
                }
            });
        });
        $("#active").on('click',function(){
            FilterEmployee();
        })
        $('#activecheckbox').hide();
        $('#activestatus_filter').val(1);
    });
    function drawActiveEmployees() {
        var activeEmployees = groupTableData.filter(a=>a.Active == true);
        groupTable.clear();
        groupTable.rows.add(activeEmployees).draw();
    }
    function loadTable() {
        var date = new Date();
        var curr_date_val = date.getFullYear() + '_' + (date.getMonth() + 1) + '_' + date.getDate();
        groupTable = $("#getallemployee").DataTable({
            "dom": 'Bfrtip',
            "data": "",
            buttons: [
               {
                   extend: 'excelHtml5',
                   exportOptions: {
                       columns: [1, 2, 3, 15, 16, 6, 7, 8, 17, 18, 19, 20, 21, 22]
                   },
                   filename: 'Employee_Details_' + curr_date_val,
               }
            ],
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "iDisplayLength": 25,
            "bFilter": true,
            "bProcessing": true,
            "order": [[1, "asc"]],
            "ajax": {
                type: 'Get',
                url: '@Url.Content("~/EmployeeList/Read")',
                async: false,
                dataSrc: function (data) {
                    //groupTableData = JSON.parse(data);
                    //return JSON.parse(data);
                    var TableData = JSON.parse(data);
                    var activeEmployees = TableData.filter(a=>a.Active == true);
                    groupTableData = TableData;
                    return activeEmployees;

                }
            },

            "aoColumns": [
                { "mData": "id", "bVisible": false, "defaultContent": "<i>Not set</i>" }//0
                , { "mData": "Employee_Id", "sTitle": "Emp. Id","sType": "natural", "sClass": "text-left", "defaultContent": "<i>Not set</i>" }//1
                , { "mData": "Firstname", "sTitle": "First Name", "sClass": "text-left", "defaultContent": "<i>Not set</i>" }//2
                , { "mData": "Lastname", "sTitle": "Last Name", "sClass": "text-left", "defaultContent": "<i>Not set</i>" }//3
                , { "mData": "Skills", "sTitle": "Skills", "sClass": "text-left", "bVisible": false, "defaultContent": "<i>Not set</i>" }//4
                , { "mData": "ROLEID", "sTitle": "Role", "bVisible": false }//5
                , { "mData": "Designation", "sTitle": "Designation", "sClass": "text-left", "defaultContent": "<i>Not set</i>" }//6
                , { "mData": "Dateofjoin", "sTitle": "Date Of Join","sType": "date", "sClass": "text-center", "defaultContent": "<i>Not Set</i>" }//7
                , { "mData": "ResignedOn", "sTitle": "ResignedOn", "sType": "date", "sClass": "text-center", "bVisible": false, "defaultContent": "<i>Not Set</i>" }//8
                , { "mData": "Experience", "sTitle": "Experience", "sType": "natural", "sClass": "text-center", "defaultContent": "<i>Not Set</i>" }//9
                , { "mData": "Languages", "sTitle": "Language", "sClass": "text-left", "defaultContent": "<i>Not set</i>" }//10
                , { "mData": "id", "sTitle": "Assign manager", "sClass": "text-center" }//11
                , { "mData": "id", "sTitle": "View", "sClass": "text-center", "bSortable": false, "sWidth": "1%", "orderable": false }//12
                , { "mData": "Active", "sTitle": "Status", "sClass": "text-center", "bSortable": false, "sWidth": "1%", "orderable": false }//13
                , { "mData": "Active", "sTitle": "Status", "sClass": "text-center", "bSortable": false, "bVisible": false, "sWidth": "1%", "orderable": false }//14
                , { "mData": "Gender", "sTitle": "Gender", "sClass": "text-center", "bSortable": false, "bVisible": false, "orderable": false }//15
               //  , { "mData": "Gender", "sTitle": "Gender", "sClass": "text-center", "bSortable": false,"bVisible":false, "orderable": false }//15
                , { "mData": "Fathername", "sTitle": "Father Name", "sClass": "text-center", "bSortable": false, "bVisible": false, "orderable": false }//16
                , { "mData": "Dateofbirth", "sTitle": "Date Of Birth", "sClass": "text-center", "bSortable": false, "bVisible": false, "orderable": false }//17
                , { "mData": "PF_AccountNumber", "sTitle": "PF Acc#", "sClass": "text-center", "bSortable": false, "bVisible": false, "orderable": false }//18
                , { "mData": "PF_UAN", "sTitle": "PF UAN#", "sClass": "text-center", "bSortable": false, "bVisible": false, "orderable": false }//19
                , { "mData": "Pancard", "sTitle": "Pan#", "sClass": "text-center", "bSortable": false, "bVisible": false, "orderable": false }//20
                , { "mData": "Aadhar", "sTitle": "Aadhar#", "sClass": "text-center", "bSortable": false, "bVisible": false, "orderable": false }//21
                , { "mData": "Department", "sTitle": "Department Name", "sClass": "text-center", "bSortable": false, "bVisible": false, "orderable": false }//22
                , { "mData": "Gender_Name", "sTitle": "Gender Name", "sClass": "text-center", "bSortable": false, "bVisible": false, "orderable": false }//23
                , { "mData": "Bankname", "sTitle": "Bankname", "sClass": "text-center", "bSortable": false, "bVisible": false, "orderable": false }//24
                , { "mData": "AssignedManagers", "sTitle": "AssignedManagers", "sClass": "text-center", "bSortable": false, "bVisible": false, "orderable": false }//25
            ],
            "aoColumnDefs": [
                {
                    "aTargets": [11]
                   , "mRender": function (data, type, row) {
                       
                       var EmpName = "'" + row.Firstname + ' ' + row.Lastname + "'";
                       if (row.AssignedManagers == null || row.AssignedManagers == "") {
                           return '<button="" onclick="AddManager(' + data + ',' + EmpName + ',this)"><i class="fa fa-plus"/></button>'
                       }
                       else {
                           return '<button="" onclick="AddManager(' + data + ',' + EmpName + ',this)"><i class="fa fa-street-view tooltipAssignedManager" title="' + row.AssignedManagers + '"/></button>'
                       }
                       //return '<button="" onmouseover="AssignedManagers()" data-toggle="tooltip" title="Hooray!" onclick="AddManager(' + data + ',' + EmpName + ')"><i class="fa fa-plus tooltipAssignedManager" title="'+ row.AssignedManagers +'"/></button>'
                   }
                },

                {
                    "aTargets": [12]
                    , "mRender": function (data, type, row) {
                        return '<button="" onclick="showEmployee(' + data + ')"><i class="fa fa-list"/></button>'
                    }
                },

                {
                    "aTargets": [13],
                    "mRender": function (row, type, data) {

                        if (row) {


                            return "<span class='badge badge-success badge-lg'>Active</span>"
                        }
                        else {


                            return "<span class='badge badge-danger badge-lg' style='width:85%' value='InActive'>InActive</span>"
                        }
                    }
                }
            ]
        });
    }
    //loadEmployeeTable();
    // alert($('#activestatus_filter'));
    function AssignedManagers(){
        $(".tooltipAssignedManager").tooltip({placement: "left"});
    }
    
    function FilterEmployee() {
        var cmbSelected = parseInt($('#activestatus_filter').val());
        if (cmbSelected == 0) {
            $.ajax({
                type: "GET",
                url: '@Url.Content("~/EmployeeList/Read")',
                data: '',
                success: function (data) {
                    groupTable.rows().clear();
                    groupTable.rows.add(JSON.parse(data));
                    groupTable.draw();
                    //groupTable.column(13).search('').draw();
                    //groupTable.column(14).search('').draw();
                }
            });
        }
        else if (cmbSelected == 1) {
            var activeEmployees = groupTableData.filter(a=>a.Active == true);
            groupTable.clear();
            groupTable.rows.add(activeEmployees).draw();
            groupTable.columns(8).visible(false);
        }
        else if (cmbSelected == 2) {
            var inActiveEmployees = groupTableData.filter(a=>a.Active == false);
            groupTable.clear();
            groupTable.rows.add(inActiveEmployees).draw();
            groupTable.columns(8).visible(true);
        }
        else if (cmbSelected == 3 && $('#active').prop('checked') == true) {
            var maleEmployees = groupTableData.filter(a=>a.Gender == 0 && a.Active == true);
            groupTable.clear();
            groupTable.rows.add(maleEmployees).draw();
            groupTable.columns(8).visible(false);
        }
        else if (cmbSelected == 3 && $('#active').prop('checked') == false) {
            var activeMaleEmployees = groupTableData.filter(a=>a.Gender == 0);
            groupTable.clear();
            groupTable.rows.add(activeMaleEmployees).draw();
            groupTable.columns(8).visible(true);
        }
        else if (cmbSelected == 4 && $('#active').prop('checked') == true) {
            var activeFemaleEmployees = groupTableData.filter(a=>a.Gender == 1 && a.Active == true);
            groupTable.clear();
            groupTable.rows.add(activeFemaleEmployees).draw();
            groupTable.columns(8).visible(false);
        }
        else if (cmbSelected == 4 && $('#active').prop('checked') == false) {
            var femaleEmployees = groupTableData.filter(a=>a.Gender == 1);
            groupTable.clear();
            groupTable.rows.add(femaleEmployees).draw();
            groupTable.columns(8).visible(true);
        }
        if (cmbSelected == 1 || cmbSelected == 2 || cmbSelected == 0) {
            $('#activecheckbox').hide();
        } else {
            $('#activecheckbox').show();
        }
    }


    function showEmployee(data) {

        var RoleId = "@Session["RoleId"].ToString()";

        if (RoleId == 1 || RoleId == 4) {
            $.ajax({
                type: 'POST',
                data: { id: data },
                url: '@Url.Action("SetPrimaryid", "Employee")',
                success: function (result) {
                    if (result == "success") {
                        window.location.href = '@Url.Action("ReadEmployeeDetails", "Employee")';
                    }
                    else {
                        var url = '@Url.Action("GetUserDetails", "UserInformation")';
                        window.location.href = url;
                    }
                }
            });
        }
    }

    function AddManager(EmpId, EmpName, selectedRow) {
        if('@Session["RoleId"].ToString()'=='1'||'@Session["RoleId"].ToString()'=='4'){
            $.ajax({
                type: "GET",
                url: '@Url.Content("~/EmployeeList/GetPartialViewAssignManager")',
                success: function (data) {
                    $("#AssignManagerModal").html(data);
                    GetManagerList(EmpId);
                    $("#EmployeeNameDisplay").text(EmpName);
                    selectedRowPV = selectedRow.closest("tr");
                    $("#AssignManagerModal").modal('show');
                }
            });
        }
    }
</script>
<style>
    i {
        cursor: pointer !important;
    }

    #activestatus_filter {
        position: relative;
        top: 3px;
        right: 5px;
        width: 100px;
        height: 33px;
        border-radius: 4px;
    }
</style>
<div class="card">
    <div class="card-header ">
        <div class="p-t-5 changeName">Employee List </div>
    </div>
    <div class="card-body">
        <div>
            <div class="row">
                <div class="col-md-6 text-left">
                    <label>Date Of Join </label>
                    <div style="display:inline-block">
                        <input type="text" name="daterange" class="form-control form-control-sm m-r-5" />
                    </div>
                    <div style="display:inline-block" class="m-l-15">
                        <button type="button" class="btn btn-primary btn-sm m-r-10" id="FilterEmployees">Search</button>
                    </div>
                </div>
                <div class="col-md-6  text-right">
                    <div style="display:inline-block" id="activecheckbox" class="checkbox m-r-10">
                        <label class="form-group"><input type="checkbox" value="" id="active">Active</label>
                    </div>
                    <select name="activestatus_filter" id="activestatus_filter" onchange="FilterEmployee()">
                        <option value="1">Active</option>
                        <option value="2">InActive</option>
                        <option value="0">All</option>
                        <option value="3">Male</option>
                        <option value="4">Female</option>
                    </select>
                    <button type="button" class="btn btn-primary btn-sm m-r-5" id="addbankdetails">Add BankDetails </button>
                    <button type="button" class="btn btn-primary btn-sm" id="addEmployee">Add Employee</button>
                </div>
            </div>
            <div class="row m-t-15">
                <div class="MTS_Table">
                    <table id="getallemployee" onmouseover="AssignedManagers()" class="table table-bordered table-hover tabel-sm table-responsive" cellspacing="0" width="100%"></table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="AssignManagerModal" data-backdrop="static"></div>
