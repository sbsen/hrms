@model MTSINHR.Models.Policies

@{
    ViewBag.Title = "UploadPolicy";
}

<link href="~/Content/viewer.min.css" rel="stylesheet" />
<link href="~/Scripts/jQuery-File-Upload-9.19.2/css/jquery.fileupload.css" rel="stylesheet" />
<script src="~/Scripts/jQuery-File-Upload-9.19.2/js/vendor/jquery.ui.widget.js"></script>
<script src="~/Scripts/jQuery-File-Upload-9.19.2/js/load-image.all.min.js"></script>
<script src="~/Scripts/jQuery-File-Upload-9.19.2/js/canvas-to-blob.js"></script>
<script src="~/Scripts/jQuery-File-Upload-9.19.2/js/jquery.iframe-transport.js"></script>
<script src="~/Scripts/jQuery-File-Upload-9.19.2/js/jquery.fileupload.js"></script>
<script src="~/Scripts/jQuery-File-Upload-9.19.2/js/jquery.fileupload-process.js"></script>
<script src="~/Scripts/jQuery-File-Upload-9.19.2/js/jquery.fileupload-image.js"></script>
<script src="~/Scripts/jQuery-File-Upload-9.19.2/js/jquery.fileupload-audio.js"></script>
<script src="~/Scripts/jQuery-File-Upload-9.19.2/js/jquery.fileupload-video.js"></script>
<script src="~/Scripts/jQuery-File-Upload-9.19.2/js/jquery.fileupload-validate.js"></script>
<script src="~/Scripts/viewer.min.js"></script>
<script src="~/Scripts/bootbox.min.js"></script>
<script src="~/Scripts/ValidationFunction.js"></script>

<style>
    .body {
        background-color: white;
    }
</style>

<script>
    $(document).ready(function () {
        $('#imgDiv ul li img').trigger("click");

        $('#documentfile').attr("disabled", true);

    });


    function loadfileloader(docname) {

        $('#documentfile').attr("disabled", true);
        $("#files").empty();
        var documentid = $('#Documents').val();
        if (documentid != "") {

            $('#documentfile').attr("disabled", false);

        }


        if ($("#fileinfo").valid()) {
            uploadButton = $('<button/>')
            .addClass('btn btn-primary')
            .prop('disabled', true)
            .text('Processing...')
            .on('click', function () {
                var $this = $(this),
                data = $this.data();
                $this
               .off('click')
               .text('Abort')
               .on('click', function () {
                   $this.remove();
                   data.abort();
               });
                data.submit().always(function () {
                    $this.remove();
                });
            });
            $('#documentfile').fileupload({
               
                type: 'POST',
                url: '@Url.Content("~/Policies/ImageFiles?")' + "docname=" + docname,
            autoUpload: false,
            acceptFileTypes: /(\.|\/)(pdf)$/i,
            maxFileSize: 2097152,
            previewMaxWidth: 100,
            previewMaxHeight: 100,

        }).off('fileuploadadd').on('fileuploadadd', function (e, data) {
            $("#files").empty();
            data.context = $('<div/>').appendTo('#files');
            $.each(data.files, function (index, file) {
                var node = $('<p/>')
                        .append($('<span/>').text(file.name));
                if (!index) {
                    node
                        .append('<br>')
                        .append(uploadButton.clone(true).data(data));
                }
                node.appendTo(data.context);
            });

        }).off('fileuploadprocessalways').on('fileuploadprocessalways', function (e, data) {

            var index = data.index,
                file = data.files[index],
                node = $(data.context.children()[index]);
            if (file.preview) {
                node
                    .prepend('<br>')
                    .prepend(file.preview);
            }
            if (file.error) {
                node
                    .append('<br>')
                    .append($('<span class="text-danger"/>').text(file.error));
            }
            if (index + 1 === data.files.length) {
                data.context.find('button')
                    .text('Upload')
                    .prop('disabled', !!data.files.error);
            }
        }).off('fileuploadprogressall').on('fileuploadprogressall', function (e, data) {

            $('#progress .progress-bar').css('width', '100%');

        }).off('fileuploaddone').on('fileuploaddone', function (e, data) {


            bootbox.alert("Document succefully uploaded");

            $('#progress .progress-bar').css('width', '0%');
            $("#files").empty();

        }).off('fileuploadfail').on('fileuploadfail', function (e, data) {
            $.each(data.files, function (index) {
                var error = $('<span class="text-danger"/>').text('File upload failed.');
                $(data.context.children()[index])
                    .append('<br>')
                    .append(error);
            });
        }).prop('disabled', !$.support.fileInput)
        .parent().addClass($.support.fileInput ? undefined : 'disabled');
    }
}



var returncontent;
function ShowDocuments(returncontent) {
    debugger;
    if ($("#fileinfo").valid()) {
        $.ajax({
            type: "GET",
            url: '@Url.Content("~/EmployeeDocuments/GetDocuments")',
                data:
                    {
                        Documents: $("#Documents").val(),
                        functiontype: returncontent
                    },
                success: function (data) {
                    if (data == "Success") {
                        window.location.href = '@Url.Action("ViewDocuments", "EmployeeDocuments")';
                    }
                    else {
                        $(".errorspan").show();
                    }
                }

            });
        }
    }
</script>



<div class="card card-shadow">
    <div class="card-header text-center">
        Upload Policy Documents
    </div>
    <div class="card-body">
        <div class="label-600">

            <div class="form-group">
                <form enctype="multipart/form-data" method="post" name="file" id="fileinfo" class="form-signin">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PolicyName)
                    </div>

                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.PolicyName, new System.Web.Mvc.SelectList(ViewBag.Documents, "value", "Text"), new { @onchange = "loadfileloader(this.value)", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PolicyName)
                    </div>
                    <br />
                    <div class="text-right">
                        <span class="btn btn-success fileinput-button ">
                            <i class="fa fa-plus"></i>
                            <span>Select File</span>
                            <input type="file" id="documentfile" name="files[]" value="pick" accept=".pdf" />
                        </span>
                    </div>
                </form>
            </div>

            <div id="progress" class="progress">
                <div class="progress-bar progress-bar-success"></div>
            </div>
            <div id="files" class="files"></div>
            <br>
        </div>
        <div class="formRow field-validation-error f12size text-center">
            <span class="errorspan" style="display: none">No Data Found</span>
        </div>
        <div class="text-right">

            <button type="button" onclick="ShowDocuments('Download')" class="btn btn-primary btn-sm">Download </button>
            &nbsp;
            <button type="button" onclick="ShowDocuments('Show')" class="btn btn-primary btn-sm">Show Documents</button>&nbsp;

        </div>
    </div>
</div>




<div class="p-t-15">
    @if (ViewBag.Image != null)
    {
        <div id="imgDiv">
            <ul class="images">
                <li>
                    <img id="image" src='data:image/png;base64,@ViewBag.Image' alt="mtsin.com" class="img-polaroid img-thumbnail" style="width: 145px; height: 170px; border: solid black">
                </li>

            </ul>
        </div>
        <script>

            $('.images').viewer({

                inline: false
            });

        </script>
    }

</div>
<br />
<br />



