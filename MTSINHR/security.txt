@model MTS.LoginModels.SecurityQuestionModel
@*@using MTS.ResourceExtension;*@
@{
    ViewBag.Title = "SecurityQuestions";
    Layout = Url.Content("~/views/shared/_AccountLayout.cshtml");}

   @* //if (Model.Message != null && Model.Message != "")
    //{
    //    Model.Message = this.LocalResources("~/Areas/MTS.Login/Views/Logon.cshtml", Model.Message);
    //}*@

    
    

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/sha1.js")" type="text/javascript"></script>
<script type="text/javascript">
    function encryptPassword() {
        if ($('#frmSecQuestions').valid()) {
            $('#NewPassword').val(CryptoJS.SHA1($('#NewPassword').val()));
            $('#ConfirmPassword').val(CryptoJS.SHA1($('#ConfirmPassword').val()));
            return true;
        }
        return false;
    }
</script>
@using (Html.BeginForm("/SecurityQuestions", "Account", FormMethod.Post, new {@class="form-signin" @id = "frmSecQuestions", @name = "frmSecQuestions", onsubmit = "encryptPassword()" }))
{
   
    @Html.HiddenFor(chngpwd => chngpwd.HashConfirmPassword)
    @Html.HiddenFor(chngpwd => chngpwd.HashCurrentPassword)

   
                <div class="card text-center card-shadow">
                    <div class="card-header form-signin-heading">
                        User Login
                    </div>
                    <div class="card-body">
               
            
                @Html.PasswordFor(chngpwd => chngpwd.NewPassword, new { @class = "required form-cotrol", @placeholder = "New Password"})
            <div>
                @Html.ValidationMessageFor(chngpwd => chngpwd.NewPassword)
            </div>
        
           
                @Html.PasswordFor(chngpwd => chngpwd.ConfirmPassword, new {  @class = "required form-cotrol", @placeholder = "Confirm Password"})
            <div>
                @Html.ValidationMessageFor(chngpwd => chngpwd.ConfirmPassword)
            </div>
            </div>
        </div>
        
                @Html.DropDownListFor(secinfo => secinfo.SelectedSecQsn, new SelectList(Model.SecurityQsns, "Value", "Text"), "--Select--", new { style = "width: 250px;", @class = "required" })
            <div>
                @Html.ValidationMessageFor(secinfo => secinfo.SelectedSecQsn, "The Security question field is required.")
            </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span5 pad-top5 text-right">
                <b>Answer</b>
            </div>
            <div class="span6">
                @Html.TextBoxFor(secinfo => secinfo.SecAns, new { @class = "required" })
            <div>
                @Html.ValidationMessageFor(secinfo => secinfo.SecAns, "The Security answer field is required.")
            </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span5 pad-top5 text-right">
                &nbsp;
            </div>
            <div class="span6 validation-summary-errors text-left">
                @Html.DisplayFor(secinfo => secinfo.Message)
            </div>
        </div>
        <div class="btm_b clearfix">
            <input type="submit" name="button" value="Submit" class="btn btn-info pull-right" />
        </div>
    </div>
}